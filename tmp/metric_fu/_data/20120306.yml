--- 
:hotspots: 
  :files: 
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/foreigner_methods.rb:27
      hash: -5132465145
      method_name: 
    :details: 
      :flog: complexity is 88.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb
      hash: 5642857596
      method_name: 
    :details: 
      :rcov: average uncovered code is 80.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/migration/command_recorder/foreigner_methods.rb
      hash: 906200728
      method_name: 
    :details: 
      :rcov: average uncovered code is 75.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/table/foreigner_methods.rb
      hash: -6273290065
      method_name: 
    :details: 
      :rcov: average uncovered code is 74.1%
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: 1087861208
      method_name: 
    :details: 
      :rcov: average uncovered code is 70.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/migration/command_recorder/schema_methods.rb
      hash: 7781705196
      method_name: 
    :details: 
      :rcov: average uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb
      hash: -8150934505
      method_name: 
    :details: 
      :rcov: average uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/abstract_adapter/index_methods.rb
      hash: 6405364724
      method_name: 
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/table/comment_methods.rb
      hash: -6455354201
      method_name: 
    :details: 
      :rcov: average uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: -649175561
      method_name: 
    :details: 
      :rcov: average uncovered code is 65.8%
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb:28
      hash: -1061723633
      method_name: 
    :details: 
      :flog: complexity is 63.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/core_ext/active_record/schema_dumper.rb:15
      hash: 6672075476
      method_name: 
    :details: 
      :flog: complexity is 59.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/engine.rb:43
      hash: -7739088705
      method_name: 
    :details: 
      :flog: complexity is 54.5
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/tools.rb
      hash: 430668596
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 4 times)
      :rcov: average uncovered code is 50.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb:27
      hash: 2506636716
      method_name: 
    :details: 
      :flog: complexity is 41.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb
      hash: -2034572997
      method_name: 
    :details: 
      :rcov: average uncovered code is 33.3%
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
      hash: -8254785737
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 3 times)
      :rcov: average uncovered code is 29.6%
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb:71
      hash: 238274060
      method_name: 
    :details: 
      :flog: complexity is 29.5
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:90
      hash: -8471838237
      method_name: 
    :details: 
      :flog: complexity is 26.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/foreigner_methods.rb:5
      hash: -438979465
      method_name: 
    :details: 
      :flog: complexity is 24.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/schema_dumper/foreigner_methods.rb
      hash: 7560977132
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 5 times)
      :rcov: average uncovered code is 23.3%
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:16
      hash: 6627858912
      method_name: 
    :details: 
      :flog: complexity is 21.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:113
      hash: 6425944136
      method_name: 
    :details: 
      :flog: complexity is 20.5
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:75
      hash: 8188106208
      method_name: 
    :details: 
      :flog: complexity is 19.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb:55
      hash: 502898036
      method_name: 
    :details: 
      :flog: complexity is 19.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/comment_methods.rb:18
      hash: -7257033721
      method_name: 
    :details: 
      :flog: complexity is 16.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb
      hash: 1370794920
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 8 times)
      :rcov: uncovered code is 13.9%
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb:40
      hash: 6042665184
      method_name: 
    :details: 
      :flog: complexity is 14.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120105112744_create_pets.rb:2
      hash: -7563406533
      method_name: 
    :details: 
      :flog: complexity is 13.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb:2
      hash: -6894074533
      method_name: 
    :details: 
      :flog: complexity is 13.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/schema.rb:74
      hash: -2366749233
      method_name: 
    :details: 
      :flog: complexity is 13.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/schema.rb:40
      hash: -3147024945
      method_name: 
    :details: 
      :flog: complexity is 11.7
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/foreigner_methods.rb:15
      hash: -4332544837
      method_name: 
    :details: 
      :flog: complexity is 11.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
      hash: 1983446268
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 3 times)
      :rcov: average uncovered code is 11.1%
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/comment_methods.rb:5
      hash: -3230120913
      method_name: 
    :details: 
      :flog: complexity is 11.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:144
      hash: 7206118472
      method_name: 
    :details: 
      :flog: complexity is 11.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:38
      hash: -4251233973
      method_name: 
    :details: 
      :flog: complexity is 10.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:33
      hash: -4251402933
      method_name: 
    :details: 
      :flog: complexity is 10.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:62
      hash: -2105236077
      method_name: 
    :details: 
      :flog: complexity is 10.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120106163544_create_users.rb:2
      hash: 7873649716
      method_name: 
    :details: 
      :flog: complexity is 10.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb:63
      hash: 762877300
      method_name: 
    :details: 
      :flog: complexity is 10.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb:27
      hash: -277174921
      method_name: 
    :details: 
      :flog: complexity is 10.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb:45
      hash: 242851188
      method_name: 
    :details: 
      :flog: complexity is 10.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb:37
      hash: -17128073
      method_name: 
    :details: 
      :flog: complexity is 10.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:57
      hash: -3731174069
      method_name: 
    :details: 
      :flog: complexity is 10.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:64
      hash: -3471228597
      method_name: 
    :details: 
      :flog: complexity is 9.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb
      hash: 8280735336
      method_name: 
    :details: 
      :rcov: average uncovered code is 9.5%
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb:13
      hash: -1321939441
      method_name: 
    :details: 
      :flog: complexity is 8.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:48
      hash: 6966895080
      method_name: 
    :details: 
      :flog: complexity is 8.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120201163544_create_owners_and_breeds.rb:2
      hash: -4078773281
      method_name: 
    :details: 
      :flog: complexity is 8.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/support/explorer.rb:22
      hash: 1487960656
      method_name: 
    :details: 
      :flog: complexity is 8.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/support/explorer.rb:40
      hash: 2007986768
      method_name: 
    :details: 
      :flog: complexity is 8.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/support/explorer.rb:61
      hash: 2528114256
      method_name: 
    :details: 
      :flog: complexity is 8.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/support/explorer.rb:6
      hash: -6361328461
      method_name: 
    :details: 
      :flog: complexity is 8.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/schema.rb:53
      hash: -2886876721
      method_name: 
    :details: 
      :flog: complexity is 7.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:6
      hash: 405522212
      method_name: 
    :details: 
      :flog: complexity is 7.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:75
      hash: 1309996240
      method_name: 
    :details: 
      :flog: complexity is 7.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:69
      hash: 1050084560
      method_name: 
    :details: 
      :flog: complexity is 7.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:63
      hash: 1049881808
      method_name: 
    :details: 
      :flog: complexity is 7.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:57
      hash: 789970128
      method_name: 
    :details: 
      :flog: complexity is 7.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:51
      hash: 789767376
      method_name: 
    :details: 
      :flog: complexity is 7.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:43
      hash: -5138071781
      method_name: 
    :details: 
      :flog: complexity is 7.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120106163810_create_demography_countries.rb:2
      hash: -2470244921
      method_name: 
    :details: 
      :flog: complexity is 7.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:11
      hash: -250420013
      method_name: 
    :details: 
      :flog: complexity is 7.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/schema_methods.rb:14
      hash: 2610414776
      method_name: 
    :details: 
      :flog: complexity is 6.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/support/explorer.rb:77
      hash: 2788363856
      method_name: 
    :details: 
      :flog: complexity is 6.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb:2
      hash: 5693764872
      method_name: 
    :details: 
      :flog: complexity is 6.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/schema.rb:83
      hash: -2106736177
      method_name: 
    :details: 
      :flog: complexity is 6.5
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:136
      hash: 6946139208
      method_name: 
    :details: 
      :flog: complexity is 6.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:45
      hash: 529855696
      method_name: 
    :details: 
      :flog: complexity is 6.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:30
      hash: 269639888
      method_name: 
    :details: 
      :flog: complexity is 6.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:40
      hash: 529686736
      method_name: 
    :details: 
      :flog: complexity is 6.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:35
      hash: 269808848
      method_name: 
    :details: 
      :flog: complexity is 6.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:17
      hash: -5918077157
      method_name: 
    :details: 
      :flog: complexity is 5.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:14
      hash: -4771462837
      method_name: 
    :details: 
      :flog: complexity is 5.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:9
      hash: -7561993757
      method_name: 
    :details: 
      :flog: complexity is 5.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:26
      hash: -4511348405
      method_name: 
    :details: 
      :flog: complexity is 5.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:21
      hash: -4511517365
      method_name: 
    :details: 
      :flog: complexity is 5.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:21
      hash: 9626832
      method_name: 
    :details: 
      :flog: complexity is 5.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:25
      hash: 9762000
      method_name: 
    :details: 
      :flog: complexity is 5.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:17
      hash: -250217261
      method_name: 
    :details: 
      :flog: complexity is 5.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb:32
      hash: -4123761541
      method_name: 
    :details: 
      :flog: complexity is 5.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:46
      hash: -3991254709
      method_name: 
    :details: 
      :flog: complexity is 5.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:50
      hash: -3731410613
      method_name: 
    :details: 
      :flog: complexity is 5.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:162
      hash: 7726144584
      method_name: 
    :details: 
      :flog: complexity is 5.5
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb:6
      hash: 1521293176
      method_name: 
    :details: 
      :flog: complexity is 5.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/schema_methods_spec.rb:8
      hash: -3877020273
      method_name: 
    :details: 
      :flog: complexity is 5.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/schema_methods_spec.rb:17
      hash: 2226495104
      method_name: 
    :details: 
      :flog: complexity is 5.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb:13
      hash: -537356937
      method_name: 
    :details: 
      :flog: complexity is 5.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb:7
      hash: 5558219124
      method_name: 
    :details: 
      :flog: complexity is 5.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb:19
      hash: -537154185
      method_name: 
    :details: 
      :flog: complexity is 5.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/schema.rb:23
      hash: -3667017265
      method_name: 
    :details: 
      :flog: complexity is 5.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/schema.rb:29
      hash: -3666814513
      method_name: 
    :details: 
      :flog: complexity is 5.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:152
      hash: 7466097736
      method_name: 
    :details: 
      :flog: complexity is 5.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120209094937_create_cities_table.rb:2
      hash: -4409304365
      method_name: 
    :details: 
      :flog: complexity is 5.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb:2
      hash: 855341596
      method_name: 
    :details: 
      :flog: complexity is 4.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:28
      hash: -3145220717
      method_name: 
    :details: 
      :flog: complexity is 4.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb:13
      hash: 2804149084
      method_name: 
    :details: 
      :flog: complexity is 4.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:59
      hash: -4877822181
      method_name: 
    :details: 
      :flog: complexity is 4.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/tools.rb:24
      hash: -8038074885
      method_name: 
    :details: 
      :flog: complexity is 4.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/schema_methods.rb:31
      hash: 3130407096
      method_name: 
    :details: 
      :flog: complexity is 4.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/support/explorer.rb:57
      hash: 2268270160
      method_name: 
    :details: 
      :flog: complexity is 4.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120301153650_demography_population_statisctics.rb:2
      hash: 566481276
      method_name: 
    :details: 
      :flog: complexity is 4.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/schema.rb:60
      hash: -2626931249
      method_name: 
    :details: 
      :flog: complexity is 4.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/schema.rb:88
      hash: -2106567217
      method_name: 
    :details: 
      :flog: complexity is 4.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:44
      hash: -2625262189
      method_name: 
    :details: 
      :flog: complexity is 3.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:20
      hash: -3145491053
      method_name: 
    :details: 
      :flog: complexity is 3.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:41
      hash: 6966658536
      method_name: 
    :details: 
      :flog: complexity is 3.7
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb:10
      hash: 7208859224
      method_name: 
    :details: 
      :flog: complexity is 3.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/schema_methods.rb:7
      hash: 8440909012
      method_name: 
    :details: 
      :flog: complexity is 3.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120106163711_create_demography_schema.rb:2
      hash: -3000949189
      method_name: 
    :details: 
      :flog: complexity is 3.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:50
      hash: -2365350509
      method_name: 
    :details: 
      :flog: complexity is 3.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/tools.rb:12
      hash: -8298189317
      method_name: 
    :details: 
      :flog: complexity is 2.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/tools.rb:18
      hash: -8297986565
      method_name: 
    :details: 
      :flog: complexity is 2.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120301152819_create_demography_nationalities.rb:2
      hash: 1350506656
      method_name: 
    :details: 
      :flog: complexity is 2.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:73
      hash: -4357931237
      method_name: 
    :details: 
      :flog: complexity is 2.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:26
      hash: -5658064101
      method_name: 
    :details: 
      :flog: complexity is 2.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:54
      hash: -4877991141
      method_name: 
    :details: 
      :flog: complexity is 2.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:30
      hash: -5398220005
      method_name: 
    :details: 
      :flog: complexity is 2.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:65
      hash: -4617910501
      method_name: 
    :details: 
      :flog: complexity is 2.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:48
      hash: -5137902821
      method_name: 
    :details: 
      :flog: complexity is 2.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:69
      hash: -4617775333
      method_name: 
    :details: 
      :flog: complexity is 2.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:20
      hash: -5658266853
      method_name: 
    :details: 
      :flog: complexity is 2.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:77
      hash: -4357796069
      method_name: 
    :details: 
      :flog: complexity is 2.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/schema_methods.rb:41
      hash: 3390453944
      method_name: 
    :details: 
      :flog: complexity is 2.7
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:11
      hash: -3405504109
      method_name: 
    :details: 
      :flog: complexity is 2.7
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:36
      hash: -2885241453
      method_name: 
    :details: 
      :flog: complexity is 2.7
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/schema_methods_spec.rb:18
      hash: 2226528896
      method_name: 
    :details: 
      :flog: complexity is 2.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120207103858_remove_comments_on_countries_table.rb:2
      hash: 8567050440
      method_name: 
    :details: 
      :flog: complexity is 2.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      hash: -7321703185
      method_name: 
    :details: 
      :flay: found 2 code duplications
      :reek: found 17 code smells
      :roodi: found 3 design problems
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120224204546_add_demography_citizens_active_column.rb:2
      hash: -3261600665
      method_name: 
    :details: 
      :flog: complexity is 2.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:55
      hash: 7668012512
      method_name: 
    :details: 
      :flog: complexity is 1.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/support/explorer.rb:84
      hash: 3048309328
      method_name: 
    :details: 
      :flog: complexity is 1.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb:16
      hash: 5262727392
      method_name: 
    :details: 
      :flog: complexity is 1.7
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:35
      hash: 6706746856
      method_name: 
    :details: 
      :flog: complexity is 1.7
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/foreigner_methods.rb
      hash: -1391734077
      method_name: 
    :details: 
      :flay: found 1 code duplications
      :reek: found 9 code smells
      :roodi: found 2 design problems
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/core_ext/active_record/schema_dumper.rb
      hash: -941688057
      method_name: 
    :details: 
      :reek: found 5 code smells
      :roodi: found 2 design problems
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/support/explorer.rb
      hash: 3571269376
      method_name: 
    :details: 
      :flay: found 3 code duplications
      :reek: found 2 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:49
      hash: -5137869029
      method_name: 
    :details: 
      :flog: complexity is 1.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:31
      hash: -5398186213
      method_name: 
    :details: 
      :flog: complexity is 1.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:78
      hash: -4357762277
      method_name: 
    :details: 
      :flog: complexity is 1.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:60
      hash: -4618079461
      method_name: 
    :details: 
      :flog: complexity is 1.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:21
      hash: -5658233061
      method_name: 
    :details: 
      :flog: complexity is 1.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:131
      hash: 6945970248
      method_name: 
    :details: 
      :flog: complexity is 1.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
      hash: 4585243728
      method_name: 
    :details: 
      :reek: found 10 code smells
      :roodi: found 2 design problems
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/schema_methods_spec.rb:19
      hash: 2226562688
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/schema_methods_spec.rb:10
      hash: 2226258560
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120207112916_remove_comment_on_pets_table.rb:6
      hash: 1468120008
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120208114020_remove_some_comments_on_citizens.rb:6
      hash: -616004521
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120207112916_remove_comment_on_pets_table.rb:2
      hash: 1467984840
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120207103858_remove_comments_on_countries_table.rb:7
      hash: 8567219400
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:12
      hash: -250386221
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120208114020_remove_some_comments_on_citizens.rb:2
      hash: -616139689
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:77
      hash: 1310063824
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:80
      hash: -4097985765
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:58
      hash: -3731140277
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:27
      hash: -4511314613
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:39
      hash: -4251200181
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/schema_methods.rb:25
      hash: 2870495416
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:65
      hash: -3471194805
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:15
      hash: -4771429045
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:51
      hash: -3731376821
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:55
      hash: -854715717
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:27
      hash: -1634788677
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:9
      hash: 860143040
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb:12
      hash: -7418378673
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb:35
      hash: 5782787296
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb:18
      hash: -4643652485
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb:6
      hash: -5662566177
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:18
      hash: -1894801733
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:46
      hash: -1114728773
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:37
      hash: -1374741829
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/schema_methods.rb:15
      hash: -39410469
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:10
      hash: 6186484200
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/foreigner_methods.rb:10
      hash: -4332713797
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/foreigner_methods.rb:5
      hash: -3456812297
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:20
      hash: 6446531048
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:5
      hash: -1595352405
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:15
      hash: 6186653160
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/schema_methods.rb:10
      hash: -39579429
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:25
      hash: 6446700008
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:30
      hash: 6706577896
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/schema_methods.rb:20
      hash: 220467416
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/schema_methods.rb:5
      hash: -5843804673
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb:48
      hash: 1489944484
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120201163544_create_owners_and_breeds.rb
      hash: 4388656340
      method_name: 
    :details: 
      :flay: found 1 code duplications
      :reek: found 6 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/schema_methods_spec.rb:20
      hash: 2486305408
      method_name: 
    :details: 
      :flog: complexity is 1.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb:64
      hash: 762911092
      method_name: 
    :details: 
      :flog: complexity is 1.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120301171826_remove_demography_nationalities.rb:2
      hash: -850595465
      method_name: 
    :details: 
      :flog: complexity is 1.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb:28
      hash: -277141129
      method_name: 
    :details: 
      :flog: complexity is 1.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:78
      hash: 1310097616
      method_name: 
    :details: 
      :flog: complexity is 1.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:67
      hash: -3471127221
      method_name: 
    :details: 
      :flog: complexity is 1.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/tools.rb
      hash: -781871881
      method_name: 
    :details: 
      :flay: found 1 code duplications
      :reek: found 3 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb:65
      hash: 762944884
      method_name: 
    :details: 
      :flog: complexity is 1.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/schema_methods.rb
      hash: -6770945245
      method_name: 
    :details: 
      :flay: found 1 code duplications
      :reek: found 2 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb
      hash: -5928351689
      method_name: 
    :details: 
      :flay: found 4 code duplications
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb
      hash: 6323478076
      method_name: 
    :details: 
      :reek: found 4 code smells
      :roodi: found 1 design problems
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: 8546078712
      method_name: 
    :details: 
      :reek: found 5 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/foreigner_methods.rb
      hash: 6314518312
      method_name: 
    :details: 
      :reek: found 5 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120105112744_create_pets.rb
      hash: -3746225101
      method_name: 
    :details: 
      :reek: found 4 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/schema.rb
      hash: -3164723777
      method_name: 
    :details: 
      :flay: found 3 code duplications
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb
      hash: 1050579660
      method_name: 
    :details: 
      :reek: found 4 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120301153650_demography_population_statisctics.rb
      hash: -2384342041
      method_name: 
    :details: 
      :reek: found 3 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb
      hash: 7303597252
      method_name: 
    :details: 
      :flay: found 2 code duplications
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120106163810_create_demography_countries.rb
      hash: 7907903364
      method_name: 
    :details: 
      :reek: found 3 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120106163544_create_users.rb
      hash: -7030904945
      method_name: 
    :details: 
      :reek: found 3 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/comment_methods.rb
      hash: -1618040573
      method_name: 
    :details: 
      :reek: found 3 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb
      hash: 661123472
      method_name: 
    :details: 
      :reek: found 2 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: README.markdown
      hash: 8130956648
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 9 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/engine.rb
      hash: -6434322413
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 11 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/dummy/db/migrate/20120224204546_add_demography_citizens_active_column.rb
      hash: 2470251596
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 3 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/abstract/schema_statements.rb
      hash: 2861883740
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 3 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/active_record/schema_dumper_spec.rb
      hash: 7304621648
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 12 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/abstract_adapter.rb
      hash: -7582920529
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 4 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/core_ext/active_record/schema_dumper.rb
      hash: -1295772969
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 4 times)
      :rcov: uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/dummy/log/development.log
      hash: 181029412
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 3 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: Rakefile
      hash: -5999668265
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 5 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/dummy/db/migrate/20120106163544_create_users.rb
      hash: 2633245580
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 3 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/dummy/db/migrate/20120105112744_create_pets.rb
      hash: 7599529608
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 4 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: README.rdoc
      hash: -7076801857
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 3 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/support/explorer.rb
      hash: -2522372021
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 7 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/schema_dumper.rb
      hash: 4982535756
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 7 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/dummy/db/schema.rb
      hash: 7985561556
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 20 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters.rb
      hash: 4519541788
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 3 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: Gemfile
      hash: 6303772648
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 9 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/postgresql_adapter.rb
      hash: -268358085
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 7 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/abstract/schema_definitions.rb
      hash: -1796413397
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 3 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: Gemfile.lock
      hash: -8306810401
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 8 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/foreign_keys_spec.rb
      hash: -5927190441
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 5 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/schema_dumper/schema_methods.rb
      hash: 8302540704
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 4 times)
      :rcov: average uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/dummy/config/database.yml
      hash: -5779544573
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 3 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: .gitignore
      hash: -8195556005
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 7 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120301152819_create_demography_nationalities.rb
      hash: 243473184
      method_name: 
    :details: 
      :reek: found 2 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/support/pg_comment_getter.rb
      hash: -3845296901
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 4 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/indexes_spec.rb
      hash: -4642946661
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 3 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb
      hash: 6383931268
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 5 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/dummy/db/migrate/20120106163831_create_demography_countries.rb
      hash: 2238785148
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 3 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/version.rb
      hash: 6544016200
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 3 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/comment_methods_spec.rb
      hash: -203062709
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 6 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb
      hash: -2490247337
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 3 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power.rb
      hash: 3059454188
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 8 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      hash: -2193948273
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 10 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: MIT-LICENSE
      hash: 3657122164
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 3 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: pg_power.gemspec
      hash: -6194798489
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 4 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/migration/command_recorder.rb
      hash: -3041914249
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 5 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/dummy/db/migrate/20120209094937_create_cities_table.rb
      hash: -4304860117
      method_name: 
    :details: 
      :churn: detected high level of churn (changed 3 times)
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb
      hash: -1693413149
      method_name: 
    :details: 
      :flay: found 2 code duplications
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120209094937_create_cities_table.rb
      hash: -1224395665
      method_name: 
    :details: 
      :reek: found 2 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120208114020_remove_some_comments_on_citizens.rb
      hash: 4933798544
      method_name: 
    :details: 
      :reek: found 1 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/config/application.rb
      hash: 6882179028
      method_name: 
    :details: 
      :reek: found 1 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: 7523512536
      method_name: 
    :details: 
      :flay: found 1 code duplications
      :reek: found 1 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120224204546_add_demography_citizens_active_column.rb
      hash: 4161136752
      method_name: 
    :details: 
      :reek: found 1 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120106163711_create_demography_schema.rb
      hash: -3974714581
      method_name: 
    :details: 
      :reek: found 1 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/schema_methods.rb
      hash: -6409953197
      method_name: 
    :details: 
      :reek: found 1 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/app/models/demography/country.rb
      hash: -5589827285
      method_name: 
    :details: 
      :reek: found 1 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120301171826_remove_demography_nationalities.rb
      hash: 8479660096
      method_name: 
    :details: 
      :reek: found 1 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
      hash: -6737071393
      method_name: 
    :details: 
      :reek: found 1 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120207103858_remove_comments_on_countries_table.rb
      hash: 4424304164
      method_name: 
    :details: 
      :reek: found 1 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/app/models/demography/citizen.rb
      hash: 6255689096
      method_name: 
    :details: 
      :reek: found 1 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120207112916_remove_comment_on_pets_table.rb
      hash: -5471392177
      method_name: 
    :details: 
      :reek: found 1 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/app/controllers/application_controller.rb
      hash: -1926337193
      method_name: 
    :details: 
      :reek: found 1 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb
      hash: -5288324377
      method_name: 
    :details: 
      :reek: found 1 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/app/models/user.rb
      hash: -6382895441
      method_name: 
    :details: 
      :reek: found 1 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb
      hash: -8005974533
      method_name: 
    :details: 
      :roodi: found 1 design problems
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/engine.rb
      hash: -5210707193
      method_name: 
    :details: 
      :flay: found 1 code duplications
      :reek: found 1 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/schema_dumper/comment_methods.rb
      hash: 3376214152
      method_name: 
    :details: 
      :rcov: average uncovered code is 0.0%
  :methods: 
  - :location: !ruby/object:MetricFu::Location 
      class_name: main
      file_path: 
      hash: 4263207726
      method_name: main#none
      simple_method_name: "#none"
    :details: 
      :flog: complexity is 146.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :ForeignerMethods)
      file_path: lib/pg_power/migration/command_recorder/foreigner_methods.rb
      hash: 1709551650
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :ForeignerMethods)#invert_add_foreign_key
      simple_method_name: "#invert_add_foreign_key"
    :details: 
      :rcov: uncovered code is 91.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :IndexMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
      hash: 8520247182
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :IndexMethods)#index_name_for_remove
      simple_method_name: "#index_name_for_remove"
    :details: 
      :rcov: uncovered code is 88.9%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :ForeignerMethods)
      file_path: lib/pg_power/connection_adapters/table/foreigner_methods.rb
      hash: -8498369808
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :ForeignerMethods)#references_with_foreign_keys
      simple_method_name: "#references_with_foreign_keys"
    :details: 
      :rcov: uncovered code is 88.9%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :SchemaMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb
      hash: -7731829224
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :SchemaMethods)#drop_table_with_schema_option
      simple_method_name: "#drop_table_with_schema_option"
    :details: 
      :rcov: uncovered code is 80.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :SchemaMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb
      hash: -6644899621
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :SchemaMethods)#create_table_with_schema_option
      simple_method_name: "#create_table_with_schema_option"
    :details: 
      :rcov: uncovered code is 80.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: 631139120
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#remove_column_comments
      simple_method_name: "#remove_column_comments"
    :details: 
      :rcov: uncovered code is 80.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: -1949668943
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#set_column_comments
      simple_method_name: "#set_column_comments"
    :details: 
      :rcov: uncovered code is 80.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)
      file_path: lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: 132086836
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#invert_set_column_comment
      simple_method_name: "#invert_set_column_comment"
    :details: 
      :rcov: uncovered code is 80.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)
      file_path: lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: 1663870225
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#invert_set_column_comments
      simple_method_name: "#invert_set_column_comments"
    :details: 
      :rcov: uncovered code is 75.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: 1562984165
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#remove_column_comment
      simple_method_name: "#remove_column_comment"
    :details: 
      :rcov: uncovered code is 75.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: PgPower
      file_path: lib/pg_power/tools.rb
      hash: -671035615
      method_name: PgPower#drop_schema
      simple_method_name: "#drop_schema"
    :details: 
      :rcov: uncovered code is 75.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)
      file_path: lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: -1067740355
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#invert_set_table_comment
      simple_method_name: "#invert_set_table_comment"
    :details: 
      :rcov: uncovered code is 75.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: -411453173
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#set_column_comment
      simple_method_name: "#set_column_comment"
    :details: 
      :rcov: uncovered code is 75.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: 867849025
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#set_table_comment
      simple_method_name: "#set_table_comment"
    :details: 
      :rcov: uncovered code is 75.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: PgPower
      file_path: lib/pg_power/tools.rb
      hash: 856518853
      method_name: PgPower#create_schema
      simple_method_name: "#create_schema"
    :details: 
      :rcov: uncovered code is 75.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: -778053273
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#remove_table_comment
      simple_method_name: "#remove_table_comment"
    :details: 
      :rcov: uncovered code is 75.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)
      file_path: lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: -775305807
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#remove_column_comments
      simple_method_name: "#remove_column_comments"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)
      file_path: lib/pg_power/migration/command_recorder/schema_methods.rb
      hash: -5299687700
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)#invert_create_schema
      simple_method_name: "#invert_create_schema"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb
      hash: 8492924571
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#supports_comments?
      simple_method_name: "#supports_comments?"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)
      file_path: lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: -1017434719
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#remove_column_comment
      simple_method_name: "#remove_column_comment"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)
      file_path: lib/pg_power/migration/command_recorder/schema_methods.rb
      hash: -5235198720
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)#drop_schema
      simple_method_name: "#drop_schema"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :SchemaMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb
      hash: 5439186642
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :SchemaMethods)#drop_schema
      simple_method_name: "#drop_schema"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)
      file_path: lib/pg_power/migration/command_recorder/schema_methods.rb
      hash: -4853884921
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)#invert_drop_schema
      simple_method_name: "#invert_drop_schema"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :IndexMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/index_methods.rb
      hash: -5134165089
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :IndexMethods)#supports_partial_index?
      simple_method_name: "#supports_partial_index?"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)
      file_path: lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: 1430926400
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#set_column_comments
      simple_method_name: "#set_column_comments"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)
      file_path: lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: -314775289
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#set_column_comment
      simple_method_name: "#set_column_comment"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/table/comment_methods.rb
      hash: -4614122767
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#remove_column_comments
      simple_method_name: "#remove_column_comments"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :ForeignerMethods)
      file_path: lib/pg_power/connection_adapters/table/foreigner_methods.rb
      hash: 7168580057
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :ForeignerMethods)#remove_foreign_key
      simple_method_name: "#remove_foreign_key"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :ForeignerMethods)
      file_path: lib/pg_power/migration/command_recorder/foreigner_methods.rb
      hash: 978964861
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :ForeignerMethods)#add_foreign_key
      simple_method_name: "#add_foreign_key"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :ForeignerMethods)
      file_path: lib/pg_power/connection_adapters/table/foreigner_methods.rb
      hash: 8146950042
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :ForeignerMethods)#foreign_key
      simple_method_name: "#foreign_key"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/table/comment_methods.rb
      hash: -4587815814
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#set_table_comment
      simple_method_name: "#set_table_comment"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb
      hash: 3623990942
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)#foreign_keys
      simple_method_name: "#foreign_keys"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)
      file_path: lib/pg_power/migration/command_recorder/schema_methods.rb
      hash: 6385265871
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)#create_schema
      simple_method_name: "#create_schema"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/table/comment_methods.rb
      hash: 4298794005
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#set_column_comment
      simple_method_name: "#set_column_comment"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :SchemaMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb
      hash: 5185679163
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :SchemaMethods)#create_schema
      simple_method_name: "#create_schema"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/table/comment_methods.rb
      hash: 5813893438
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#remove_column_comment
      simple_method_name: "#remove_column_comment"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)
      file_path: lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: 1466446298
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#remove_table_comment
      simple_method_name: "#remove_table_comment"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :ForeignerMethods)
      file_path: lib/pg_power/migration/command_recorder/foreigner_methods.rb
      hash: 39349845
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :ForeignerMethods)#remove_foreign_key
      simple_method_name: "#remove_foreign_key"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/table/comment_methods.rb
      hash: -5031800432
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#remove_table_comment
      simple_method_name: "#remove_table_comment"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)
      file_path: lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: 1306800101
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#set_table_comment
      simple_method_name: "#set_table_comment"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb
      hash: -3873363506
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)#supports_foreign_keys?
      simple_method_name: "#supports_foreign_keys?"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: -1890705025
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#supports_comments?
      simple_method_name: "#supports_comments?"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/table/comment_methods.rb
      hash: 6412166149
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#set_column_comments
      simple_method_name: "#set_column_comments"
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: SchemaStatements
      file_path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
      hash: 4774184162
      method_name: SchemaStatements#index_exists?
      simple_method_name: "#index_exists?"
    :details: 
      :reek: found 6 code smells
      :flog: complexity is 63.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: SchemaDumper
      file_path: ./lib/core_ext/active_record/schema_dumper.rb
      hash: 2422059809
      method_name: SchemaDumper#indexes
      simple_method_name: "#indexes"
    :details: 
      :reek: found 5 code smells
      :rcov: uncovered code is 0.0%
      :flog: complexity is 59.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: PostgreSQLAdapter
      file_path: ./lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb
      hash: 7130330729
      method_name: PostgreSQLAdapter#indexes
      simple_method_name: "#indexes"
    :details: 
      :reek: found 3 code smells
      :rcov: uncovered code is 13.9%
      :flog: complexity is 41.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      hash: -8095827880
      method_name: ForeignerMethods#foreign_keys
      simple_method_name: "#foreign_keys"
    :details: 
      :reek: found 9 code smells
      :flog: average complexity is 54.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: initializer
      file_path: ./lib/pg_power/engine.rb:43
      hash: -7683752494
      method_name: initializer#pg_power
      simple_method_name: "#pg_power"
    :details: 
      :flog: complexity is 54.5
  - :location: !ruby/object:MetricFu::Location 
      class_name: ActiveRecord
      file_path: lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
      hash: -633352041
      method_name: ActiveRecord#add_index_options
      simple_method_name: "#add_index_options"
    :details: 
      :rcov: uncovered code is 33.3%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :ForeignerMethods)
      file_path: lib/pg_power/schema_dumper/foreigner_methods.rb
      hash: 6548442932
      method_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :ForeignerMethods)#tables_with_foreign_keys
      simple_method_name: "#tables_with_foreign_keys"
    :details: 
      :rcov: uncovered code is 31.2%
  - :location: !ruby/object:MetricFu::Location 
      class_name: SchemaStatements
      file_path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
      hash: 5143083998
      method_name: SchemaStatements#add_index_options
      simple_method_name: "#add_index_options"
    :details: 
      :reek: found 3 code smells
      :flog: complexity is 29.5
  - :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      hash: -7402291591
      method_name: ForeignerMethods#add_foreign_key_sql
      simple_method_name: "#add_foreign_key_sql"
    :details: 
      :reek: found 4 code smells
      :flog: complexity is 26.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/schema_dumper/foreigner_methods.rb
      hash: 641164838
      method_name: ForeignerMethods#tables_with_foreign_keys
      simple_method_name: "#tables_with_foreign_keys"
    :details: 
      :reek: found 2 code smells
      :flog: complexity is 24.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: AbstractAdapter
      file_path: 
      hash: 3229684579
      method_name: AbstractAdapter#none
      simple_method_name: "#none"
    :details: 
      :flog: complexity is 21.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: SchemaDumper
      file_path: 
      hash: 3323715324
      method_name: SchemaDumper#none
      simple_method_name: "#none"
    :details: 
      :flog: complexity is 19.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/foreign_keys_spec.rb:55
      hash: -1220482478
      method_name: describe#describe#it#should remove foreign key by not remove the index when :exclude_index is true
      simple_method_name: describe#describe#it#should remove foreign key by not remove the index when :exclude_index is true
    :details: 
      :flog: complexity is 19.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: PostgreSQLAdapter
      file_path: 
      hash: -3845284552
      method_name: PostgreSQLAdapter#none
      simple_method_name: "#none"
    :details: 
      :flog: complexity is 17.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/schema_dumper/comment_methods.rb
      hash: -1322534220
      method_name: CommentMethods#dump_comments
      simple_method_name: "#dump_comments"
    :details: 
      :reek: found 3 code smells
      :flog: complexity is 16.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :ForeignerMethods)
      file_path: lib/pg_power/schema_dumper/foreigner_methods.rb
      hash: -8348772801
      method_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :ForeignerMethods)#foreign_keys
      simple_method_name: "#foreign_keys"
    :details: 
      :rcov: uncovered code is 15.4%
  - :location: !ruby/object:MetricFu::Location 
      class_name: CreatePets
      file_path: ./spec/dummy/db/migrate/20120105112744_create_pets.rb
      hash: -1619277563
      method_name: CreatePets#change
      simple_method_name: "#change"
    :details: 
      :reek: found 3 code smells
      :flog: complexity is 13.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb:40
      hash: -6113496512
      method_name: ForeignerMethods#references_with_foreign_keys
      simple_method_name: "#references_with_foreign_keys"
    :details: 
      :flog: complexity is 14.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: CreateDemographyCitizens
      file_path: ./spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb
      hash: 2333273924
      method_name: CreateDemographyCitizens#change
      simple_method_name: "#change"
    :details: 
      :reek: found 3 code smells
      :flog: complexity is 13.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: Table
      file_path: 
      hash: 1176820738
      method_name: Table#none
      simple_method_name: "#none"
    :details: 
      :flog: complexity is 13.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: create_table#demography
      file_path: ./spec/dummy/db/schema.rb:74
      hash: -2505247248
      method_name: create_table#demography.citizens
      simple_method_name: .citizens
    :details: 
      :flog: complexity is 13.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/migration/command_recorder/foreigner_methods.rb
      hash: -4697207936
      method_name: ForeignerMethods#invert_add_foreign_key
      simple_method_name: "#invert_add_foreign_key"
    :details: 
      :reek: found 5 code smells
      :flog: complexity is 11.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: CommandRecorder
      file_path: 
      hash: 1618201025
      method_name: CommandRecorder#none
      simple_method_name: "#none"
    :details: 
      :flog: complexity is 12.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: create_table
      file_path: ./spec/dummy/db/schema.rb:40
      hash: -1712549753
      method_name: create_table#pets
      simple_method_name: "#pets"
    :details: 
      :flog: complexity is 11.7
  - :location: !ruby/object:MetricFu::Location 
      class_name: CreateUsers
      file_path: ./spec/dummy/db/migrate/20120106163544_create_users.rb
      hash: 6947135653
      method_name: CreateUsers#change
      simple_method_name: "#change"
    :details: 
      :reek: found 2 code smells
      :flog: complexity is 10.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/schema_dumper/comment_methods.rb:5
      hash: -2152258755
      method_name: CommentMethods#tables_with_comments
      simple_method_name: "#tables_with_comments"
    :details: 
      :flog: complexity is 11.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: 7252719412
      method_name: CommentMethods#comments
      simple_method_name: "#comments"
    :details: 
      :reek: found 1 code smells
      :flog: complexity is 10.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:144
      hash: 7654985149
      method_name: ForeignerMethods#id_column_name_from_foreign_key_metadata
      simple_method_name: "#id_column_name_from_foreign_key_metadata"
    :details: 
      :flog: complexity is 11.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/comment_methods_spec.rb:38
      hash: 4279770045
      method_name: describe#describe#it#sets comments on columns of non-public schemas
      simple_method_name: describe#describe#it#sets comments on columns of non-public schemas
    :details: 
      :flog: complexity is 10.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/comment_methods_spec.rb:33
      hash: -2193822460
      method_name: describe#describe#it#sets comments on columns
      simple_method_name: describe#describe#it#sets comments on columns
    :details: 
      :flog: complexity is 10.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/foreign_keys_spec.rb:63
      hash: -67108948
      method_name: describe#describe#it#should not raise an exception if the index does not exist
      simple_method_name: describe#describe#it#should not raise an exception if the index does not exist
    :details: 
      :flog: complexity is 10.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/foreign_keys_spec.rb:45
      hash: 106619603
      method_name: describe#describe#it#removes the index on the foreign key
      simple_method_name: describe#describe#it#removes the index on the foreign key
    :details: 
      :flog: complexity is 10.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/foreign_keys_spec.rb:37
      hash: -504157227
      method_name: describe#describe#it#removes foreign key
      simple_method_name: describe#describe#it#removes foreign key
    :details: 
      :flog: complexity is 10.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/comment_methods_spec.rb:57
      hash: 2943263311
      method_name: describe#describe#it#removes comment on column
      simple_method_name: describe#describe#it#removes comment on column
    :details: 
      :flog: complexity is 10.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/comment_methods_spec.rb:64
      hash: -3493204215
      method_name: describe#describe#it#removes comment on columns
      simple_method_name: describe#describe#it#removes comment on columns
    :details: 
      :flog: complexity is 9.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: 7059655155
      method_name: CommentMethods#invert_set_column_comments
      simple_method_name: "#invert_set_column_comments"
    :details: 
      :reek: found 2 code smells
      :flog: complexity is 8.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: CreateOwnersAndBreeds
      file_path: ./spec/dummy/db/migrate/20120201163544_create_owners_and_breeds.rb
      hash: -7368042684
      method_name: CreateOwnersAndBreeds#change
      simple_method_name: "#change"
    :details: 
      :reek: found 5 code smells
      :flog: complexity is 8.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: SchemaStatements
      file_path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb:13
      hash: -817863017
      method_name: SchemaStatements#add_index
      simple_method_name: "#add_index"
    :details: 
      :flog: complexity is 8.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: Application
      file_path: 
      hash: -3571420229
      method_name: Application#none
      simple_method_name: "#none"
    :details: 
      :flog: complexity is 8.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: PgPower
      file_path: 
      hash: -1312363367
      method_name: PgPower#none
      simple_method_name: "#none"
    :details: 
      :flog: complexity is 8.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: Explorer
      file_path: ./spec/support/explorer.rb:61
      hash: -993458355
      method_name: Explorer#table_exists?
      simple_method_name: "#table_exists?"
    :details: 
      :flog: complexity is 8.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: Explorer
      file_path: ./spec/support/explorer.rb:22
      hash: 4056788610
      method_name: Explorer#get_column_comment
      simple_method_name: "#get_column_comment"
    :details: 
      :flog: complexity is 8.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: Explorer
      file_path: ./spec/support/explorer.rb:40
      hash: 4173091096
      method_name: Explorer#has_foreign_key?
      simple_method_name: "#has_foreign_key?"
    :details: 
      :flog: complexity is 8.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: Explorer
      file_path: ./spec/support/explorer.rb:6
      hash: 8215326094
      method_name: Explorer#get_table_comment
      simple_method_name: "#get_table_comment"
    :details: 
      :flog: complexity is 8.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      hash: -6470588253
      method_name: ForeignerMethods#add_foreign_key
      simple_method_name: "#add_foreign_key"
    :details: 
      :reek: found 3 code smells
      :flog: average complexity is 7.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: create_table
      file_path: ./spec/dummy/db/schema.rb:53
      hash: -442983936
      method_name: create_table#users
      simple_method_name: "#users"
    :details: 
      :flog: complexity is 7.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: CreateDemographyCountries
      file_path: ./spec/dummy/db/migrate/20120106163810_create_demography_countries.rb
      hash: -7455502447
      method_name: CreateDemographyCountries#change
      simple_method_name: "#change"
    :details: 
      :reek: found 2 code smells
      :flog: complexity is 7.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: ConnectionAdapters
      file_path: 
      hash: 55381854
      method_name: ConnectionAdapters#none
      simple_method_name: "#none"
    :details: 
      :flog: complexity is 7.7
  - :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      hash: -7593015459
      method_name: ForeignerMethods#remove_foreign_key
      simple_method_name: "#remove_foreign_key"
    :details: 
      :reek: found 1 code smells
      :flog: average complexity is 7.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::before
      file_path: ./spec/active_record/schema_dumper_spec.rb:6
      hash: 3589022555
      method_name: describe#before#all
      simple_method_name: describe#before#all
    :details: 
      :flog: complexity is 7.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:63
      hash: 774164053
      method_name: describe#describe#it#should be true for a :where clause that includes NULL comparison
      simple_method_name: describe#describe#it#should be true for a :where clause that includes NULL comparison
    :details: 
      :flog: complexity is 7.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:75
      hash: 1468728000
      method_name: describe#describe#it#should be true for a compound :where clause
      simple_method_name: describe#describe#it#should be true for a compound :where clause
    :details: 
      :flog: complexity is 7.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:57
      hash: -1942191246
      method_name: describe#describe#it#should be true for a :where clause that includes text comparison
      simple_method_name: describe#describe#it#should be true for a :where clause that includes text comparison
    :details: 
      :flog: complexity is 7.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:69
      hash: 106476392
      method_name: describe#describe#it#should be true for a :where clause that includes integer comparison
      simple_method_name: describe#describe#it#should be true for a :where clause that includes integer comparison
    :details: 
      :flog: complexity is 7.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:51
      hash: 432606717
      method_name: describe#describe#it#should be true for a :where clause that includes boolean comparison
      simple_method_name: describe#describe#it#should be true for a :where clause that includes boolean comparison
    :details: 
      :flog: complexity is 7.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:43
      hash: -5046313936
      method_name: describe#context#it#dumps indexes
      simple_method_name: describe#context#it#dumps indexes
    :details: 
      :flog: complexity is 7.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:11
      hash: 454451620
      method_name: describe#describe#it#should be built with the :where option
      simple_method_name: describe#describe#it#should be built with the :where option
    :details: 
      :flog: complexity is 7.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: Explorer
      file_path: ./spec/support/explorer.rb
      hash: 133807947
      method_name: Explorer#to_schema_and_table
      simple_method_name: "#to_schema_and_table"
    :details: 
      :reek: found 2 code smells
      :flog: complexity is 6.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: AddForeignKeys
      file_path: ./spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb
      hash: 3341790841
      method_name: AddForeignKeys#change
      simple_method_name: "#change"
    :details: 
      :reek: found 1 code smells
      :flog: complexity is 6.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      hash: 8455058014
      method_name: ForeignerMethods#id_column_name_from_table_name
      simple_method_name: "#id_column_name_from_table_name"
    :details: 
      :reek: found 2 code smells
      :flog: complexity is 6.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/schema_dumper/schema_methods.rb:14
      hash: 251407004
      method_name: SchemaMethods#schemas
      simple_method_name: "#schemas"
    :details: 
      :flog: complexity is 6.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: create_table#demography
      file_path: ./spec/dummy/db/schema.rb:83
      hash: -1256146994
      method_name: create_table#demography.countries
      simple_method_name: .countries
    :details: 
      :flog: complexity is 6.5
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:30
      hash: 794184681
      method_name: describe#describe#it#should be true for a valid set of options
      simple_method_name: describe#describe#it#should be true for a valid set of options
    :details: 
      :flog: complexity is 6.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:40
      hash: -1505107660
      method_name: describe#describe#it#should be false for a subset of valid options
      simple_method_name: describe#describe#it#should be false for a subset of valid options
    :details: 
      :flog: complexity is 6.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:35
      hash: 497446112
      method_name: describe#describe#it#should be true for a valid set of options including name
      simple_method_name: describe#describe#it#should be true for a valid set of options including name
    :details: 
      :flog: complexity is 6.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:45
      hash: -136499566
      method_name: describe#describe#it#should be false for invalid options
      simple_method_name: describe#describe#it#should be false for invalid options
    :details: 
      :flog: complexity is 6.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:17
      hash: 5857556791
      method_name: describe#context#it#dumps schemas
      simple_method_name: describe#context#it#dumps schemas
    :details: 
      :flog: complexity is 5.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/comment_methods_spec.rb:26
      hash: -5805534512
      method_name: describe#describe#it#sets comment on column of non-public schema
      simple_method_name: describe#describe#it#sets comment on column of non-public schema
    :details: 
      :flog: complexity is 5.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/comment_methods_spec.rb:21
      hash: 6116492936
      method_name: describe#describe#it#sets comment on column
      simple_method_name: describe#describe#it#sets comment on column
    :details: 
      :flog: complexity is 5.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/comment_methods_spec.rb:14
      hash: -5472503142
      method_name: describe#describe#it#sets comment on table of non-public schema
      simple_method_name: describe#describe#it#sets comment on table of non-public schema
    :details: 
      :flog: complexity is 5.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/comment_methods_spec.rb:9
      hash: -7711089661
      method_name: describe#describe#it#sets comment on table
      simple_method_name: describe#describe#it#sets comment on table
    :details: 
      :flog: complexity is 5.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      hash: 8550222599
      method_name: ForeignerMethods#foreign_key_name
      simple_method_name: "#foreign_key_name"
    :details: 
      :reek: found 3 code smells
      :flog: complexity is 5.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: IndexMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
      hash: 6654212904
      method_name: IndexMethods#index_name_for_remove
      simple_method_name: "#index_name_for_remove"
    :details: 
      :reek: found 1 code smells
      :flog: complexity is 5.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:21
      hash: -346996527
      method_name: describe#describe#it#should support table name as a symbol
      simple_method_name: describe#describe#it#should support table name as a symbol
    :details: 
      :flog: complexity is 5.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:17
      hash: -464078002
      method_name: describe#describe#it#should be true for simple options
      simple_method_name: describe#describe#it#should be true for simple options
    :details: 
      :flog: complexity is 5.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:25
      hash: -1675264403
      method_name: describe#describe#it#should be true for simple options on a schema table
      simple_method_name: describe#describe#it#should be true for simple options on a schema table
    :details: 
      :flog: complexity is 5.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/comment_methods_spec.rb:50
      hash: -3625750615
      method_name: describe#describe#it#removes comment on table of non-public schema
      simple_method_name: describe#describe#it#removes comment on table of non-public schema
    :details: 
      :flog: complexity is 5.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/comment_methods_spec.rb:46
      hash: -3179007912
      method_name: describe#describe#it#removes comment on table
      simple_method_name: describe#describe#it#removes comment on table
    :details: 
      :flog: complexity is 5.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:162
      hash: 7138004903
      method_name: ForeignerMethods#dependency_sql
      simple_method_name: "#dependency_sql"
    :details: 
      :flog: complexity is 5.5
  - :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb:6
      hash: 3052911827
      method_name: SchemaMethods#create_table_with_schema_option
      simple_method_name: "#create_table_with_schema_option"
    :details: 
      :flog: complexity is 5.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::context::it
      file_path: ./spec/schema_methods_spec.rb:8
      hash: 3691193480
      method_name: describe#describe#context#it#creates table in passed schema
      simple_method_name: describe#describe#context#it#creates table in passed schema
    :details: 
      :flog: complexity is 5.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::context::it
      file_path: ./spec/schema_methods_spec.rb:17
      hash: 4264027322
      method_name: describe#describe#context#it#removes table in passed schema
      simple_method_name: describe#describe#context#it#removes table in passed schema
    :details: 
      :flog: complexity is 5.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/foreign_keys_spec.rb:13
      hash: -978864539
      method_name: describe#describe#it#adds an index on the foreign key
      simple_method_name: describe#describe#it#adds an index on the foreign key
    :details: 
      :flog: complexity is 5.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/foreign_keys_spec.rb:7
      hash: -4700480306
      method_name: describe#describe#it#adds foreign key
      simple_method_name: describe#describe#it#adds foreign key
    :details: 
      :flog: complexity is 5.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/foreign_keys_spec.rb:19
      hash: 757771805
      method_name: describe#describe#it#should not add an index on the foreign key when :exclude_index is true
      simple_method_name: describe#describe#it#should not add an index on the foreign key when :exclude_index is true
    :details: 
      :flog: complexity is 5.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: CreateCitiesTable
      file_path: ./spec/dummy/db/migrate/20120209094937_create_cities_table.rb
      hash: 936445671
      method_name: CreateCitiesTable#change
      simple_method_name: "#change"
    :details: 
      :reek: found 1 code smells
      :flog: complexity is 5.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: create_table
      file_path: ./spec/dummy/db/schema.rb:23
      hash: -1143165753
      method_name: create_table#breeds
      simple_method_name: "#breeds"
    :details: 
      :flog: complexity is 5.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: create_table
      file_path: ./spec/dummy/db/schema.rb:29
      hash: 1759402119
      method_name: create_table#owners
      simple_method_name: "#owners"
    :details: 
      :flog: complexity is 5.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: RemoveForeignKeys
      file_path: ./spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb:2
      hash: -1347412961
      method_name: RemoveForeignKeys#up
      simple_method_name: "#up"
    :details: 
      :flog: complexity is 4.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: Tools
      file_path: ./lib/pg_power/tools.rb
      hash: -1665173145
      method_name: Tools#schemas
      simple_method_name: "#schemas"
    :details: 
      :reek: found 1 code smells
      :flog: complexity is 4.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb:13
      hash: -1716989462
      method_name: SchemaMethods#drop_table_with_schema_option
      simple_method_name: "#drop_table_with_schema_option"
    :details: 
      :flog: complexity is 4.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: DemographyPopulationStatisctics
      file_path: ./spec/dummy/db/migrate/20120301153650_demography_population_statisctics.rb
      hash: -1382365303
      method_name: DemographyPopulationStatisctics#change
      simple_method_name: "#change"
    :details: 
      :reek: found 2 code smells
      :flog: complexity is 4.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: Explorer
      file_path: 
      hash: 3144911113
      method_name: Explorer#none
      simple_method_name: "#none"
    :details: 
      :flog: complexity is 4.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: 
      hash: 3669998448
      method_name: SchemaMethods#none
      simple_method_name: "#none"
    :details: 
      :flog: complexity is 4.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:59
      hash: 4951326293
      method_name: describe#context#it#dumps foreign keys from non-public schemas
      simple_method_name: describe#context#it#dumps foreign keys from non-public schemas
    :details: 
      :flog: complexity is 4.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/schema_dumper/schema_methods.rb:31
      hash: -1791732173
      method_name: SchemaMethods#non_public_schema_tables
      simple_method_name: "#non_public_schema_tables"
    :details: 
      :flog: complexity is 4.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: Explorer
      file_path: ./spec/support/explorer.rb:57
      hash: 1032964661
      method_name: Explorer#index_exists?
      simple_method_name: "#index_exists?"
    :details: 
      :flog: complexity is 4.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: 8300604814
      method_name: CommentMethods#invert_set_column_comment
      simple_method_name: "#invert_set_column_comment"
    :details: 
      :reek: found 2 code smells
      :flog: complexity is 3.7
  - :location: !ruby/object:MetricFu::Location 
      class_name: create_table#demography
      file_path: ./spec/dummy/db/schema.rb:88
      hash: 1313093148
      method_name: create_table#demography.population_statistics
      simple_method_name: .population_statistics
    :details: 
      :flog: complexity is 4.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: create_table#demography
      file_path: ./spec/dummy/db/schema.rb:60
      hash: -3163045300
      method_name: create_table#demography.cities
      simple_method_name: .cities
    :details: 
      :flog: complexity is 4.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: RemoveForeignKeys
      file_path: ./spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb:10
      hash: 6774171342
      method_name: RemoveForeignKeys#down
      simple_method_name: "#down"
    :details: 
      :flog: complexity is 3.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/schema_dumper/schema_methods.rb:7
      hash: -4454536720
      method_name: SchemaMethods#tables_with_schemas
      simple_method_name: "#tables_with_schemas"
    :details: 
      :flog: complexity is 3.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: CreateDemographySchema
      file_path: ./spec/dummy/db/migrate/20120106163711_create_demography_schema.rb:2
      hash: 1873804944
      method_name: CreateDemographySchema#change
      simple_method_name: "#change"
    :details: 
      :flog: complexity is 3.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: Migration
      file_path: 
      hash: 3242424320
      method_name: Migration#none
      simple_method_name: "#none"
    :details: 
      :flog: complexity is 3.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: Tools
      file_path: ./lib/pg_power/tools.rb
      hash: 1235457055
      method_name: Tools#drop_schema
      simple_method_name: "#drop_schema"
    :details: 
      :reek: found 1 code smells
      :flog: complexity is 2.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: CreateDemographyNationalities
      file_path: ./spec/dummy/db/migrate/20120301152819_create_demography_nationalities.rb
      hash: -1731058819
      method_name: CreateDemographyNationalities#change
      simple_method_name: "#change"
    :details: 
      :reek: found 1 code smells
      :flog: complexity is 2.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: Tools
      file_path: ./lib/pg_power/tools.rb
      hash: -1394469814
      method_name: Tools#create_schema
      simple_method_name: "#create_schema"
    :details: 
      :reek: found 1 code smells
      :flog: complexity is 2.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: 
      hash: -1574202450
      method_name: ForeignerMethods#none
      simple_method_name: "#none"
    :details: 
      :flog: average complexity is 3.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:30
      hash: 4403954881
      method_name: describe#context#it#dumps tables from non-public schemas
      simple_method_name: describe#context#it#dumps tables from non-public schemas
    :details: 
      :flog: complexity is 2.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:65
      hash: -5470931400
      method_name: describe#context#it#dumps table comments
      simple_method_name: describe#context#it#dumps table comments
    :details: 
      :flog: complexity is 2.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:26
      hash: 5735594021
      method_name: describe#context#it#dumps tables
      simple_method_name: describe#context#it#dumps tables
    :details: 
      :flog: complexity is 2.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:48
      hash: -5544740703
      method_name: describe#context#it#dumps indexes from non-public schemas
      simple_method_name: describe#context#it#dumps indexes from non-public schemas
    :details: 
      :flog: complexity is 2.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:69
      hash: 4745893291
      method_name: describe#context#it#dumps table comments from non-public schemas
      simple_method_name: describe#context#it#dumps table comments from non-public schemas
    :details: 
      :flog: complexity is 2.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:77
      hash: -4881429065
      method_name: describe#context#it#dumps column comments from non-public schemas
      simple_method_name: describe#context#it#dumps column comments from non-public schemas
    :details: 
      :flog: complexity is 2.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:54
      hash: 5030460448
      method_name: describe#context#it#dumps foreign keys
      simple_method_name: describe#context#it#dumps foreign keys
    :details: 
      :flog: complexity is 2.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:73
      hash: -5861520901
      method_name: describe#context#it#dumps column comments
      simple_method_name: describe#context#it#dumps column comments
    :details: 
      :flog: complexity is 2.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:20
      hash: 4818444642
      method_name: describe#context#it#dumps schemas in alphabetical order
      simple_method_name: describe#context#it#dumps schemas in alphabetical order
    :details: 
      :flog: complexity is 2.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/schema_dumper/schema_methods.rb:41
      hash: -1724249333
      method_name: SchemaMethods#get_non_public_schema_table_names
      simple_method_name: "#get_non_public_schema_table_names"
    :details: 
      :flog: complexity is 2.7
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::context
      file_path: ./spec/schema_methods_spec.rb:18
      hash: -1105204248
      method_name: describe#describe#context#with :schema option
      simple_method_name: describe#describe#context#with :schema option
    :details: 
      :flog: complexity is 2.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: RemoveCommentsOnCountriesTable
      file_path: ./spec/dummy/db/migrate/20120207103858_remove_comments_on_countries_table.rb:2
      hash: -8459582581
      method_name: RemoveCommentsOnCountriesTable#up
      simple_method_name: "#up"
    :details: 
      :flog: complexity is 2.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:28
      hash: 3929671970
      method_name: CommentMethods#set_column_comments
      simple_method_name: "#set_column_comments"
    :details: 
      :flog: average complexity is 2.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: AddDemographyCitizensActiveColumn
      file_path: ./spec/dummy/db/migrate/20120224204546_add_demography_citizens_active_column.rb:2
      hash: -1298635018
      method_name: AddDemographyCitizensActiveColumn#change
      simple_method_name: "#change"
    :details: 
      :flog: complexity is 2.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: Tools
      file_path: 
      hash: -1388329577
      method_name: Tools#none
      simple_method_name: "#none"
    :details: 
      :flog: complexity is 2.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:44
      hash: -4169204162
      method_name: CommentMethods#remove_column_comment
      simple_method_name: "#remove_column_comment"
    :details: 
      :flog: average complexity is 2.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:20
      hash: -4233007474
      method_name: CommentMethods#set_column_comment
      simple_method_name: "#set_column_comment"
    :details: 
      :flog: average complexity is 2.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: ForeignKeyDefinition
      file_path: 
      hash: -790530676
      method_name: ForeignKeyDefinition#none
      simple_method_name: "#none"
    :details: 
      :flog: complexity is 2.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: IndexDefinition
      file_path: 
      hash: 1638724008
      method_name: IndexDefinition#none
      simple_method_name: "#none"
    :details: 
      :flog: complexity is 2.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:55
      hash: 7875384666
      method_name: ForeignerMethods#drop_table
      simple_method_name: "#drop_table"
    :details: 
      :flog: complexity is 1.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:50
      hash: 4062474022
      method_name: CommentMethods#remove_column_comments
      simple_method_name: "#remove_column_comments"
    :details: 
      :flog: average complexity is 1.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: Explorer
      file_path: ./spec/support/explorer.rb:84
      hash: -1752636845
      method_name: Explorer#connection
      simple_method_name: "#connection"
    :details: 
      :flog: complexity is 1.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: -8470037323
      method_name: CommentMethods#invert_set_table_comment
      simple_method_name: "#invert_set_table_comment"
    :details: 
      :reek: found 1 code smells
      :flog: complexity is 1.7
  - :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb:16
      hash: 5412880701
      method_name: ForeignerMethods#foreign_key
      simple_method_name: "#foreign_key"
    :details: 
      :flog: complexity is 1.7
  - :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:11
      hash: 3706029009
      method_name: CommentMethods#set_table_comment
      simple_method_name: "#set_table_comment"
    :details: 
      :flog: average complexity is 1.7
  - :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:36
      hash: 3434716690
      method_name: CommentMethods#remove_table_comment
      simple_method_name: "#remove_table_comment"
    :details: 
      :flog: average complexity is 1.7
  - :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/migration/command_recorder/schema_methods.rb
      hash: 4411029875
      method_name: SchemaMethods#invert_create_schema
      simple_method_name: "#invert_create_schema"
    :details: 
      :reek: found 1 code smells
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/schema_dumper/schema_methods.rb
      hash: 7064022114
      method_name: SchemaMethods#schema
      simple_method_name: "#schema"
    :details: 
      :reek: found 1 code smells
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::context
      file_path: ./spec/active_record/schema_dumper_spec.rb:21
      hash: -7156840787
      method_name: describe#context#Schemas
      simple_method_name: describe#context#Schemas
    :details: 
      :flog: complexity is 1.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::context
      file_path: ./spec/active_record/schema_dumper_spec.rb:78
      hash: 7983106697
      method_name: describe#context#Comments
      simple_method_name: describe#context#Comments
    :details: 
      :flog: complexity is 1.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::context
      file_path: ./spec/active_record/schema_dumper_spec.rb:31
      hash: 7661345471
      method_name: describe#context#Tables
      simple_method_name: describe#context#Tables
    :details: 
      :flog: complexity is 1.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::context
      file_path: ./spec/active_record/schema_dumper_spec.rb:60
      hash: 7196087664
      method_name: describe#context#Foreign keys
      simple_method_name: describe#context#Foreign keys
    :details: 
      :flog: complexity is 1.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::context
      file_path: ./spec/active_record/schema_dumper_spec.rb:49
      hash: 8229048867
      method_name: describe#context#Indexes
      simple_method_name: describe#context#Indexes
    :details: 
      :flog: complexity is 1.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:131
      hash: 7475632973
      method_name: ForeignerMethods#remove_foreign_key_sql
      simple_method_name: "#remove_foreign_key_sql"
    :details: 
      :flog: complexity is 1.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/migration/command_recorder/schema_methods.rb
      hash: -4455984099
      method_name: SchemaMethods#invert_drop_schema
      simple_method_name: "#invert_drop_schema"
    :details: 
      :reek: found 1 code smells
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/schema_methods_spec.rb:19
      hash: -2626929661
      method_name: describe#describe##drop_table
      simple_method_name: describe#describe##drop_table
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/schema_methods_spec.rb:10
      hash: -2518355341
      method_name: describe#describe##create_table
      simple_method_name: describe#describe##create_table
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: RemoveCommentsOnCountriesTable
      file_path: ./spec/dummy/db/migrate/20120207103858_remove_comments_on_countries_table.rb:7
      hash: 8155048804
      method_name: RemoveCommentsOnCountriesTable#down
      simple_method_name: "#down"
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/indexes_spec.rb:77
      hash: -669352757
      method_name: describe#describe##index_exists
      simple_method_name: describe#describe##index_exists
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: RemoveCommentOnPetsTable
      file_path: ./spec/dummy/db/migrate/20120207112916_remove_comment_on_pets_table.rb:6
      hash: -3841496238
      method_name: RemoveCommentOnPetsTable#down
      simple_method_name: "#down"
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/indexes_spec.rb:12
      hash: 2054041232
      method_name: describe#describe##add_index
      simple_method_name: describe#describe##add_index
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: RemoveSomeCommentsOnCitizens
      file_path: ./spec/dummy/db/migrate/20120208114020_remove_some_comments_on_citizens.rb:6
      hash: -1004730977
      method_name: RemoveSomeCommentsOnCitizens#down
      simple_method_name: "#down"
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: RemoveCommentOnPetsTable
      file_path: ./spec/dummy/db/migrate/20120207112916_remove_comment_on_pets_table.rb:2
      hash: -2900718062
      method_name: RemoveCommentOnPetsTable#up
      simple_method_name: "#up"
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: RemoveSomeCommentsOnCitizens
      file_path: ./spec/dummy/db/migrate/20120208114020_remove_some_comments_on_citizens.rb:2
      hash: -855136821
      method_name: RemoveSomeCommentsOnCitizens#up
      simple_method_name: "#up"
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/comment_methods_spec.rb:65
      hash: -3443495731
      method_name: describe#describe##remove_column_comments
      simple_method_name: describe#describe##remove_column_comments
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/comment_methods_spec.rb:39
      hash: -2220960375
      method_name: describe#describe##set_column_comments
      simple_method_name: describe#describe##set_column_comments
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/comment_methods_spec.rb:27
      hash: 4468643889
      method_name: describe#describe##set_column_comment
      simple_method_name: describe#describe##set_column_comment
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe#
      file_path: ./spec/active_record/schema_dumper_spec.rb:80
      hash: -3956571184
      method_name: describe#.dump
      simple_method_name: .dump
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/comment_methods_spec.rb:58
      hash: -3154174788
      method_name: describe#describe##remove_column_comment
      simple_method_name: describe#describe##remove_column_comment
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/comment_methods_spec.rb:15
      hash: 6426918733
      method_name: describe#describe##set_table_comment
      simple_method_name: describe#describe##set_table_comment
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/comment_methods_spec.rb:51
      hash: 2815796618
      method_name: describe#describe##remove_table_comment
      simple_method_name: describe#describe##remove_table_comment
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: IndexMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb:18
      hash: 5514569358
      method_name: IndexMethods#index_name
      simple_method_name: "#index_name"
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb:6
      hash: -7056506317
      method_name: SchemaMethods#create_schema
      simple_method_name: "#create_schema"
    :details: 
      :flog: average complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb:12
      hash: 4995688967
      method_name: SchemaMethods#drop_schema
      simple_method_name: "#drop_schema"
    :details: 
      :flog: average complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe
      file_path: ./spec/schema_methods_spec.rb:20
      hash: -1786438363
      method_name: describe#Schema methods
      simple_method_name: "#Schema methods"
    :details: 
      :flog: complexity is 1.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/foreign_keys_spec.rb:28
      hash: -421499551
      method_name: describe#describe##add_foreign_key
      simple_method_name: describe#describe##add_foreign_key
    :details: 
      :flog: complexity is 1.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe
      file_path: ./spec/indexes_spec.rb:78
      hash: 3282970319
      method_name: describe#Indexes
      simple_method_name: "#Indexes"
    :details: 
      :flog: complexity is 1.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/foreign_keys_spec.rb:64
      hash: 669118151
      method_name: describe#describe##remove_foreign_key
      simple_method_name: describe#describe##remove_foreign_key
    :details: 
      :flog: complexity is 1.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: RemoveDemographyNationalities
      file_path: ./spec/dummy/db/migrate/20120301171826_remove_demography_nationalities.rb:2
      hash: -1323804464
      method_name: RemoveDemographyNationalities#change
      simple_method_name: "#change"
    :details: 
      :flog: complexity is 1.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe
      file_path: ./spec/comment_methods_spec.rb:67
      hash: -870080767
      method_name: describe#Comment methods
      simple_method_name: "#Comment methods"
    :details: 
      :flog: complexity is 1.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: 
      hash: -1037262556
      method_name: CommentMethods#none
      simple_method_name: "#none"
    :details: 
      :flog: complexity is 1.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: SchemaStatements
      file_path: 
      hash: -1671892366
      method_name: SchemaStatements#none
      simple_method_name: "#none"
    :details: 
      :flog: complexity is 1.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: Country
      file_path: 
      hash: -4279587104
      method_name: Country#none
      simple_method_name: "#none"
    :details: 
      :flog: complexity is 1.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: ApplicationController
      file_path: 
      hash: -1070084907
      method_name: ApplicationController#none
      simple_method_name: "#none"
    :details: 
      :flog: complexity is 1.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: Citizen
      file_path: 
      hash: 2522325491
      method_name: Citizen#none
      simple_method_name: "#none"
    :details: 
      :flog: complexity is 1.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: User
      file_path: 
      hash: -2937470050
      method_name: User#none
      simple_method_name: "#none"
    :details: 
      :flog: complexity is 1.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe
      file_path: ./spec/foreign_keys_spec.rb:65
      hash: -4227534952
      method_name: describe#Foreign keys
      simple_method_name: "#Foreign keys"
    :details: 
      :flog: complexity is 1.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :CommentMethods)
      file_path: lib/pg_power/schema_dumper/comment_methods.rb
      hash: 3398510861
      method_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :CommentMethods)#dump_comments
      simple_method_name: "#dump_comments"
    :details: 
      :rcov: uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :CommentMethods)
      file_path: lib/pg_power/schema_dumper/comment_methods.rb
      hash: 2828586106
      method_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :CommentMethods)#tables_with_comments
      simple_method_name: "#tables_with_comments"
    :details: 
      :rcov: uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)
      file_path: lib/pg_power/schema_dumper/schema_methods.rb
      hash: -5220020216
      method_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)#schema
      simple_method_name: "#schema"
    :details: 
      :rcov: uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb
      hash: -4115735391
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)#add_foreign_key
      simple_method_name: "#add_foreign_key"
    :details: 
      :rcov: uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb
      hash: -7012589043
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#remove_column_comment
      simple_method_name: "#remove_column_comment"
    :details: 
      :rcov: uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)
      file_path: lib/pg_power/schema_dumper/schema_methods.rb
      hash: -5473404082
      method_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)#non_public_schema_tables
      simple_method_name: "#non_public_schema_tables"
    :details: 
      :rcov: uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: -676480410
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#comments
      simple_method_name: "#comments"
    :details: 
      :rcov: uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb
      hash: -6902844230
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#set_column_comment
      simple_method_name: "#set_column_comment"
    :details: 
      :rcov: uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)
      file_path: lib/pg_power/schema_dumper/schema_methods.rb
      hash: 5655091811
      method_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)#get_non_public_schema_table_names
      simple_method_name: "#get_non_public_schema_table_names"
    :details: 
      :rcov: uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :IndexMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
      hash: 7288141679
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :IndexMethods)#supports_partial_index?
      simple_method_name: "#supports_partial_index?"
    :details: 
      :rcov: uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :IndexMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
      hash: -6679957258
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :IndexMethods)#index_name
      simple_method_name: "#index_name"
    :details: 
      :rcov: uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: PgPower
      file_path: lib/pg_power/tools.rb
      hash: -1208631308
      method_name: PgPower#schemas
      simple_method_name: "#schemas"
    :details: 
      :rcov: uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)
      file_path: lib/pg_power/schema_dumper/schema_methods.rb
      hash: -5502651052
      method_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)#schemas
      simple_method_name: "#schemas"
    :details: 
      :rcov: uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: ActiveRecord
      file_path: lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
      hash: -78721734
      method_name: ActiveRecord#add_index
      simple_method_name: "#add_index"
    :details: 
      :rcov: uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb
      hash: 6563887436
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#set_column_comments
      simple_method_name: "#set_column_comments"
    :details: 
      :rcov: uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb
      hash: 6908824458
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#remove_column_comments
      simple_method_name: "#remove_column_comments"
    :details: 
      :rcov: uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb
      hash: 6960505542
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#remove_table_comment
      simple_method_name: "#remove_table_comment"
    :details: 
      :rcov: uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: ActiveRecord
      file_path: lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
      hash: -1745544757
      method_name: ActiveRecord#index_exists?
      simple_method_name: "#index_exists?"
    :details: 
      :rcov: uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb
      hash: -8019793830
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#set_table_comment
      simple_method_name: "#set_table_comment"
    :details: 
      :rcov: uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)
      file_path: lib/pg_power/schema_dumper/schema_methods.rb
      hash: 4921542420
      method_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)#tables_with_schemas
      simple_method_name: "#tables_with_schemas"
    :details: 
      :rcov: uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb
      hash: 2601641947
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)#remove_foreign_key
      simple_method_name: "#remove_foreign_key"
    :details: 
      :rcov: uncovered code is 0.0%
  :classes: 
  - :location: !ruby/object:MetricFu::Location 
      class_name: main
      file_path: 
      hash: -3813179679
      method_name: 
    :details: 
      :flog: complexity is 146.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :SchemaMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb
      hash: 6779077590
      method_name: 
    :details: 
      :rcov: average uncovered code is 80.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :ForeignerMethods)
      file_path: lib/pg_power/migration/command_recorder/foreigner_methods.rb
      hash: 1420032428
      method_name: 
    :details: 
      :rcov: average uncovered code is 75.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :ForeignerMethods)
      file_path: lib/pg_power/connection_adapters/table/foreigner_methods.rb
      hash: 7864566144
      method_name: 
    :details: 
      :rcov: average uncovered code is 74.1%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)
      file_path: lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: -856349135
      method_name: 
    :details: 
      :rcov: average uncovered code is 70.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)
      file_path: lib/pg_power/migration/command_recorder/schema_methods.rb
      hash: -5435405911
      method_name: 
    :details: 
      :rcov: average uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :IndexMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/index_methods.rb
      hash: -6262040449
      method_name: 
    :details: 
      :rcov: uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :SchemaMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb
      hash: -6388326661
      method_name: 
    :details: 
      :rcov: average uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/table/comment_methods.rb
      hash: -4909845379
      method_name: 
    :details: 
      :rcov: average uncovered code is 66.7%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: -139665155
      method_name: 
    :details: 
      :rcov: average uncovered code is 65.8%
  - :location: !ruby/object:MetricFu::Location 
      class_name: PgPower
      file_path: 
      hash: -1698573169
      method_name: 
    :details: 
      :rcov: average uncovered code is 50.0%
      :flog: complexity is 8.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: initializer
      file_path: ./lib/pg_power/engine.rb:43
      hash: 8088839454
      method_name: 
    :details: 
      :flog: complexity is 54.5
  - :location: !ruby/object:MetricFu::Location 
      class_name: PostgreSQLAdapter
      file_path: ./lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb
      hash: 6668246084
      method_name: 
    :details: 
      :reek: found 4 code smells
      :rcov: uncovered code is 13.9%
      :flog: average complexity is 29.7
  - :location: !ruby/object:MetricFu::Location 
      class_name: SchemaDumper
      file_path: ./lib/core_ext/active_record/schema_dumper.rb
      hash: -4261658199
      method_name: 
    :details: 
      :reek: found 5 code smells
      :rcov: uncovered code is 0.0%
      :flog: average complexity is 39.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb
      hash: -3923808229
      method_name: 
    :details: 
      :rcov: average uncovered code is 33.3%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :IndexMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
      hash: -8317294969
      method_name: 
    :details: 
      :rcov: average uncovered code is 29.6%
  - :location: !ruby/object:MetricFu::Location 
      class_name: SchemaStatements
      file_path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
      hash: 5667723666
      method_name: 
    :details: 
      :reek: found 10 code smells
      :flog: average complexity is 25.7
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :ForeignerMethods)
      file_path: lib/pg_power/schema_dumper/foreigner_methods.rb
      hash: 8015888860
      method_name: 
    :details: 
      :rcov: average uncovered code is 23.3%
  - :location: !ruby/object:MetricFu::Location 
      class_name: AbstractAdapter
      file_path: 
      hash: -3967168393
      method_name: 
    :details: 
      :flog: complexity is 21.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: CreatePets
      file_path: ./spec/dummy/db/migrate/20120105112744_create_pets.rb
      hash: 980083660
      method_name: 
    :details: 
      :reek: found 4 code smells
      :flog: complexity is 13.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: CreateDemographyCitizens
      file_path: ./spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb
      hash: -3003940683
      method_name: 
    :details: 
      :reek: found 4 code smells
      :flog: complexity is 13.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      hash: -7649655005
      method_name: 
    :details: 
      :reek: found 30 code smells
      :flog: average complexity is 12.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: Table
      file_path: 
      hash: 192827178
      method_name: 
    :details: 
      :flog: complexity is 13.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: CommandRecorder
      file_path: 
      hash: 1664516474
      method_name: 
    :details: 
      :flog: complexity is 12.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: CreateUsers
      file_path: ./spec/dummy/db/migrate/20120106163544_create_users.rb
      hash: -7135916375
      method_name: 
    :details: 
      :reek: found 3 code smells
      :flog: complexity is 10.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: ActiveRecord
      file_path: lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
      hash: 942024288
      method_name: 
    :details: 
      :rcov: average uncovered code is 11.1%
  - :location: !ruby/object:MetricFu::Location 
      class_name: IndexExistsError when the index already exists
      file_path: ./spec/foreign_keys_spec.rb:27
      hash: 2613781308
      method_name: 
    :details: 
      :flog: complexity is 10.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb
      hash: 6585545230
      method_name: 
    :details: 
      :rcov: average uncovered code is 9.5%
  - :location: !ruby/object:MetricFu::Location 
      class_name: CreateOwnersAndBreeds
      file_path: ./spec/dummy/db/migrate/20120201163544_create_owners_and_breeds.rb
      hash: 7108250750
      method_name: 
    :details: 
      :reek: found 6 code smells
      :flog: complexity is 8.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: Application
      file_path: ./spec/dummy/config/application.rb
      hash: -5953168481
      method_name: 
    :details: 
      :reek: found 1 code smells
      :flog: complexity is 8.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: CreateDemographyCountries
      file_path: ./spec/dummy/db/migrate/20120106163810_create_demography_countries.rb
      hash: -8224004991
      method_name: 
    :details: 
      :reek: found 3 code smells
      :flog: complexity is 7.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: ConnectionAdapters
      file_path: 
      hash: 1265686624
      method_name: 
    :details: 
      :flog: complexity is 7.7
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/comment_methods_spec.rb:57
      hash: 3181988746
      method_name: 
    :details: 
      :flog: average complexity is 7.7
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::before
      file_path: ./spec/active_record/schema_dumper_spec.rb:6
      hash: 2668108574
      method_name: 
    :details: 
      :flog: complexity is 7.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: create_table
      file_path: ./spec/dummy/db/schema.rb:23
      hash: 1854949228
      method_name: 
    :details: 
      :flog: average complexity is 7.5
  - :location: !ruby/object:MetricFu::Location 
      class_name: AddForeignKeys
      file_path: ./spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb
      hash: -3827576563
      method_name: 
    :details: 
      :reek: found 2 code smells
      :flog: complexity is 6.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: create_table#demography
      file_path: ./spec/dummy/db/schema.rb:60
      hash: 3371709870
      method_name: 
    :details: 
      :flog: average complexity is 6.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: Explorer
      file_path: ./spec/support/explorer.rb
      hash: -854534955
      method_name: 
    :details: 
      :reek: found 2 code smells
      :flog: average complexity is 6.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: CreateCitiesTable
      file_path: ./spec/dummy/db/migrate/20120209094937_create_cities_table.rb
      hash: 74674010
      method_name: 
    :details: 
      :reek: found 2 code smells
      :flog: complexity is 5.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::context::it
      file_path: ./spec/schema_methods_spec.rb:17
      hash: 3964344712
      method_name: 
    :details: 
      :flog: average complexity is 5.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: DemographyPopulationStatisctics
      file_path: ./spec/dummy/db/migrate/20120301153650_demography_population_statisctics.rb
      hash: 462483840
      method_name: 
    :details: 
      :reek: found 3 code smells
      :flog: complexity is 4.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: RemoveForeignKeys
      file_path: ./spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb
      hash: -5607736567
      method_name: 
    :details: 
      :reek: found 1 code smells
      :flog: average complexity is 4.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: -8539877609
      method_name: 
    :details: 
      :reek: found 9 code smells
      :flog: average complexity is 3.5
  - :location: !ruby/object:MetricFu::Location 
      class_name: Tools
      file_path: ./lib/pg_power/tools.rb
      hash: 1410420508
      method_name: 
    :details: 
      :reek: found 3 code smells
      :flog: average complexity is 3.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: CreateDemographySchema
      file_path: ./spec/dummy/db/migrate/20120106163711_create_demography_schema.rb
      hash: 147051922
      method_name: 
    :details: 
      :reek: found 1 code smells
      :flog: complexity is 3.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: IndexMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
      hash: 7557207984
      method_name: 
    :details: 
      :reek: found 1 code smells
      :flog: average complexity is 3.5
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:65
      hash: 6109234416
      method_name: 
    :details: 
      :flog: average complexity is 3.6
  - :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/migration/command_recorder/schema_methods.rb
      hash: -5231812929
      method_name: 
    :details: 
      :reek: found 3 code smells
      :flog: average complexity is 2.9
  - :location: !ruby/object:MetricFu::Location 
      class_name: CreateDemographyNationalities
      file_path: ./spec/dummy/db/migrate/20120301152819_create_demography_nationalities.rb
      hash: 541170682
      method_name: 
    :details: 
      :reek: found 2 code smells
      :flog: complexity is 2.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: Migration
      file_path: 
      hash: 2208769908
      method_name: 
    :details: 
      :flog: complexity is 3.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: AddDemographyCitizensActiveColumn
      file_path: ./spec/dummy/db/migrate/20120224204546_add_demography_citizens_active_column.rb
      hash: -655703541
      method_name: 
    :details: 
      :reek: found 1 code smells
      :flog: complexity is 2.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::context
      file_path: ./spec/schema_methods_spec.rb:18
      hash: -225710911
      method_name: 
    :details: 
      :flog: complexity is 2.4
  - :location: !ruby/object:MetricFu::Location 
      class_name: ForeignKeyDefinition
      file_path: 
      hash: 371895642
      method_name: 
    :details: 
      :flog: complexity is 2.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: IndexDefinition
      file_path: 
      hash: 2083123262
      method_name: 
    :details: 
      :flog: complexity is 2.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: RemoveCommentsOnCountriesTable
      file_path: ./spec/dummy/db/migrate/20120207103858_remove_comments_on_countries_table.rb
      hash: 5466713498
      method_name: 
    :details: 
      :reek: found 1 code smells
      :flog: average complexity is 1.8
  - :location: !ruby/object:MetricFu::Location 
      class_name: RemoveCommentOnPetsTable
      file_path: ./spec/dummy/db/migrate/20120207112916_remove_comment_on_pets_table.rb
      hash: 7966308998
      method_name: 
    :details: 
      :reek: found 1 code smells
      :flog: average complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: RemoveDemographyNationalities
      file_path: ./spec/dummy/db/migrate/20120301171826_remove_demography_nationalities.rb
      hash: -8307826165
      method_name: 
    :details: 
      :reek: found 1 code smells
      :flog: complexity is 1.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: Citizen
      file_path: ./spec/dummy/app/models/demography/citizen.rb
      hash: -7759132645
      method_name: 
    :details: 
      :reek: found 1 code smells
      :flog: complexity is 1.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::context
      file_path: ./spec/active_record/schema_dumper_spec.rb:21
      hash: 6781045156
      method_name: 
    :details: 
      :flog: average complexity is 1.3
  - :location: !ruby/object:MetricFu::Location 
      class_name: Country
      file_path: ./spec/dummy/app/models/demography/country.rb
      hash: -7867232571
      method_name: 
    :details: 
      :reek: found 1 code smells
      :flog: complexity is 1.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: RemoveSomeCommentsOnCitizens
      file_path: ./spec/dummy/db/migrate/20120208114020_remove_some_comments_on_citizens.rb
      hash: 5356603842
      method_name: 
    :details: 
      :reek: found 1 code smells
      :flog: average complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe#
      file_path: ./spec/active_record/schema_dumper_spec.rb:80
      hash: 3864529632
      method_name: 
    :details: 
      :flog: complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: ApplicationController
      file_path: ./spec/dummy/app/controllers/application_controller.rb
      hash: 805095906
      method_name: 
    :details: 
      :reek: found 1 code smells
      :flog: complexity is 1.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/indexes_spec.rb:12
      hash: 732844834
      method_name: 
    :details: 
      :flog: average complexity is 1.2
  - :location: !ruby/object:MetricFu::Location 
      class_name: describe
      file_path: ./spec/comment_methods_spec.rb:67
      hash: 1337639608
      method_name: 
    :details: 
      :flog: average complexity is 1.1
  - :location: !ruby/object:MetricFu::Location 
      class_name: User
      file_path: ./spec/dummy/app/models/user.rb
      hash: -7820038441
      method_name: 
    :details: 
      :reek: found 1 code smells
      :flog: complexity is 1.0
  - :location: !ruby/object:MetricFu::Location 
      class_name: Engine
      file_path: ./lib/pg_power/engine.rb
      hash: -4613860205
      method_name: 
    :details: 
      :reek: found 1 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: IndexExistsError
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      hash: 7082811184
      method_name: 
    :details: 
      :reek: found 1 code smells
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :CommentMethods)
      file_path: lib/pg_power/schema_dumper/comment_methods.rb
      hash: -2571626741
      method_name: 
    :details: 
      :rcov: average uncovered code is 0.0%
  - :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)
      file_path: lib/pg_power/schema_dumper/schema_methods.rb
      hash: -6275253841
      method_name: 
    :details: 
      :rcov: average uncovered code is 0.0%
:flay: 
  :matches: 
  - :matches: 
    - :line: "7"
      :name: ./spec/foreign_keys_spec.rb
    - :line: "13"
      :name: ./spec/foreign_keys_spec.rb
    - :line: "17"
      :name: ./spec/indexes_spec.rb
    - :line: "25"
      :name: ./spec/indexes_spec.rb
    :reason: 1) Similar code found in :iter (mass = 60)
  - :matches: 
    - :line: "22"
      :name: ./spec/support/explorer.rb
    - :line: "40"
      :name: ./spec/support/explorer.rb
    :reason: 2) Similar code found in :defn (mass = 60)
  - :matches: 
    - :line: "32"
      :name: ./lib/pg_power/schema_dumper/foreigner_methods.rb
    - :line: "35"
      :name: ./lib/pg_power/schema_dumper/foreigner_methods.rb
    - :line: "38"
      :name: ./lib/pg_power/schema_dumper/foreigner_methods.rb
    - :line: "41"
      :name: ./lib/pg_power/schema_dumper/foreigner_methods.rb
    :reason: 3) Similar code found in :call (mass = 56)
  - :matches: 
    - :line: "29"
      :name: ./spec/indexes_spec.rb
    - :line: "34"
      :name: ./spec/indexes_spec.rb
    :reason: 4) IDENTICAL code found in :call (mass*2 = 56)
  - :matches: 
    - :line: "33"
      :name: ./spec/comment_methods_spec.rb
    - :line: "38"
      :name: ./spec/comment_methods_spec.rb
    :reason: 5) Similar code found in :iter (mass = 54)
  - :matches: 
    - :line: "37"
      :name: ./spec/foreign_keys_spec.rb
    - :line: "45"
      :name: ./spec/foreign_keys_spec.rb
    :reason: 6) Similar code found in :iter (mass = 54)
  - :matches: 
    - :line: "6"
      :name: ./spec/support/explorer.rb
    - :line: "61"
      :name: ./spec/support/explorer.rb
    :reason: 7) Similar code found in :defn (mass = 54)
  - :matches: 
    - :line: "23"
      :name: ./spec/dummy/db/schema.rb
    - :line: "29"
      :name: ./spec/dummy/db/schema.rb
    :reason: 8) Similar code found in :iter (mass = 42)
  - :matches: 
    - :line: "21"
      :name: ./spec/comment_methods_spec.rb
    - :line: "26"
      :name: ./spec/comment_methods_spec.rb
    :reason: 9) Similar code found in :iter (mass = 36)
  - :matches: 
    - :line: "9"
      :name: ./spec/comment_methods_spec.rb
    - :line: "14"
      :name: ./spec/comment_methods_spec.rb
    :reason: 10) Similar code found in :iter (mass = 34)
  - :matches: 
    - :line: "60"
      :name: ./spec/dummy/db/schema.rb
    - :line: "88"
      :name: ./spec/dummy/db/schema.rb
    :reason: 11) Similar code found in :iter (mass = 34)
  - :matches: 
    - :line: "104"
      :name: ./spec/dummy/db/schema.rb
    - :line: "106"
      :name: ./spec/dummy/db/schema.rb
    - :line: "108"
      :name: ./spec/dummy/db/schema.rb
    :reason: 12) Similar code found in :call (mass = 33)
  - :matches: 
    - :line: "12"
      :name: ./lib/pg_power/tools.rb
    - :line: "18"
      :name: ./lib/pg_power/tools.rb
    :reason: 13) Similar code found in :defn (mass = 32)
  - :matches: 
    - :line: "17"
      :name: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
    - :line: "78"
      :name: ./spec/support/explorer.rb
    :reason: 14) Similar code found in :masgn (mass = 28)
  - :matches: 
    - :line: "46"
      :name: ./spec/comment_methods_spec.rb
    - :line: "50"
      :name: ./spec/comment_methods_spec.rb
    :reason: 15) Similar code found in :iter (mass = 26)
  - :matches: 
    - :line: "7"
      :name: ./spec/dummy/db/migrate/20120201163544_create_owners_and_breeds.rb
    - :line: "13"
      :name: ./spec/dummy/db/migrate/20120201163544_create_owners_and_breeds.rb
    :reason: 16) Similar code found in :iter (mass = 26)
  - :matches: 
    - :line: "24"
      :name: ./lib/pg_power/engine.rb
    - :line: "28"
      :name: ./lib/pg_power/engine.rb
    :reason: 17) Similar code found in :iter (mass = 22)
  - :matches: 
    - :line: "66"
      :name: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
    - :line: "20"
      :name: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
    :reason: 18) Similar code found in :lasgn (mass = 20)
  - :matches: 
    - :line: "15"
      :name: ./lib/pg_power/migration/command_recorder/schema_methods.rb
    - :line: "20"
      :name: ./lib/pg_power/migration/command_recorder/schema_methods.rb
    :reason: 19) Similar code found in :defn (mass = 20)
  :total_score: "747"
:reek: 
  :matches: 
  - :code_smells: 
    - :type: DataClump
      :message: takes parameters [column_name, options, table_name] to 3 methods
      :method: ActiveRecord::ConnectionAdapters::SchemaStatements
    - :type: Duplication
      :message: calls index_name_length twice
      :method: ActiveRecord::ConnectionAdapters::SchemaStatements#add_index_options
    - :type: Duplication
      :message: calls options[:where] twice
      :method: ActiveRecord::ConnectionAdapters::SchemaStatements#add_index_options
    - :type: LongMethod
      :message: has approx 12 statements
      :method: ActiveRecord::ConnectionAdapters::SchemaStatements#add_index_options
    - :type: Duplication
      :message: calls index.send(index_option) twice
      :method: ActiveRecord::ConnectionAdapters::SchemaStatements#index_exists?
    - :type: Duplication
      :message: calls lambda 3 times
      :method: ActiveRecord::ConnectionAdapters::SchemaStatements#index_exists?
    - :type: Duplication
      :message: calls options[index_option] twice
      :method: ActiveRecord::ConnectionAdapters::SchemaStatements#index_exists?
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: ActiveRecord::ConnectionAdapters::SchemaStatements#index_exists?
    - :type: LongMethod
      :message: has approx 14 statements
      :method: ActiveRecord::ConnectionAdapters::SchemaStatements#index_exists?
    - :type: LowCohesion
      :message: refers to pg_where_clause more than self
      :method: ActiveRecord::ConnectionAdapters::SchemaStatements#index_exists?
    :file_path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: ActiveRecord::ConnectionAdapters::PostgreSQLAdapter
    - :type: Duplication
      :message: calls row[0] twice
      :method: ActiveRecord::ConnectionAdapters::PostgreSQLAdapter#indexes
    - :type: LongMethod
      :message: has approx 16 statements
      :method: ActiveRecord::ConnectionAdapters::PostgreSQLAdapter#indexes
    - :type: LowCohesion
      :message: refers to row more than self
      :method: ActiveRecord::ConnectionAdapters::PostgreSQLAdapter#indexes
    :file_path: ./lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb
  - :code_smells: 
    - :type: Duplication
      :message: calls index.columns twice
      :method: ActiveRecord::SchemaDumper#indexes
    - :type: Duplication
      :message: calls index.lengths twice
      :method: ActiveRecord::SchemaDumper#indexes
    - :type: Duplication
      :message: calls index.where twice
      :method: ActiveRecord::SchemaDumper#indexes
    - :type: LongMethod
      :message: has approx 9 statements
      :method: ActiveRecord::SchemaDumper#indexes
    - :type: LowCohesion
      :message: refers to index more than self
      :method: ActiveRecord::SchemaDumper#indexes
    :file_path: ./lib/core_ext/active_record/schema_dumper.rb
  - :code_smells: []

    :file_path: ./lib/pg_power.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/abstract_adapter.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/abstract_adapter/index_methods.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/foreign_key_definition.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/index_definition.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/postgresql_adapter.rb
  - :code_smells: 
    - :type: LowCohesion
      :message: refers to row more than self
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::CommentMethods#comments
    :file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
  - :code_smells: 
    - :type: DataClump
      :message: takes parameters [from_table, options] to 3 methods
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods
    - :type: Duplication
      :message: calls options[:column] 3 times
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#add_foreign_key
    - :type: Duplication
      :message: calls options[:exclude_index] twice
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#add_foreign_key
    - :type: LongMethod
      :message: has approx 6 statements
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#add_foreign_key
    - :type: Duplication
      :message: calls options[:column] twice
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#add_foreign_key_sql
    - :type: Duplication
      :message: calls options[:options] twice
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#add_foreign_key_sql
    - :type: LongMethod
      :message: has approx 7 statements
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#add_foreign_key_sql
    - :type: LowCohesion
      :message: refers to options more than self
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#add_foreign_key_sql
    - :type: Duplication
      :message: calls options[:name] twice
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#foreign_key_name
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#foreign_key_name
    - :type: LowCohesion
      :message: refers to options more than self
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#foreign_key_name
    - :type: LongMethod
      :message: has approx 10 statements
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#foreign_keys
    - :type: LowCohesion
      :message: refers to row more than self
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#foreign_keys
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#id_column_name_from_table_name
    - :type: LowCohesion
      :message: refers to table more than self
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#id_column_name_from_table_name
    - :type: LongMethod
      :message: has approx 9 statements
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#remove_foreign_key
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: PgPower::IndexExistsError
    :file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
  - :code_smells: 
    - :type: LowCohesion
      :message: refers to table_name more than self
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::IndexMethods#index_name_for_remove
    :file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/table.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/table/comment_methods.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: PgPower::Engine
    :file_path: ./lib/pg_power/engine.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/migration.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/migration/command_recorder.rb
  - :code_smells: 
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: PgPower::Migration::CommandRecorder::CommentMethods#invert_set_column_comment
    - :type: LowCohesion
      :message: refers to args more than self
      :method: PgPower::Migration::CommandRecorder::CommentMethods#invert_set_column_comment
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: PgPower::Migration::CommandRecorder::CommentMethods#invert_set_column_comments
    - :type: LowCohesion
      :message: refers to args more than self
      :method: PgPower::Migration::CommandRecorder::CommentMethods#invert_set_column_comments
    - :type: LowCohesion
      :message: refers to args more than self
      :method: PgPower::Migration::CommandRecorder::CommentMethods#invert_set_table_comment
    :file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb
  - :code_smells: 
    - :type: Duplication
      :message: calls add_options[:column] twice
      :method: PgPower::Migration::CommandRecorder::ForeignerMethods#invert_add_foreign_key
    - :type: Duplication
      :message: calls add_options[:name] twice
      :method: PgPower::Migration::CommandRecorder::ForeignerMethods#invert_add_foreign_key
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: PgPower::Migration::CommandRecorder::ForeignerMethods#invert_add_foreign_key
    - :type: LongMethod
      :message: has approx 6 statements
      :method: PgPower::Migration::CommandRecorder::ForeignerMethods#invert_add_foreign_key
    - :type: LowCohesion
      :message: refers to add_options more than self
      :method: PgPower::Migration::CommandRecorder::ForeignerMethods#invert_add_foreign_key
    :file_path: ./lib/pg_power/migration/command_recorder/foreigner_methods.rb
  - :code_smells: 
    - :type: LowCohesion
      :message: refers to args more than self
      :method: PgPower::Migration::CommandRecorder::SchemaMethods#invert_create_schema
    - :type: LowCohesion
      :message: refers to args more than self
      :method: PgPower::Migration::CommandRecorder::SchemaMethods#invert_drop_schema
    :file_path: ./lib/pg_power/migration/command_recorder/schema_methods.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/schema_dumper.rb
  - :code_smells: 
    - :type: LongMethod
      :message: has approx 7 statements
      :method: PgPower::SchemaDumper::CommentMethods#dump_comments
    - :type: LowCohesion
      :message: refers to row more than self
      :method: PgPower::SchemaDumper::CommentMethods#dump_comments
    - :type: LowCohesion
      :message: refers to stream more than self
      :method: PgPower::SchemaDumper::CommentMethods#dump_comments
    :file_path: ./lib/pg_power/schema_dumper/comment_methods.rb
  - :code_smells: 
    - :type: Duplication
      :message: calls foreign_key.options 7 times
      :method: PgPower::SchemaDumper::ForeignerMethods#foreign_keys
    - :type: Duplication
      :message: calls foreign_key.options[:column] twice
      :method: PgPower::SchemaDumper::ForeignerMethods#foreign_keys
    - :type: Duplication
      :message: calls foreign_key.options[:dependent] twice
      :method: PgPower::SchemaDumper::ForeignerMethods#foreign_keys
    - :type: Duplication
      :message: calls foreign_key.options[:primary_key] twice
      :method: PgPower::SchemaDumper::ForeignerMethods#foreign_keys
    - :type: Duplication
      :message: calls foreign_key.to_table twice
      :method: PgPower::SchemaDumper::ForeignerMethods#foreign_keys
    - :type: LongMethod
      :message: has approx 11 statements
      :method: PgPower::SchemaDumper::ForeignerMethods#foreign_keys
    - :type: LowCohesion
      :message: refers to foreign_key more than self
      :method: PgPower::SchemaDumper::ForeignerMethods#foreign_keys
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: PgPower::SchemaDumper::ForeignerMethods#tables_with_foreign_keys
    - :type: LongMethod
      :message: has approx 7 statements
      :method: PgPower::SchemaDumper::ForeignerMethods#tables_with_foreign_keys
    :file_path: ./lib/pg_power/schema_dumper/foreigner_methods.rb
  - :code_smells: 
    - :type: LowCohesion
      :message: refers to stream more than self
      :method: PgPower::SchemaDumper::SchemaMethods#schema
    :file_path: ./lib/pg_power/schema_dumper/schema_methods.rb
  - :code_smells: 
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: PgPower::Tools#create_schema
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: PgPower::Tools#drop_schema
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: PgPower::Tools#schemas
    :file_path: ./lib/pg_power/tools.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/version.rb
  - :code_smells: []

    :file_path: ./spec/active_record/schema_dumper_spec.rb
  - :code_smells: []

    :file_path: ./spec/comment_methods_spec.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: ApplicationController
    :file_path: ./spec/dummy/app/controllers/application_controller.rb
  - :code_smells: []

    :file_path: ./spec/dummy/app/helpers/application_helper.rb
  - :code_smells: []

    :file_path: ./spec/dummy/app/models/demography.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: Demography::Citizen
    :file_path: ./spec/dummy/app/models/demography/citizen.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: Demography::Country
    :file_path: ./spec/dummy/app/models/demography/country.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: User
    :file_path: ./spec/dummy/app/models/user.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: Dummy::Application
    :file_path: ./spec/dummy/config/application.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/boot.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/environment.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/environments/development.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/environments/production.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/environments/test.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/initializers/backtrace_silencers.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/initializers/inflections.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/initializers/mime_types.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/initializers/secret_token.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/initializers/session_store.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/initializers/wrap_parameters.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/routes.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: CreatePets
    - :type: LongMethod
      :message: has approx 11 statements
      :method: CreatePets#change
    - :type: UncommunicativeName
      :message: has the variable name 't'
      :method: CreatePets#change
    - :type: LowCohesion
      :message: refers to t more than self
      :method: CreatePets#change
    :file_path: ./spec/dummy/db/migrate/20120105112744_create_pets.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: CreateUsers
    - :type: LongMethod
      :message: has approx 9 statements
      :method: CreateUsers#change
    - :type: UncommunicativeName
      :message: has the variable name 't'
      :method: CreateUsers#change
    :file_path: ./spec/dummy/db/migrate/20120106163544_create_users.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: CreateDemographySchema
    :file_path: ./spec/dummy/db/migrate/20120106163711_create_demography_schema.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: CreateDemographyCountries
    - :type: LongMethod
      :message: has approx 6 statements
      :method: CreateDemographyCountries#change
    - :type: UncommunicativeName
      :message: has the variable name 't'
      :method: CreateDemographyCountries#change
    :file_path: ./spec/dummy/db/migrate/20120106163810_create_demography_countries.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: CreateDemographyCitizens
    - :type: LongMethod
      :message: has approx 11 statements
      :method: CreateDemographyCitizens#change
    - :type: UncommunicativeName
      :message: has the variable name 't'
      :method: CreateDemographyCitizens#change
    - :type: LowCohesion
      :message: refers to t more than self
      :method: CreateDemographyCitizens#change
    :file_path: ./spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: CreateOwnersAndBreeds
    - :type: Duplication
      :message: calls t.string(:name) twice
      :method: CreateOwnersAndBreeds#change
    - :type: Duplication
      :message: calls t.timestamps twice
      :method: CreateOwnersAndBreeds#change
    - :type: LongMethod
      :message: has approx 6 statements
      :method: CreateOwnersAndBreeds#change
    - :type: UncommunicativeName
      :message: has the variable name 't'
      :method: CreateOwnersAndBreeds#change
    - :type: LowCohesion
      :message: refers to t more than self
      :method: CreateOwnersAndBreeds#change
    :file_path: ./spec/dummy/db/migrate/20120201163544_create_owners_and_breeds.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: RemoveCommentsOnCountriesTable
    :file_path: ./spec/dummy/db/migrate/20120207103858_remove_comments_on_countries_table.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: RemoveCommentOnPetsTable
    :file_path: ./spec/dummy/db/migrate/20120207112916_remove_comment_on_pets_table.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: AddForeignKeys
    - :type: LongMethod
      :message: has approx 6 statements
      :method: AddForeignKeys#change
    :file_path: ./spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: RemoveForeignKeys
    :file_path: ./spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: RemoveSomeCommentsOnCitizens
    :file_path: ./spec/dummy/db/migrate/20120208114020_remove_some_comments_on_citizens.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: CreateCitiesTable
    - :type: UncommunicativeName
      :message: has the variable name 't'
      :method: CreateCitiesTable#change
    :file_path: ./spec/dummy/db/migrate/20120209094937_create_cities_table.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: AddDemographyCitizensActiveColumn
    :file_path: ./spec/dummy/db/migrate/20120224204546_add_demography_citizens_active_column.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: CreateDemographyNationalities
    - :type: UncommunicativeName
      :message: has the variable name 't'
      :method: CreateDemographyNationalities#change
    :file_path: ./spec/dummy/db/migrate/20120301152819_create_demography_nationalities.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: DemographyPopulationStatisctics
    - :type: UncommunicativeName
      :message: has the variable name 't'
      :method: DemographyPopulationStatisctics#change
    - :type: LowCohesion
      :message: refers to t more than self
      :method: DemographyPopulationStatisctics#change
    :file_path: ./spec/dummy/db/migrate/20120301153650_demography_population_statisctics.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: RemoveDemographyNationalities
    :file_path: ./spec/dummy/db/migrate/20120301171826_remove_demography_nationalities.rb
  - :code_smells: []

    :file_path: ./spec/dummy/db/schema.rb
  - :code_smells: []

    :file_path: ./spec/foreign_keys_spec.rb
  - :code_smells: []

    :file_path: ./spec/indexes_spec.rb
  - :code_smells: []

    :file_path: ./spec/schema_methods_spec.rb
  - :code_smells: []

    :file_path: ./spec/spec_helper.rb
  - :code_smells: 
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: PgPower::Explorer#to_schema_and_table
    - :type: LowCohesion
      :message: refers to table_name more than self
      :method: PgPower::Explorer#to_schema_and_table
    :file_path: ./spec/support/explorer.rb
:churn: 
  :changed_methods: 
  - &id007 
    method: PostgreSQLAdapter#indexes
    klass: PostgreSQLAdapter
    file: lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb
  - &id003 
    method: "#to_schema_and_table"
    klass: ""
    file: spec/support/explorer.rb
  - &id002 
    method: "#has_foreign_key?"
    klass: ""
    file: spec/support/explorer.rb
  - &id005 
    method: "#table_exists?"
    klass: ""
    file: spec/support/explorer.rb
  - &id004 
    method: "#index_exists?"
    klass: ""
    file: spec/support/explorer.rb
  - &id006 
    method: "#get_column_comment"
    klass: ""
    file: spec/support/explorer.rb
  :changed_files: 
  - spec/dummy/db/migrate/20120301171826_remove_demography_nationalities.rb
  - lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb
  - /dev/null
  - tmp/metric_fu/_data/20120302.yml
  - spec/support/explorer.rb
  - "---- "
  - .metrics
  - spec/dummy/db/schema.rb
  - lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb
  - Gemfile.lock
  - README.markdown
  - Gemfile
  - spec/dummy/db/migrate/20120301152819_create_demography_nationalities.rb
  - tmp/metric_fu/_data/20120305.yml
  - spec/schema_methods_spec.rb
  - spec/dummy/db/migrate/20120301153650_demography_population_statisctics.rb
  - lib/pg_power/version.rb
  - lib/pg_power/connection_adapters/abstract_adapter.rb
  :changed_classes: 
  - &id001 
    klass: PostgreSQLAdapter
    file: lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb
  :class_churn: 
  - klass: 
      klass: CreateDemographyCitizens
      file: spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb
    times_changed: 1
  - klass: 
      klass: AddForeignKeys
      file: spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb
    times_changed: 1
  - klass: 
      klass: CreatePets
      file: spec/dummy/db/migrate/20120105112744_create_pets.rb
    times_changed: 1
  - klass: 
      klass: RemoveForeignKeys
      file: spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb
    times_changed: 1
  - klass: 
      klass: IndexExistsError
      file: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
    times_changed: 1
  - klass: *id001
    times_changed: 1
  :changes: 
  - :times_changed: 20
    :file_path: spec/dummy/db/schema.rb
  - :times_changed: 12
    :file_path: spec/active_record/schema_dumper_spec.rb
  - :times_changed: 11
    :file_path: lib/pg_power/engine.rb
  - :times_changed: 10
    :file_path: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
  - :times_changed: 9
    :file_path: Gemfile
  - :times_changed: 9
    :file_path: README.markdown
  - :times_changed: 8
    :file_path: lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb
  - :times_changed: 8
    :file_path: lib/pg_power.rb
  - :times_changed: 8
    :file_path: Gemfile.lock
  - :times_changed: 7
    :file_path: lib/pg_power/connection_adapters/postgresql_adapter.rb
  - :times_changed: 7
    :file_path: spec/support/explorer.rb
  - :times_changed: 7
    :file_path: .gitignore
  - :times_changed: 7
    :file_path: lib/pg_power/schema_dumper.rb
  - :times_changed: 6
    :file_path: spec/comment_methods_spec.rb
  - :times_changed: 5
    :file_path: lib/pg_power/schema_dumper/foreigner_methods.rb
  - :times_changed: 5
    :file_path: spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb
  - :times_changed: 5
    :file_path: lib/pg_power/migration/command_recorder.rb
  - :times_changed: 5
    :file_path: Rakefile
  - :times_changed: 5
    :file_path: spec/foreign_keys_spec.rb
  - :times_changed: 4
    :file_path: lib/core_ext/active_record/schema_dumper.rb
  - :times_changed: 4
    :file_path: spec/support/pg_comment_getter.rb
  - :times_changed: 4
    :file_path: lib/pg_power/connection_adapters/abstract_adapter.rb
  - :times_changed: 4
    :file_path: lib/pg_power/tools.rb
  - :times_changed: 4
    :file_path: spec/dummy/db/migrate/20120105112744_create_pets.rb
  - :times_changed: 4
    :file_path: pg_power.gemspec
  - :times_changed: 4
    :file_path: lib/pg_power/schema_dumper/schema_methods.rb
  - :times_changed: 3
    :file_path: spec/dummy/db/migrate/20120106163831_create_demography_countries.rb
  - :times_changed: 3
    :file_path: lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
  - :times_changed: 3
    :file_path: MIT-LICENSE
  - :times_changed: 3
    :file_path: spec/dummy/db/migrate/20120224204546_add_demography_citizens_active_column.rb
  - :times_changed: 3
    :file_path: lib/pg_power/connection_adapters.rb
  - :times_changed: 3
    :file_path: README.rdoc
  - :times_changed: 3
    :file_path: lib/pg_power/version.rb
  - :times_changed: 3
    :file_path: spec/dummy/log/development.log
  - :times_changed: 3
    :file_path: spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb
  - :times_changed: 3
    :file_path: spec/dummy/db/migrate/20120106163544_create_users.rb
  - :times_changed: 3
    :file_path: lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
  - :times_changed: 3
    :file_path: spec/dummy/db/migrate/20120209094937_create_cities_table.rb
  - :times_changed: 3
    :file_path: spec/dummy/config/database.yml
  - :times_changed: 3
    :file_path: spec/indexes_spec.rb
  - :times_changed: 3
    :file_path: lib/pg_power/connection_adapters/abstract/schema_definitions.rb
  - :times_changed: 3
    :file_path: lib/pg_power/connection_adapters/abstract/schema_statements.rb
  :method_churn: 
  - method: *id002
    times_changed: 2
  - method: 
      method: IndexExistsError#foreign_key_column_id_from_table_name
      klass: IndexExistsError
      file: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
    times_changed: 1
  - method: *id003
    times_changed: 1
  - method: 
      method: IndexExistsError#add_foreign_key
      klass: IndexExistsError
      file: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
    times_changed: 1
  - method: 
      method: IndexExistsError#add_foreign_key_sql
      klass: IndexExistsError
      file: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
    times_changed: 1
  - method: 
      method: RemoveForeignKeys#down
      klass: RemoveForeignKeys
      file: spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb
    times_changed: 1
  - method: *id004
    times_changed: 1
  - method: *id005
    times_changed: 1
  - method: 
      method: IndexExistsError#remove_foreign_key_sql
      klass: IndexExistsError
      file: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
    times_changed: 1
  - method: 
      method: IndexExistsError#dependency_sql
      klass: IndexExistsError
      file: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
    times_changed: 1
  - method: 
      method: IndexExistsError#drop_table
      klass: IndexExistsError
      file: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
    times_changed: 1
  - method: 
      method: RemoveForeignKeys#up
      klass: RemoveForeignKeys
      file: spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb
    times_changed: 1
  - method: 
      method: IndexExistsError#foreign_keys
      klass: IndexExistsError
      file: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
    times_changed: 1
  - method: *id006
    times_changed: 1
  - method: 
      method: IndexExistsError#remove_foreign_key
      klass: IndexExistsError
      file: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
    times_changed: 1
  - method: 
      method: AddForeignKeys#change
      klass: AddForeignKeys
      file: spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb
    times_changed: 1
  - method: 
      method: CreatePets#change
      klass: CreatePets
      file: spec/dummy/db/migrate/20120105112744_create_pets.rb
    times_changed: 1
  - method: 
      method: "#foreign_keys"
      klass: ""
      file: lib/pg_power/schema_dumper/foreigner_methods.rb
    times_changed: 1
  - method: 
      method: IndexExistsError#supports_foreign_keys?
      klass: IndexExistsError
      file: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
    times_changed: 1
  - method: 
      method: IndexExistsError#foreign_key_name
      klass: IndexExistsError
      file: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
    times_changed: 1
  - method: 
      method: CreateDemographyCitizens#change
      klass: CreateDemographyCitizens
      file: spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb
    times_changed: 1
  - method: *id007
    times_changed: 1
:rcov: 
  lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#set_column_comments: 0.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#remove_table_comment: 0.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#set_column_comment: 0.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#remove_column_comments: 0.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#remove_column_comment: 0.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#supports_comments?: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#set_table_comment: 0.0
    :lines: 
    - :content: "# Extends {ActiveRecord::ConnectionAdapters::AbstractAdapter} with"
      :was_run: true
    - :content: "# empty methods for comments feature."
      :was_run: true
    - :content: module PgPower::ConnectionAdapters::AbstractAdapter::CommentMethods
      :was_run: true
    - :content: "  def supports_comments?"
      :was_run: true
    - :content: "    false"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # Sets a comment on the given table."
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  # ===== Example"
      :was_run: true
    - :content: "  # ====== Creating a comment on phone_numbers table"
      :was_run: true
    - :content: "  #  set_table_comment :phone_numbers, 'This table stores phone numbers that conform to the North American Numbering Plan.'"
      :was_run: true
    - :content: "  def set_table_comment(table_name, comment)"
      :was_run: true
    - :content: "    # Does nothing"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: "  # Sets a comment on a given column of a given table."
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  # ===== Example"
      :was_run: true
    - :content: "  # ====== Creating a comment on npa column of table phone_numbers"
      :was_run: true
    - :content: "  #  set_column_comment :phone_numbers, :npa, 'Numbering Plan Area Code - Allowed ranges: [2-9] for first digit, [0-9] for second and third digit.'"
      :was_run: true
    - :content: "  def set_column_comment(table_name, column_name, comment)"
      :was_run: true
    - :content: "    # Does nothing"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: "  # Sets comments on multiple columns.  'comments' is a hash of column_name => comment pairs."
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  # ===== Example"
      :was_run: true
    - :content: "  # ====== Setting comments on the columns of the phone_numbers table"
      :was_run: true
    - :content: "  #  set_column_comments :phone_numbers, :npa => 'Numbering Plan Area Code - Allowed ranges: [2-9] for first digit, [0-9] for second and third digit.',"
      :was_run: true
    - :content: "  #                                      :nxx => 'Central Office Number'"
      :was_run: true
    - :content: "  def set_column_comments(table_name, comments)"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: "  # Removes any comment from the given table."
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  # ===== Example"
      :was_run: true
    - :content: "  # ====== Removing comment from phone numbers table"
      :was_run: true
    - :content: "  #  remove_table_comment :phone_numbers"
      :was_run: true
    - :content: "  def remove_table_comment(table_name)"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: "  # Removes any comment from the given column of a given table."
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  # ===== Example"
      :was_run: true
    - :content: "  # ====== Removing comment from the npa column of table phone_numbers"
      :was_run: true
    - :content: "  #  remove_column_comment :phone_numbers, :npa"
      :was_run: true
    - :content: "  def remove_column_comment(table_name, column_name)"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: "  # Removes any comment from the given columns of a given table."
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  # ===== Example"
      :was_run: true
    - :content: "  # ====== Removing comment from the npa and nxx columns of table phone_numbers"
      :was_run: true
    - :content: "  #  remove_column_comments :phone_numbers, :npa, :nxx"
      :was_run: true
    - :content: "  def remove_column_comments(table_name, *column_names)"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: end
      :was_run: true
    :percent_run: 96
  lib/pg_power.rb: 
    :methods: {}

    :lines: 
    - :content: require "pg_power/engine"
      :was_run: true
    - :content: "# Rails engine which allows to use some PostgreSQL features:"
      :was_run: true
    - :content: "# * Schemas."
      :was_run: true
    - :content: "# * Comments on columns and tables."
      :was_run: true
    - :content: "# * Foreign keys."
      :was_run: true
    - :content: "# * Partial indexes."
      :was_run: true
    - :content: module PgPower
      :was_run: true
    - :content: "  extend ActiveSupport::Autoload"
      :was_run: true
    - :content: "  autoload :Adapter"
      :was_run: true
    - :content: "  autoload :SchemaDumper"
      :was_run: true
    - :content: "  autoload :Tools"
      :was_run: true
    - :content: "  autoload :Migration"
      :was_run: true
    - :content: "  autoload :ConnectionAdapters"
      :was_run: true
    - :content: end
      :was_run: true
    :percent_run: 100
  lib/pg_power/migration/command_recorder/comment_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#set_column_comments: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#remove_column_comments: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#invert_set_column_comment: 80.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#set_column_comment: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#remove_column_comment: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#set_table_comment: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#remove_table_comment: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#invert_set_table_comment: 75.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#invert_set_column_comments: 75.0
    :lines: 
    - :content: "# Provides methods to extend {ActiveRecord::Migration::CommandRecorder} to"
      :was_run: true
    - :content: "# support comments feature."
      :was_run: true
    - :content: module  PgPower::Migration::CommandRecorder::CommentMethods
      :was_run: true
    - :content: "  # :nodoc:"
      :was_run: true
    - :content: "  def set_table_comment(*args)"
      :was_run: true
    - :content: "    record(:set_table_comment, args)"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # :nodoc:"
      :was_run: true
    - :content: "  def remove_table_comment(*args)"
      :was_run: true
    - :content: "    record(:remove_table_comments, args)"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # :nodoc:"
      :was_run: true
    - :content: "  def set_column_comment(*args)"
      :was_run: true
    - :content: "    record(:set_column_comment, args)"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # :nodoc:"
      :was_run: true
    - :content: "  def set_column_comments(*args)"
      :was_run: true
    - :content: "    record(:set_column_comments, args)"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # :nodoc:"
      :was_run: true
    - :content: "  def remove_column_comment(*args)"
      :was_run: true
    - :content: "    record(:remove_column_comment, args)"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # :nodoc:"
      :was_run: true
    - :content: "  def remove_column_comments(*args)"
      :was_run: true
    - :content: "    record(:remove_column_comments, args)"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # :nodoc:"
      :was_run: true
    - :content: "  def invert_set_table_comment(args)"
      :was_run: true
    - :content: "    table_name = args.first"
      :was_run: false
    - :content: "    [:remove_table_comment, [table_name]]"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # :nodoc:"
      :was_run: true
    - :content: "  def invert_set_column_comment(args)"
      :was_run: true
    - :content: "    table_name = args[0]"
      :was_run: false
    - :content: "    column_name = args[1]"
      :was_run: false
    - :content: "    [:remove_column_comment, [table_name, column_name]]"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # :nodoc:"
      :was_run: true
    - :content: "  def invert_set_column_comments(args)"
      :was_run: true
    - :content: "    i_args = [args[0]] + args[1].collect{|name, value| name  }"
      :was_run: false
    - :content: "    [:remove_column_comments, i_args]"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: end
      :was_run: false
    :percent_run: 48
  lib/pg_power/migration/command_recorder.rb: 
    :methods: {}

    :lines: 
    - :content: "# Provides methods to extend {ActiveRecord::Migration::CommandRecorder} to "
      :was_run: true
    - :content: "# support pg_power features."
      :was_run: true
    - :content: module PgPower::Migration::CommandRecorder
      :was_run: true
    - :content: "  extend ActiveSupport::Autoload"
      :was_run: true
    - :content: "  autoload :SchemaMethods"
      :was_run: true
    - :content: "  autoload :CommentMethods"
      :was_run: true
    - :content: "  autoload :ForeignerMethods"
      :was_run: true
    - :content: "  include SchemaMethods"
      :was_run: true
    - :content: "  include CommentMethods"
      :was_run: true
    - :content: "  include ForeignerMethods"
      :was_run: true
    - :content: end
      :was_run: true
    :percent_run: 100
  lib/pg_power/connection_adapters/foreign_key_definition.rb: 
    :methods: {}

    :lines: 
    - :content: module PgPower::ConnectionAdapters
      :was_run: true
    - :content: "  # Structure to store information about foreign keys related to from_table."
      :was_run: true
    - :content: "  class ForeignKeyDefinition < Struct.new(:from_table, :to_table, :options)"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: end
      :was_run: true
    :percent_run: 100
  lib/pg_power/connection_adapters/table/foreigner_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :ForeignerMethods)#references_with_foreign_keys: 88.8888888888889
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :ForeignerMethods)#foreign_key: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :ForeignerMethods)#remove_foreign_key: 66.6666666666667
    :lines: 
    - :content: "# Provides methods to extend {ActiveRecord::ConnectionAdapters::Table}"
      :was_run: true
    - :content: "# to support foreign keys feature."
      :was_run: true
    - :content: module PgPower::ConnectionAdapters::Table::ForeignerMethods
      :was_run: true
    - :content: "  # Adds a new foreign key to the table. +to_table+ can be a single Symbol, or"
      :was_run: true
    - :content: "  # an Array of Symbols. See SchemaStatements#add_foreign_key"
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  # ===== Examples"
      :was_run: true
    - :content: "  # ====== Creating a simple foreign key"
      :was_run: true
    - :content: "  # t.foreign_key(:people)"
      :was_run: true
    - :content: "  # ====== Defining the column"
      :was_run: true
    - :content: "  # t.foreign_key(:people, :column => :sender_id)"
      :was_run: true
    - :content: "  # ====== Creating a named foreign key"
      :was_run: true
    - :content: "  # t.foreign_key(:people, :column => :sender_id, :name => 'sender_foreign_key')"
      :was_run: true
    - :content: "  # ====== Defining the column of the +to_table+."
      :was_run: true
    - :content: "  # t.foreign_key(:people, :column => :sender_id, :primary_key => :person_id)"
      :was_run: true
    - :content: "  def foreign_key(to_table, options = {})"
      :was_run: true
    - :content: "    @base.add_foreign_key(@table_name, to_table, options)"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # Remove the given foreign key from the table."
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  # ===== Examples"
      :was_run: true
    - :content: "  # ====== Remove the suppliers_company_id_fk in the suppliers table."
      :was_run: true
    - :content: "  # change_table :suppliers do |t|"
      :was_run: true
    - :content: "  # t.remove_foreign_key :companies"
      :was_run: true
    - :content: "  # end"
      :was_run: true
    - :content: "  # ====== Remove the foreign key named accounts_branch_id_fk in the accounts table."
      :was_run: true
    - :content: "  # change_table :accounts do |t|"
      :was_run: true
    - :content: "  # t.remove_foreign_key :column => :branch_id"
      :was_run: true
    - :content: "  # end"
      :was_run: true
    - :content: "  # ====== Remove the foreign key named party_foreign_key in the accounts table."
      :was_run: true
    - :content: "  # change_table :accounts do |t|"
      :was_run: true
    - :content: "  # t.remove_index :name => :party_foreign_key"
      :was_run: true
    - :content: "  # end"
      :was_run: true
    - :content: "  def remove_foreign_key(options)"
      :was_run: true
    - :content: "    @base.remove_foreign_key(@table_name, options)"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # Deprecated"
      :was_run: true
    - :content: "  def references_with_foreign_keys(*args)"
      :was_run: true
    - :content: "    options = args.extract_options!"
      :was_run: false
    - :content: "    if fk_options = options.delete(:foreign_key)"
      :was_run: false
    - :content: "      p ActiveSupport::Deprecation.send(:deprecation_message, caller,"
      :was_run: false
    - :content: "        \":foreign_key in t.references is deprecated. \" \\"
      :was_run: false
    - :content: "        \"Use t.foreign_key instead\")"
      :was_run: false
    - :content: "    end"
      :was_run: false
    - :content: "    references_without_foreign_keys(*(args.dup << options))"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: end
      :was_run: false
    :percent_run: 72
  lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :SchemaMethods)#create_schema: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :SchemaMethods)#drop_schema: 66.6666666666667
    :lines: 
    - :content: "# Provides methods to extend {ActiveRecord::ConnectionAdapters::PostgreSQLAdapter}"
      :was_run: true
    - :content: "# to support schemas feature."
      :was_run: true
    - :content: module PgPower::ConnectionAdapters::PostgreSQLAdapter::SchemaMethods
      :was_run: true
    - :content: "  # Creates new schema in DB."
      :was_run: true
    - :content: "  # @param [String] schema_name"
      :was_run: true
    - :content: "  def create_schema(schema_name)"
      :was_run: true
    - :content: "    ::PgPower::Tools.create_schema(schema_name)"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # Drops schema in DB."
      :was_run: true
    - :content: "  # @param [String] schema_name"
      :was_run: true
    - :content: "  def drop_schema(schema_name)"
      :was_run: true
    - :content: "    ::PgPower::Tools.drop_schema(schema_name)"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: end
      :was_run: false
    :percent_run: 64
  lib/pg_power/tools.rb: 
    :methods: 
      PgPower#schemas: 0.0
      PgPower#create_schema: 75.0
      PgPower#drop_schema: 75.0
    :lines: 
    - :content: module PgPower
      :was_run: true
    - :content: "  # Provides utility methods to work with PostgreSQL databases."
      :was_run: true
    - :content: "  # Usage:"
      :was_run: true
    - :content: "  #   PgPower::Tools.create_schema \"services\"  # => create new PG schema \"services\""
      :was_run: true
    - :content: "  #   PgPower::Tools.create_schema \"nets\""
      :was_run: true
    - :content: "  #   PgPower::Tools.drop_schema \"services\"    # => remove the schema"
      :was_run: true
    - :content: "  #   PgPower::Tools.schemas                   # => [\"public\", \"information_schema\", \"nets\"]"
      :was_run: true
    - :content: "  module Tools"
      :was_run: true
    - :content: "    extend self"
      :was_run: true
    - :content: "    # Creates PostgreSQL schema"
      :was_run: true
    - :content: "    def create_schema(schema_name)"
      :was_run: true
    - :content: "      sql = %{CREATE SCHEMA \"#{schema_name}\"}"
      :was_run: false
    - :content: "      ActiveRecord::Base.connection.execute sql"
      :was_run: false
    - :content: "    end"
      :was_run: false
    - :content: "    # Drops PostgreSQL schema"
      :was_run: true
    - :content: "    def drop_schema(schema_name)"
      :was_run: true
    - :content: "      sql = %{DROP SCHEMA \"#{schema_name}\"}"
      :was_run: false
    - :content: "      ActiveRecord::Base.connection.execute sql"
      :was_run: false
    - :content: "    end"
      :was_run: false
    - :content: "    # Returns an array of existing schemas."
      :was_run: true
    - :content: "    def schemas"
      :was_run: true
    - :content: "      sql = \"SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' order by nspname\""
      :was_run: true
    - :content: "      ActiveRecord::Base.connection.query(sql).flatten"
      :was_run: true
    - :content: "    end"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: end
      :was_run: true
    :percent_run: 77
  lib/core_ext/active_record/schema_dumper.rb: 
    :methods: 
      ActiveRecord::SchemaDumper#indexes: 0.0
    :lines: 
    - :content: "module ActiveRecord #:nodoc:"
      :was_run: true
    - :content: "  # Patched version:  3.1.3"
      :was_run: true
    - :content: "  # Patched methods::"
      :was_run: true
    - :content: "  #   * indexes"
      :was_run: true
    - :content: "  class SchemaDumper #:nodoc:"
      :was_run: true
    - :content: "    # Writes out index-related details to the schema stream"
      :was_run: true
    - :content: "    #"
      :was_run: true
    - :content: "    # == Patch reason:"
      :was_run: true
    - :content: "    # {ActiveRecord::SchemaDumper#indexes} does not support writing out"
      :was_run: true
    - :content: "    # details related to partial indexes."
      :was_run: true
    - :content: "    #"
      :was_run: true
    - :content: "    # == Patch:"
      :was_run: true
    - :content: "    # Append :where clause if there's a partial index"
      :was_run: true
    - :content: "    #"
      :was_run: true
    - :content: "    def indexes(table, stream)"
      :was_run: true
    - :content: "      if (indexes = @connection.indexes(table)).any?"
      :was_run: true
    - :content: "        add_index_statements = indexes.map do |index|"
      :was_run: true
    - :content: "          statement_parts = ["
      :was_run: true
    - :content: "            ('add_index ' + index.table.inspect),"
      :was_run: true
    - :content: "            index.columns.inspect,"
      :was_run: true
    - :content: "            (':name => ' + index.name.inspect),"
      :was_run: true
    - :content: "          ]"
      :was_run: true
    - :content: "          statement_parts << ':unique => true' if index.unique"
      :was_run: true
    - :content: "          index_lengths = (index.lengths || []).compact"
      :was_run: true
    - :content: "          statement_parts << (':length => ' + Hash[index.columns.zip(index.lengths)].inspect) unless index_lengths.empty?"
      :was_run: true
    - :content: "          # Patch"
      :was_run: true
    - :content: "          #  Append :where clause if a partial index"
      :was_run: true
    - :content: "          statement_parts << (':where => ' + index.where.inspect) if index.where"
      :was_run: true
    - :content: "          '  ' + statement_parts.join(', ')"
      :was_run: true
    - :content: "        end"
      :was_run: true
    - :content: "        stream.puts add_index_statements.sort.join(\"\\n\")"
      :was_run: true
    - :content: "        stream.puts"
      :was_run: true
    - :content: "      end"
      :was_run: true
    - :content: "    end"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: end
      :was_run: true
    :percent_run: 100
  :global_percent_run: 84.3
  lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :SchemaMethods)#drop_table_with_schema_option: 80.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :SchemaMethods)#create_table_with_schema_option: 80.0
    :lines: 
    - :content: "# Extends {ActiveRecord::ConnectionAdapters::AbstractAdapter} "
      :was_run: true
    - :content: "# with methods for multi schema support."
      :was_run: true
    - :content: module PgPower::ConnectionAdapters::AbstractAdapter::SchemaMethods
      :was_run: true
    - :content: "  # Provides :schema option to +create_table+ method."
      :was_run: true
    - :content: "  def create_table_with_schema_option(table_name, options = {}, &block)"
      :was_run: true
    - :content: "    schema_name = options.delete(:schema)"
      :was_run: false
    - :content: "    table_name  = \"#{schema_name}.#{table_name}\" if schema_name"
      :was_run: false
    - :content: "    create_table_without_schema_option(table_name, options, &block)"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # Provides :schema option to +drop_table+ method."
      :was_run: true
    - :content: "  def drop_table_with_schema_option(table_name, options = {})"
      :was_run: true
    - :content: "    schema_name = options.delete(:schema)"
      :was_run: false
    - :content: "    table_name  = \"#{schema_name}.#{table_name}\" if schema_name"
      :was_run: false
    - :content: "    drop_table_without_schema_option(table_name, options)"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: end
      :was_run: false
    :percent_run: 44
  lib/pg_power/connection_adapters/table.rb: 
    :methods: {}

    :lines: 
    - :content: "# Provides methods to extend {ActiveRecord::ConnectionAdapters::Table}"
      :was_run: true
    - :content: "# to support pg_power features."
      :was_run: true
    - :content: module PgPower::ConnectionAdapters::Table
      :was_run: true
    - :content: "  extend ActiveSupport::Autoload"
      :was_run: true
    - :content: "  extend ActiveSupport::Concern"
      :was_run: true
    - :content: "  autoload :CommentMethods"
      :was_run: true
    - :content: "  autoload :ForeignerMethods"
      :was_run: true
    - :content: "  include CommentMethods"
      :was_run: true
    - :content: "  include ForeignerMethods"
      :was_run: true
    - :content: "  included do"
      :was_run: true
    - :content: "    alias_method_chain :references, :foreign_keys"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: end
      :was_run: true
    :percent_run: 100
  lib/pg_power/schema_dumper/comment_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :CommentMethods)#tables_with_comments: 0.0
      s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :CommentMethods)#dump_comments: 0.0
    :lines: 
    - :content: "# Extends ActiveRecord::SchemaDumper class to dump comments on tables and columns."
      :was_run: true
    - :content: module PgPower::SchemaDumper::CommentMethods
      :was_run: true
    - :content: "  # Hooks {ActiveRecord::SchemaDumper#table} method to dump comments on"
      :was_run: true
    - :content: "  # table and columns."
      :was_run: true
    - :content: "  def tables_with_comments(stream)"
      :was_run: true
    - :content: "    tables_without_comments(stream)"
      :was_run: true
    - :content: "    table_names = @connection.tables.sort"
      :was_run: true
    - :content: "    table_names += get_non_public_schema_table_names.sort"
      :was_run: true
    - :content: "    table_names.each do |table_name|"
      :was_run: true
    - :content: "      dump_comments(table_name, stream)"
      :was_run: true
    - :content: "    end"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: "  # Finds all comments related to passed table and writes appropriated"
      :was_run: true
    - :content: "  # statements to stream."
      :was_run: true
    - :content: "  def dump_comments(table_name, stream)"
      :was_run: true
    - :content: "    unless (comments = @connection.comments(table_name)).empty?"
      :was_run: true
    - :content: "      comment_statements = comments.map do |row|"
      :was_run: true
    - :content: "        column_name = row[0]"
      :was_run: true
    - :content: "        comment = row[1].gsub(/'/, \"\\\\\\\\'\")"
      :was_run: true
    - :content: "        if column_name"
      :was_run: true
    - :content: "          \"  set_column_comment '#{table_name}', '#{column_name}', '#{comment}'\""
      :was_run: true
    - :content: "        else"
      :was_run: true
    - :content: "          \"  set_table_comment '#{table_name}', '#{comment}'\""
      :was_run: true
    - :content: "        end"
      :was_run: true
    - :content: "      end"
      :was_run: true
    - :content: "      stream.puts comment_statements.join(\"\\n\")"
      :was_run: true
    - :content: "      stream.puts"
      :was_run: true
    - :content: "    end"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: "  private :dump_comments"
      :was_run: true
    - :content: end
      :was_run: true
    :percent_run: 100
  lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb: 
    :methods: 
      ActiveRecord::PostgreSQLAdapter#indexes: 13.8888888888889
    :lines: 
    - :content: "module ActiveRecord # :nodoc:"
      :was_run: true
    - :content: "  module ConnectionAdapters # :nodoc:"
      :was_run: true
    - :content: "    # Patched version:  3.1.3"
      :was_run: true
    - :content: "    # Patched methods::"
      :was_run: true
    - :content: "    #   * indexes"
      :was_run: true
    - :content: "    class PostgreSQLAdapter"
      :was_run: true
    - :content: "      # Returns an array of indexes for the given table."
      :was_run: true
    - :content: "      #"
      :was_run: true
    - :content: "      # == Patch 1 reason:"
      :was_run: true
    - :content: "      # Since {ActiveRecord::SchemaDumper#tables} is patched to process tables"
      :was_run: true
    - :content: "      # with a schema prefix, the {#indexes} method receives table_name as"
      :was_run: true
    - :content: "      # \"<schema>.<table>\". This patch allows it to handle table names with"
      :was_run: true
    - :content: "      # a schema prefix."
      :was_run: true
    - :content: "      #"
      :was_run: true
    - :content: "      # == Patch 1:"
      :was_run: true
    - :content: "      # Search using provided schema if table_name includes schema name."
      :was_run: true
    - :content: "      #"
      :was_run: true
    - :content: "      # == Patch 2 reason:"
      :was_run: true
    - :content: "      # {ActiveRecord::ConnectionAdapters::PostgreSQLAdapter#indexes} is patched"
      :was_run: true
    - :content: "      # to support partial indexes using :where clause."
      :was_run: true
    - :content: "      #"
      :was_run: true
    - :content: "      # == Patch 2:"
      :was_run: true
    - :content: "      # Search the postgres indexdef for the where clause and pass the output to"
      :was_run: true
    - :content: "      # the custom {PgPower::ConnectionAdapters::IndexDefinition}"
      :was_run: true
    - :content: "      #"
      :was_run: true
    - :content: "      def indexes(table_name, name = nil)"
      :was_run: true
    - :content: "        schema, table = extract_schema_and_table(table_name)"
      :was_run: true
    - :content: "        schemas = schema ? \"ARRAY['#{schema}']\" : 'current_schemas(false)'"
      :was_run: true
    - :content: "        result = query(<<-SQL, name)"
      :was_run: true
    - :content: "          SELECT distinct i.relname, d.indisunique, d.indkey,  pg_get_indexdef(d.indexrelid), t.oid"
      :was_run: true
    - :content: "          FROM pg_class t"
      :was_run: true
    - :content: "          INNER JOIN pg_index d ON t.oid = d.indrelid"
      :was_run: true
    - :content: "          INNER JOIN pg_class i ON d.indexrelid = i.oid"
      :was_run: true
    - :content: "          WHERE i.relkind = 'i'"
      :was_run: true
    - :content: "            AND d.indisprimary = 'f'"
      :was_run: true
    - :content: "            AND t.relname = '#{table}'"
      :was_run: true
    - :content: "            AND i.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (#{schemas}) )"
      :was_run: true
    - :content: "         ORDER BY i.relname"
      :was_run: true
    - :content: "        SQL"
      :was_run: true
    - :content: "        result.map do |row|"
      :was_run: true
    - :content: "          index_name = row[0]"
      :was_run: true
    - :content: "          unique = row[1] == 't'"
      :was_run: true
    - :content: "          indkey = row[2].split(\" \")"
      :was_run: true
    - :content: "          inddef = row[3]"
      :was_run: true
    - :content: "          oid = row[4]"
      :was_run: true
    - :content: "          columns = Hash[query(<<-SQL, \"Columns for index #{row[0]} on #{table_name}\")]"
      :was_run: true
    - :content: "          SELECT a.attnum, a.attname"
      :was_run: true
    - :content: "          FROM pg_attribute a"
      :was_run: true
    - :content: "          WHERE a.attrelid = #{oid}"
      :was_run: true
    - :content: "          AND a.attnum IN (#{indkey.join(\",\")})"
      :was_run: true
    - :content: "          SQL"
      :was_run: true
    - :content: "          column_names = columns.values_at(*indkey).compact"
      :was_run: true
    - :content: "          where = inddef.scan(/WHERE (.+)$/).flatten[0]"
      :was_run: true
    - :content: "          # TODO Update lengths once we merge in ActiveRecord code that supports it. -dresselm 20120305"
      :was_run: true
    - :content: "          lengths = []"
      :was_run: true
    - :content: "          column_names.empty? ? nil : PgPower::ConnectionAdapters::IndexDefinition.new(table_name, index_name, unique, column_names, lengths, where)"
      :was_run: true
    - :content: "        end.compact"
      :was_run: false
    - :content: "      end"
      :was_run: false
    - :content: "    end"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: end
      :was_run: false
    :percent_run: 92
  lib/pg_power/connection_adapters/index_definition.rb: 
    :methods: {}

    :lines: 
    - :content: module PgPower::ConnectionAdapters
      :was_run: true
    - :content: "  # Structure to store index parameters"
      :was_run: true
    - :content: "  # Overrides ActiveRecord::ConnectionAdapters::IndexDefinition with the additional :where parameter"
      :was_run: true
    - :content: "  class IndexDefinition < Struct.new(:table, :name, :unique, :columns, :lengths, :where)"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: end
      :was_run: true
    :percent_run: 100
  lib/pg_power/connection_adapters/abstract_adapter.rb: 
    :methods: {}

    :lines: 
    - :content: "# Extends {ActiveRecord::ConnectionAdapters::AbstractAdapter} class."
      :was_run: true
    - :content: module PgPower::ConnectionAdapters::AbstractAdapter
      :was_run: true
    - :content: "  extend ActiveSupport::Autoload"
      :was_run: true
    - :content: "  extend ActiveSupport::Concern"
      :was_run: true
    - :content: "  autoload :CommentMethods"
      :was_run: true
    - :content: "  autoload :ForeignerMethods"
      :was_run: true
    - :content: "  autoload :SchemaMethods"
      :was_run: true
    - :content: "  autoload :IndexMethods"
      :was_run: true
    - :content: "  include CommentMethods"
      :was_run: true
    - :content: "  include ForeignerMethods"
      :was_run: true
    - :content: "  include SchemaMethods"
      :was_run: true
    - :content: "  include IndexMethods"
      :was_run: true
    - :content: "  included do"
      :was_run: true
    - :content: "    alias_method_chain :create_table, :schema_option"
      :was_run: true
    - :content: "    alias_method_chain :drop_table  , :schema_option"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: end
      :was_run: true
    :percent_run: 100
  lib/pg_power/schema_dumper.rb: 
    :methods: {}

    :lines: 
    - :content: "# Provides methods to extend {ActiveRecord::SchemaDumper} to appropriately"
      :was_run: true
    - :content: "# build schema.rb file with schemas, foreign keys and comments on columns"
      :was_run: true
    - :content: "# and tables."
      :was_run: true
    - :content: module PgPower::SchemaDumper
      :was_run: true
    - :content: "  extend ActiveSupport::Autoload"
      :was_run: true
    - :content: "  extend ActiveSupport::Concern"
      :was_run: true
    - :content: "  autoload :CommentMethods"
      :was_run: true
    - :content: "  autoload :SchemaMethods"
      :was_run: true
    - :content: "  autoload :ForeignerMethods"
      :was_run: true
    - :content: "  include CommentMethods"
      :was_run: true
    - :content: "  include SchemaMethods"
      :was_run: true
    - :content: "  include ForeignerMethods"
      :was_run: true
    - :content: "  included do"
      :was_run: true
    - :content: "    alias_method_chain :tables, :schemas"
      :was_run: true
    - :content: "    alias_method_chain :tables, :comments"
      :was_run: true
    - :content: "    alias_method_chain :tables, :foreign_keys"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: end
      :was_run: true
    :percent_run: 100
  lib/pg_power/engine.rb: 
    :methods: {}

    :lines: 
    - :content: module PgPower
      :was_run: true
    - :content: "  # :nodoc"
      :was_run: true
    - :content: "  class Engine < Rails::Engine"
      :was_run: true
    - :content: "    initializer 'pg_power' do"
      :was_run: true
    - :content: "      ActiveSupport.on_load(:active_record) do"
      :was_run: true
    - :content: "        # load monkey patches"
      :was_run: true
    - :content: "        ['schema_dumper',"
      :was_run: true
    - :content: "         'connection_adapters/postgresql_adapter',"
      :was_run: true
    - :content: "         'connection_adapters/abstract/schema_statements'].each do |path|"
      :was_run: true
    - :content: "          require PgPower::Engine.root + 'lib/core_ext/active_record/' + path"
      :was_run: true
    - :content: "        end"
      :was_run: true
    - :content: "        ActiveRecord::SchemaDumper.class_eval do"
      :was_run: true
    - :content: "          include PgPower::SchemaDumper"
      :was_run: true
    - :content: "        end"
      :was_run: true
    - :content: "        if defined?(ActiveRecord::Migration::CommandRecorder)"
      :was_run: true
    - :content: "          ActiveRecord::Migration::CommandRecorder.class_eval do"
      :was_run: true
    - :content: "            include ::PgPower::Migration::CommandRecorder"
      :was_run: true
    - :content: "          end"
      :was_run: true
    - :content: "        end"
      :was_run: true
    - :content: "        ActiveRecord::ConnectionAdapters::Table.module_eval do"
      :was_run: true
    - :content: "          include PgPower::ConnectionAdapters::Table"
      :was_run: true
    - :content: "        end"
      :was_run: true
    - :content: "        ActiveRecord::ConnectionAdapters::AbstractAdapter.module_eval do"
      :was_run: true
    - :content: "          include PgPower::ConnectionAdapters::AbstractAdapter"
      :was_run: true
    - :content: "        end"
      :was_run: true
    - :content: "        if defined?(ActiveRecord::ConnectionAdapters::JdbcAdapter)"
      :was_run: true
    - :content: "          sql_adapter_class = ActiveRecord::ConnectionAdapters::JdbcAdapter"
      :was_run: false
    - :content: "        else"
      :was_run: true
    - :content: "          sql_adapter_class = ActiveRecord::ConnectionAdapters::PostgreSQLAdapter"
      :was_run: true
    - :content: "        end"
      :was_run: true
    - :content: "        sql_adapter_class.class_eval do"
      :was_run: true
    - :content: "          include PgPower::ConnectionAdapters::PostgreSQLAdapter"
      :was_run: true
    - :content: "        end"
      :was_run: true
    - :content: "      end"
      :was_run: true
    - :content: "    end"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: end
      :was_run: true
    :percent_run: 97
  lib/pg_power/schema_dumper/schema_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)#non_public_schema_tables: 0.0
      s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)#schema: 0.0
      s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)#get_non_public_schema_table_names: 0.0
      s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)#schemas: 0.0
      s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)#tables_with_schemas: 0.0
    :lines: 
    - :content: "# Extends ActiveRecord::SchemaDumper class to dump schemas other than \"public\""
      :was_run: true
    - :content: "# and tables from those schemas."
      :was_run: true
    - :content: module PgPower::SchemaDumper::SchemaMethods
      :was_run: true
    - :content: "  # * Dumps schemas."
      :was_run: true
    - :content: "  # * Dumps tables from public schema using native #tables method."
      :was_run: true
    - :content: "  # * Dumps tables from schemas other than public."
      :was_run: true
    - :content: "  def tables_with_schemas(stream)"
      :was_run: true
    - :content: "    schemas(stream)"
      :was_run: true
    - :content: "    tables_without_schemas(stream)"
      :was_run: true
    - :content: "    non_public_schema_tables(stream)"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: "  # Generates code to create schemas."
      :was_run: true
    - :content: "  def schemas(stream)"
      :was_run: true
    - :content: "    # Don't create \"public\" schema since it exists by default."
      :was_run: true
    - :content: "    schema_names = PgPower::Tools.schemas - [\"public\", \"information_schema\"]"
      :was_run: true
    - :content: "    schema_names.each do |schema_name|"
      :was_run: true
    - :content: "      schema(schema_name, stream)"
      :was_run: true
    - :content: "    end"
      :was_run: true
    - :content: "    stream << \"\\n\""
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: "  private :schemas"
      :was_run: true
    - :content: "  # Generates code to create schema."
      :was_run: true
    - :content: "  def schema(schema_name, stream)"
      :was_run: true
    - :content: "    stream << \"  create_schema \\\"#{schema_name}\\\"\\n\""
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: "  private :schema"
      :was_run: true
    - :content: "  # Dumps tables from schemas other than public"
      :was_run: true
    - :content: "  def non_public_schema_tables(stream)"
      :was_run: true
    - :content: "    get_non_public_schema_table_names.each do |name|"
      :was_run: true
    - :content: "      table(name, stream)"
      :was_run: true
    - :content: "    end"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: "  private :non_public_schema_tables"
      :was_run: true
    - :content: "  # Returns a sorted list of non-public schema tables"
      :was_run: true
    - :content: "  # Usage:"
      :was_run: true
    - :content: "  #   get_non_public_schema_table_names # => ['demography.cities','demography.countries','politics.members']"
      :was_run: true
    - :content: "  def get_non_public_schema_table_names"
      :was_run: true
    - :content: "    result = @connection.query(<<-SQL, 'SCHEMA')"
      :was_run: true
    - :content: "      SELECT schemaname || '.' || tablename"
      :was_run: true
    - :content: "      FROM pg_tables"
      :was_run: true
    - :content: "      WHERE schemaname NOT IN ('pg_catalog', 'information_schema', 'public')"
      :was_run: true
    - :content: "      ORDER BY schemaname, tablename"
      :was_run: true
    - :content: "    SQL"
      :was_run: true
    - :content: "    result.flatten"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: "  private :get_non_public_schema_table_names"
      :was_run: true
    - :content: end
      :was_run: true
    :percent_run: 100
  lib/pg_power/connection_adapters.rb: 
    :methods: {}

    :lines: 
    - :content: "module PgPower::ConnectionAdapters # :nodoc:"
      :was_run: true
    - :content: "  extend ActiveSupport::Autoload"
      :was_run: true
    - :content: "  autoload :AbstractAdapter"
      :was_run: true
    - :content: "  autoload :PostgreSQLAdapter, 'pg_power/connection_adapters/postgresql_adapter'"
      :was_run: true
    - :content: "  autoload :Table"
      :was_run: true
    - :content: "  autoload :ForeignKeyDefinition"
      :was_run: true
    - :content: "  autoload :IndexDefinition, 'pg_power/connection_adapters/index_definition'"
      :was_run: true
    - :content: end
      :was_run: true
    :percent_run: 100
  lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)#remove_foreign_key: 0.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)#add_foreign_key: 0.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)#supports_foreign_keys?: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)#foreign_keys: 66.6666666666667
    :lines: 
    - :content: "# Extends {ActiveRecord::ConnectionAdapters::AbstractAdapter} with"
      :was_run: true
    - :content: "# empty methods for foreign keys feature."
      :was_run: true
    - :content: module PgPower::ConnectionAdapters::AbstractAdapter::ForeignerMethods
      :was_run: true
    - :content: "  def supports_foreign_keys?"
      :was_run: true
    - :content: "    false"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # Adds a new foreign key to the +from_table+, referencing the primary key of +to_table+"
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  # The foreign key will be named after the from and to tables unless you pass"
      :was_run: true
    - :content: "  # <tt>:name</tt> as an option."
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  # ===== Examples"
      :was_run: true
    - :content: "  # ====== Creating a foreign key"
      :was_run: true
    - :content: "  # add_foreign_key(:comments, :posts)"
      :was_run: true
    - :content: "  # generates"
      :was_run: true
    - :content: "  # ALTER TABLE `comments` ADD CONSTRAINT"
      :was_run: true
    - :content: "  # `comments_post_id_fk` FOREIGN KEY (`post_id`) REFERENCES `posts` (`id`)"
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  # ====== Creating a named foreign key"
      :was_run: true
    - :content: "  # add_foreign_key(:comments, :posts, :name => 'comments_belongs_to_posts')"
      :was_run: true
    - :content: "  # generates"
      :was_run: true
    - :content: "  # ALTER TABLE `comments` ADD CONSTRAINT"
      :was_run: true
    - :content: "  # `comments_belongs_to_posts` FOREIGN KEY (`post_id`) REFERENCES `posts` (`id`)"
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  # ====== Creating a cascading foreign_key on a custom column"
      :was_run: true
    - :content: "  # add_foreign_key(:people, :people, :column => 'best_friend_id', :dependent => :nullify)"
      :was_run: true
    - :content: "  # generates"
      :was_run: true
    - :content: "  # ALTER TABLE `people` ADD CONSTRAINT"
      :was_run: true
    - :content: "  # `people_best_friend_id_fk` FOREIGN KEY (`best_friend_id`) REFERENCES `people` (`id`)"
      :was_run: true
    - :content: "  # ON DELETE SET NULL"
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  # === Supported options"
      :was_run: true
    - :content: "  # [:column]"
      :was_run: true
    - :content: "  # Specify the column name on the from_table that references the to_table. By default this is guessed"
      :was_run: true
    - :content: "  # to be the singular name of the to_table with \"_id\" suffixed. So a to_table of :posts will use \"post_id\""
      :was_run: true
    - :content: "  # as the default <tt>:column</tt>."
      :was_run: true
    - :content: "  # [:primary_key]"
      :was_run: true
    - :content: "  # Specify the column name on the to_table that is referenced by this foreign key. By default this is"
      :was_run: true
    - :content: "  # assumed to be \"id\"."
      :was_run: true
    - :content: "  # [:name]"
      :was_run: true
    - :content: "  # Specify the name of the foreign key constraint. This defaults to use from_table and foreign key column."
      :was_run: true
    - :content: "  # [:dependent]"
      :was_run: true
    - :content: "  # If set to <tt>:delete</tt>, the associated records in from_table are deleted when records in to_table table are deleted."
      :was_run: true
    - :content: "  # If set to <tt>:nullify</tt>, the foreign key column is set to +NULL+."
      :was_run: true
    - :content: "  # [:options]"
      :was_run: true
    - :content: "  # Any extra options you want appended to the foreign key definition."
      :was_run: true
    - :content: "  def add_foreign_key(from_table, to_table, options = {})"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: "  # Remove the given foreign key from the table."
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  # ===== Examples"
      :was_run: true
    - :content: "  # ====== Remove the suppliers_company_id_fk in the suppliers table."
      :was_run: true
    - :content: "  # remove_foreign_key :suppliers, :companies"
      :was_run: true
    - :content: "  # ====== Remove the foreign key named accounts_branch_id_fk in the accounts table."
      :was_run: true
    - :content: "  # remove_foreign_key :accounts, :column => :branch_id"
      :was_run: true
    - :content: "  # ====== Remove the foreign key named party_foreign_key in the accounts table."
      :was_run: true
    - :content: "  # remove_foreign_key :accounts, :name => :party_foreign_key"
      :was_run: true
    - :content: "  def remove_foreign_key(from_table, options)"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: "  # Return the foreign keys for the schema_dumper"
      :was_run: true
    - :content: "  def foreign_keys(table_name)"
      :was_run: true
    - :content: "    []"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: end
      :was_run: false
    :percent_run: 92
  lib/pg_power/connection_adapters/postgresql_adapter.rb: 
    :methods: {}

    :lines: 
    - :content: "# Provides methods to extend {ActiveRecord::ConnectionAdapters::PostgreSQLAdapter}"
      :was_run: true
    - :content: "# to support pg_power features."
      :was_run: true
    - :content: module PgPower::ConnectionAdapters::PostgreSQLAdapter
      :was_run: true
    - :content: "  extend ActiveSupport::Autoload"
      :was_run: true
    - :content: "  extend ActiveSupport::Concern"
      :was_run: true
    - :content: "  autoload :SchemaMethods   , 'pg_power/connection_adapters/postgresql_adapter/schema_methods'"
      :was_run: true
    - :content: "  autoload :CommentMethods  , 'pg_power/connection_adapters/postgresql_adapter/comment_methods'"
      :was_run: true
    - :content: "  autoload :ForeignerMethods, 'pg_power/connection_adapters/postgresql_adapter/foreigner_methods'"
      :was_run: true
    - :content: "  autoload :IndexMethods    , 'pg_power/connection_adapters/postgresql_adapter/index_methods'"
      :was_run: true
    - :content: "  include SchemaMethods"
      :was_run: true
    - :content: "  include CommentMethods"
      :was_run: true
    - :content: "  include ForeignerMethods"
      :was_run: true
    - :content: "  include IndexMethods"
      :was_run: true
    - :content: end
      :was_run: true
    :percent_run: 100
  lib/pg_power/migration/command_recorder/schema_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)#drop_schema: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)#invert_drop_schema: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)#invert_create_schema: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)#create_schema: 66.6666666666667
    :lines: 
    - :content: "# Provides methods to extend {ActiveRecord::Migration::CommandRecorder} to"
      :was_run: true
    - :content: "# support multi schemas feature."
      :was_run: true
    - :content: module  PgPower::Migration::CommandRecorder::SchemaMethods
      :was_run: true
    - :content: "  # :nodoc:"
      :was_run: true
    - :content: "  def create_schema(*args)"
      :was_run: true
    - :content: "    record(:create_schema, args)"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # :nodoc:"
      :was_run: true
    - :content: "  def drop_schema(*args)"
      :was_run: true
    - :content: "    record(:drop_schema, args)"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # :nodoc:"
      :was_run: true
    - :content: "  def invert_create_schema(args)"
      :was_run: true
    - :content: "    [:drop_schema, [args.first]]"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # :nodoc:"
      :was_run: true
    - :content: "  def invert_drop_schema(args)"
      :was_run: true
    - :content: "    [:create_schema, [args.first]]"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: end
      :was_run: false
    :percent_run: 55
  lib/pg_power/connection_adapters/abstract_adapter/index_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :IndexMethods)#supports_partial_index?: 66.6666666666667
    :lines: 
    - :content: "# Extends {ActiveRecord::ConnectionAdapters::AbstractAdapter}"
      :was_run: true
    - :content: module PgPower::ConnectionAdapters::AbstractAdapter::IndexMethods
      :was_run: true
    - :content: "  def supports_partial_index?"
      :was_run: true
    - :content: "    false"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: end
      :was_run: false
    :percent_run: 50
  lib/pg_power/migration.rb: 
    :methods: {}

    :lines: 
    - :content: "module PgPower::Migration  # :nordoc:"
      :was_run: true
    - :content: "  extend ActiveSupport::Autoload"
      :was_run: true
    - :content: "  autoload :CommandRecorder"
      :was_run: true
    - :content: end
      :was_run: true
    :percent_run: 100
  lib/pg_power/migration/command_recorder/foreigner_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :ForeignerMethods)#add_foreign_key: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :ForeignerMethods)#invert_add_foreign_key: 91.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :ForeignerMethods)#remove_foreign_key: 66.6666666666667
    :lines: 
    - :content: "# Provides methods to extend {ActiveRecord::Migration::CommandRecorder} to"
      :was_run: true
    - :content: "# support foreign keys feature."
      :was_run: true
    - :content: module PgPower::Migration::CommandRecorder::ForeignerMethods
      :was_run: true
    - :content: "  # :nodoc:"
      :was_run: true
    - :content: "  def add_foreign_key(*args)"
      :was_run: true
    - :content: "    record(:add_foreign_key, args)"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # :nodoc:"
      :was_run: true
    - :content: "  def remove_foreign_key(*args)"
      :was_run: true
    - :content: "    record(:remove_foreign_key, args)"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # :nodoc:"
      :was_run: true
    - :content: "  def invert_add_foreign_key(args)"
      :was_run: true
    - :content: "    from_table, to_table, add_options = *args"
      :was_run: false
    - :content: "    add_options ||= {}"
      :was_run: false
    - :content: "    if add_options[:name]"
      :was_run: false
    - :content: "      options = {:name => add_options[:name]}"
      :was_run: false
    - :content: "    elsif add_options[:column]"
      :was_run: false
    - :content: "      options = {:column => add_options[:column]}"
      :was_run: false
    - :content: "    else"
      :was_run: false
    - :content: "      options = to_table"
      :was_run: false
    - :content: "    end"
      :was_run: false
    - :content: "    [:remove_foreign_key, [from_table, options]]"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: end
      :was_run: false
    :percent_run: 36
  lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#remove_column_comment: 75.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#comments: 0.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#supports_comments?: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#remove_column_comments: 80.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#set_table_comment: 75.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#set_column_comment: 75.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#set_column_comments: 80.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#remove_table_comment: 75.0
    :lines: 
    - :content: "# Provides methods to extend {ActiveRecord::ConnectionAdapters::PostgreSQLAdapter}"
      :was_run: true
    - :content: "# to support comments feature."
      :was_run: true
    - :content: module PgPower::ConnectionAdapters::PostgreSQLAdapter::CommentMethods
      :was_run: true
    - :content: "  def supports_comments?"
      :was_run: true
    - :content: "    true"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # Executes SQL to set comment on table"
      :was_run: true
    - :content: "  # @param [String, Symbol] table_name name of table to set a comment on"
      :was_run: true
    - :content: "  # @param [String] comment"
      :was_run: true
    - :content: "  def set_table_comment(table_name, comment)"
      :was_run: true
    - :content: "    sql = \"COMMENT ON TABLE #{quote_table_name(table_name)} IS $$#{comment}$$;\""
      :was_run: false
    - :content: "    execute sql"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # Executes SQL to set comment on column."
      :was_run: true
    - :content: "  # @param [String, Symbol] table_name"
      :was_run: true
    - :content: "  # @param [String, Symbol] column_name"
      :was_run: true
    - :content: "  # @param [String] comment"
      :was_run: true
    - :content: "  def set_column_comment(table_name, column_name, comment)"
      :was_run: true
    - :content: "    sql = \"COMMENT ON COLUMN #{quote_table_name(table_name)}.#{quote_column_name(column_name)} IS $$#{comment}$$;\""
      :was_run: false
    - :content: "    execute sql"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # Sets comments on columns of passed table."
      :was_run: true
    - :content: "  # @param [String, Symbol] table_name"
      :was_run: true
    - :content: "  # @param [Hash] comments every key is a column name and value is a comment."
      :was_run: true
    - :content: "  def set_column_comments(table_name, comments)"
      :was_run: true
    - :content: "    comments.each_pair do |column_name, comment|"
      :was_run: false
    - :content: "      set_column_comment table_name, column_name, comment"
      :was_run: false
    - :content: "    end"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # Executes SQL to remove comment on passed table."
      :was_run: true
    - :content: "  # @param [String, Symbol] table_name"
      :was_run: true
    - :content: "  def remove_table_comment(table_name)"
      :was_run: true
    - :content: "    sql = \"COMMENT ON TABLE #{quote_table_name(table_name)} IS NULL;\""
      :was_run: false
    - :content: "    execute sql"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # Executes SQL to remove comment on column."
      :was_run: true
    - :content: "  # @param [String, Symbol] table_name"
      :was_run: true
    - :content: "  # @param [String, Symbol] column_name"
      :was_run: true
    - :content: "  def remove_column_comment(table_name, column_name)"
      :was_run: true
    - :content: "    sql = \"COMMENT ON COLUMN #{quote_table_name(table_name)}.#{quote_column_name(column_name)} IS NULL;\""
      :was_run: false
    - :content: "    execute sql"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # Remove comments on passed table columns."
      :was_run: true
    - :content: "  def remove_column_comments(table_name, *column_names)"
      :was_run: true
    - :content: "    column_names.each do |column_name|"
      :was_run: false
    - :content: "      remove_column_comment table_name, column_name"
      :was_run: false
    - :content: "    end"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # Fetches all comments related to passed table."
      :was_run: true
    - :content: "  # I returns table comment and column comments as well."
      :was_run: true
    - :content: "  # ===Example"
      :was_run: true
    - :content: "  #   comments(\"users\") # => [[ \"\"    , \"Comment on table\"       ],"
      :was_run: true
    - :content: "  #                           [\"id\"   , \"Comment on id column\"   ],"
      :was_run: true
    - :content: "  #                           [\"email\", \"Comment on email column\"]]"
      :was_run: true
    - :content: "  def comments(table_name)"
      :was_run: true
    - :content: "    relation_name, schema_name = table_name.split(\".\", 2).reverse"
      :was_run: true
    - :content: "    schema_name ||= \"public\" "
      :was_run: true
    - :content: "    com = select_all <<-SQL"
      :was_run: true
    - :content: "      SELECT a.attname AS column_name, d.description AS comment"
      :was_run: true
    - :content: "      FROM pg_description d"
      :was_run: true
    - :content: "        JOIN pg_class c on c.oid = d.objoid"
      :was_run: true
    - :content: "        LEFT OUTER JOIN pg_attribute a ON c.oid = a.attrelid AND a.attnum = d.objsubid"
      :was_run: true
    - :content: "        JOIN pg_namespace ON c.relnamespace = pg_namespace.oid"
      :was_run: true
    - :content: "      WHERE c.relkind = 'r' AND c.relname = '#{relation_name}' AND"
      :was_run: true
    - :content: "        pg_namespace.nspname = '#{schema_name}'"
      :was_run: true
    - :content: "    SQL"
      :was_run: true
    - :content: "    com.map do |row|"
      :was_run: true
    - :content: "      [ row['column_name'], row['comment'] ]"
      :was_run: true
    - :content: "    end"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: end
      :was_run: true
    :percent_run: 69
  lib/pg_power/schema_dumper/foreigner_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :ForeignerMethods)#foreign_keys: 15.3846153846154
      s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :ForeignerMethods)#tables_with_foreign_keys: 31.25
    :lines: 
    - :content: "# Provides methods to extend {ActiveRecord::SchemaDumper} to dump"
      :was_run: true
    - :content: "# foreign keys."
      :was_run: true
    - :content: module PgPower::SchemaDumper::ForeignerMethods
      :was_run: true
    - :content: "  # Hooks {ActiveRecord::SchemaDumper#table} method to dump foreign keys."
      :was_run: true
    - :content: "  def tables_with_foreign_keys(stream)"
      :was_run: true
    - :content: "    tables_without_foreign_keys(stream)"
      :was_run: true
    - :content: "    table_names = @connection.tables.sort"
      :was_run: true
    - :content: "    table_names += get_non_public_schema_table_names.sort"
      :was_run: true
    - :content: "    table_names.sort.each do |table|"
      :was_run: true
    - :content: "      next if ['schema_migrations', ignore_tables].flatten.any? do |ignored|"
      :was_run: true
    - :content: "        case ignored"
      :was_run: true
    - :content: "        when String; table == ignored"
      :was_run: true
    - :content: "        when Regexp; table =~ ignored"
      :was_run: false
    - :content: "        else"
      :was_run: false
    - :content: "          raise StandardError, 'ActiveRecord::SchemaDumper.ignore_tables accepts an array of String and / or Regexp values.'"
      :was_run: false
    - :content: "        end"
      :was_run: false
    - :content: "      end"
      :was_run: false
    - :content: "      foreign_keys(table, stream)"
      :was_run: true
    - :content: "    end"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: "  # Finds all foreign keys on passed table and writes appropriated"
      :was_run: true
    - :content: "  # statements to stream."
      :was_run: true
    - :content: "  def foreign_keys(table_name, stream)"
      :was_run: true
    - :content: "    if (foreign_keys = @connection.foreign_keys(table_name)).any?"
      :was_run: true
    - :content: "      add_foreign_key_statements = foreign_keys.map do |foreign_key|"
      :was_run: true
    - :content: "        statement_parts = [ ('add_foreign_key ' + foreign_key.from_table.inspect) ]"
      :was_run: true
    - :content: "        statement_parts << foreign_key.to_table.inspect"
      :was_run: true
    - :content: "        statement_parts << (':name => ' + foreign_key.options[:name].inspect)"
      :was_run: true
    - :content: "        if foreign_key.options[:column] != \"#{foreign_key.to_table.singularize}_id\""
      :was_run: true
    - :content: "          statement_parts << (':column => ' + foreign_key.options[:column].inspect)"
      :was_run: true
    - :content: "        end"
      :was_run: true
    - :content: "        if foreign_key.options[:primary_key] != 'id'"
      :was_run: true
    - :content: "          statement_parts << (':primary_key => ' + foreign_key.options[:primary_key].inspect)"
      :was_run: false
    - :content: "        end"
      :was_run: false
    - :content: "        if foreign_key.options[:dependent].present?"
      :was_run: true
    - :content: "          statement_parts << (':dependent => ' + foreign_key.options[:dependent].inspect)"
      :was_run: false
    - :content: "        end"
      :was_run: false
    - :content: "        # Always exclude the index"
      :was_run: true
    - :content: "        #  If an index was created in a migration, it will get dumped to the schema"
      :was_run: true
    - :content: "        #  separately from the foreign key.  This will raise an exception if"
      :was_run: true
    - :content: "        #  add_foreign_key is run without :exclude_index => true."
      :was_run: true
    - :content: "        statement_parts << (':exclude_index => true')"
      :was_run: true
    - :content: "        '  ' + statement_parts.join(', ')"
      :was_run: true
    - :content: "      end"
      :was_run: true
    - :content: "      stream.puts add_foreign_key_statements.sort.join(\"\\n\")"
      :was_run: true
    - :content: "      stream.puts"
      :was_run: true
    - :content: "    end"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: "  private :foreign_keys"
      :was_run: true
    - :content: end
      :was_run: true
    :percent_run: 82
  lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb: 
    :methods: 
      ActiveRecord#index_exists?: 0.0
      ActiveRecord#add_index: 0.0
      ActiveRecord#add_index_options: 33.3333333333333
    :lines: 
    - :content: module ActiveRecord
      :was_run: true
    - :content: "  module ConnectionAdapters # :nodoc:"
      :was_run: true
    - :content: "    module SchemaStatements # :nodoc:"
      :was_run: true
    - :content: "      # Adds a new index to the table.  +column_name+ can be a single Symbol, or"
      :was_run: true
    - :content: "      # an Array of Symbols."
      :was_run: true
    - :content: "      #"
      :was_run: true
    - :content: "      # ====== Creating a partial index"
      :was_run: true
    - :content: "      #  add_index(:accounts, [:branch_id, :party_id], :unique => true, :where => \"active\")"
      :was_run: true
    - :content: "      # generates"
      :was_run: true
    - :content: "      #  CREATE UNIQUE INDEX index_accounts_on_branch_id_and_party_id ON accounts(branch_id, party_id) WHERE active"
      :was_run: true
    - :content: "      #"
      :was_run: true
    - :content: "      def add_index(table_name, column_name, options = {})"
      :was_run: true
    - :content: "        index_name, index_type, index_columns, index_options = add_index_options(table_name, column_name, options)"
      :was_run: true
    - :content: "        execute \"CREATE #{index_type} INDEX #{quote_column_name(index_name)} ON #{quote_table_name(table_name)} (#{index_columns})#{index_options}\""
      :was_run: true
    - :content: "      end"
      :was_run: true
    - :content: "      # Checks to see if an index exists on a table for a given index definition."
      :was_run: true
    - :content: "      #"
      :was_run: true
    - :content: "      # === Examples"
      :was_run: true
    - :content: "      #  # Check that a partial index exists"
      :was_run: true
    - :content: "      #  index_exists?(:suppliers, :company_id, :where => 'active')"
      :was_run: true
    - :content: "      #"
      :was_run: true
    - :content: "      #  # GIVEN: \"index_suppliers_on_company_id\" UNIQUE, btree (company_id) WHERE active"
      :was_run: true
    - :content: "      #  index_exists?(:suppliers, :company_id, :unique => true, :where => 'active') => true"
      :was_run: true
    - :content: "      #  index_exists?(:suppliers, :company_id, :unique => true) => false"
      :was_run: true
    - :content: "      #"
      :was_run: true
    - :content: "      def index_exists?(table_name, column_name, options = {})"
      :was_run: true
    - :content: "        column_names = Array.wrap(column_name)"
      :was_run: true
    - :content: "        index_name = options.key?(:name) ? options[:name].to_s : index_name(table_name, :column => column_names)"
      :was_run: true
    - :content: "        # Always compare the index name"
      :was_run: true
    - :content: "        default_comparator = lambda { |index| index.name == index_name }"
      :was_run: true
    - :content: "        comparators = [default_comparator]"
      :was_run: true
    - :content: "        # Add a comparator for each index option that is part of the query"
      :was_run: true
    - :content: "        index_options = [:unique, :where]"
      :was_run: true
    - :content: "        index_options.each do |index_option|"
      :was_run: true
    - :content: "          comparators << if options.key?(index_option)"
      :was_run: true
    - :content: "            lambda do |index|"
      :was_run: true
    - :content: "              pg_where_clause = index.send(index_option)"
      :was_run: true
    - :content: "              # pg does nothing to boolean clauses, e.g. 'where active' => 'where active'"
      :was_run: true
    - :content: "              if pg_where_clause.is_a?(TrueClass) or pg_where_clause.is_a?(FalseClass)"
      :was_run: true
    - :content: "                pg_where_clause == options[index_option]"
      :was_run: true
    - :content: "              else"
      :was_run: true
    - :content: "                # pg adds parentheses around non-boolean clauses, e.g. 'where color IS NULL' => 'where (color is NULL)'"
      :was_run: true
    - :content: "                pg_where_clause.gsub!(/[()]/,'')"
      :was_run: true
    - :content: "                # pg casts string comparison ::text. e.g. \"where color = 'black'\" => \"where ((color)::text = 'black'::text)\""
      :was_run: true
    - :content: "                pg_where_clause.gsub!(/::text/,'')"
      :was_run: true
    - :content: "                # prevent case from impacting the comparison"
      :was_run: true
    - :content: "                pg_where_clause.downcase == options[index_option].downcase"
      :was_run: true
    - :content: "              end"
      :was_run: true
    - :content: "            end"
      :was_run: true
    - :content: "          else"
      :was_run: true
    - :content: "            # If the given index_option is not an argument to the index_exists? query,"
      :was_run: true
    - :content: "            # select only those pg indexes that do not have the component"
      :was_run: true
    - :content: "            lambda { |index| index.send(index_option).blank? }"
      :was_run: true
    - :content: "          end"
      :was_run: true
    - :content: "        end"
      :was_run: true
    - :content: "        # Search all indexes for any that match all comparators"
      :was_run: true
    - :content: "        indexes(table_name).any? do |index|"
      :was_run: true
    - :content: "          comparators.inject(true) { |ret, comparator| ret && comparator.call(index) }"
      :was_run: true
    - :content: "        end"
      :was_run: true
    - :content: "      end"
      :was_run: true
    - :content: "      # Returns options used to build out index SQL"
      :was_run: true
    - :content: "      #"
      :was_run: true
    - :content: "      # Added support for partial indexes implemented using the :where option"
      :was_run: true
    - :content: "      #"
      :was_run: true
    - :content: "      def add_index_options(table_name, column_name, options = {})"
      :was_run: true
    - :content: "        column_names = Array(column_name)"
      :was_run: true
    - :content: "        index_name   = index_name(table_name, :column => column_names)"
      :was_run: true
    - :content: "        if Hash === options # legacy support, since this param was a string"
      :was_run: true
    - :content: "          index_type = options[:unique] ? \"UNIQUE\" : \"\""
      :was_run: true
    - :content: "          index_name = options[:name].to_s if options.key?(:name)"
      :was_run: true
    - :content: "          if supports_partial_index?"
      :was_run: true
    - :content: "            index_options = options[:where] ? \" WHERE #{options[:where]}\" : \"\""
      :was_run: true
    - :content: "          end"
      :was_run: true
    - :content: "        else"
      :was_run: false
    - :content: "          index_type = options"
      :was_run: false
    - :content: "        end"
      :was_run: false
    - :content: "        if index_name.length > index_name_length"
      :was_run: true
    - :content: "          raise ArgumentError, \"Index name '#{index_name}' on table '#{table_name}' is too long; the limit is #{index_name_length} characters\""
      :was_run: false
    - :content: "        end"
      :was_run: false
    - :content: "        if index_name_exists?(table_name, index_name, false)"
      :was_run: true
    - :content: "          raise ArgumentError, \"Index name '#{index_name}' on table '#{table_name}' already exists\""
      :was_run: false
    - :content: "        end"
      :was_run: false
    - :content: "        index_columns = quoted_columns_for_index(column_names, options).join(\", \")"
      :was_run: true
    - :content: "        [index_name, index_type, index_columns, index_options]"
      :was_run: true
    - :content: "      end"
      :was_run: true
    - :content: "      protected :add_index_options"
      :was_run: true
    - :content: "    end"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: end
      :was_run: true
    :percent_run: 92
  lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb: 
    :methods: {}

    :lines: 
    - :content: "module PgPower # :nodoc:"
      :was_run: true
    - :content: "  # Raised when an unexpected index exists"
      :was_run: true
    - :content: "  class IndexExistsError < StandardError"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: "  # Provides methods to extend {ActiveRecord::ConnectionAdapters::PostgreSQLAdapter}"
      :was_run: true
    - :content: "  # to support foreign keys feature."
      :was_run: true
    - :content: "  module ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods"
      :was_run: true
    - :content: "    def supports_foreign_keys?"
      :was_run: true
    - :content: "      true"
      :was_run: false
    - :content: "    end"
      :was_run: false
    - :content: "    # Fetches information about foreign keys related to passed table."
      :was_run: true
    - :content: "    # @param [String, Symbol] table_name name of table (e.g. \"users\", \"music.bands\")"
      :was_run: true
    - :content: "    # @return [Foreigner::ConnectionAdapters::ForeignKeyDefinition]"
      :was_run: true
    - :content: "    def foreign_keys(table_name)"
      :was_run: true
    - :content: "      relation, schema = table_name.to_s.split('.', 2).reverse"
      :was_run: true
    - :content: "      quoted_schema = schema ? \"'#{schema}'\" : \"ANY (current_schemas(false))\""
      :was_run: true
    - :content: "      fk_info = select_all <<-SQL"
      :was_run: true
    - :content: "        SELECT nsp.nspname || '.' || t2.relname AS to_table,"
      :was_run: true
    - :content: "               a1.attname    AS column     ,"
      :was_run: true
    - :content: "               a2.attname    AS primary_key,"
      :was_run: true
    - :content: "               c.conname     AS name       ,"
      :was_run: true
    - :content: "               c.confdeltype AS dependency"
      :was_run: true
    - :content: "        FROM pg_constraint c"
      :was_run: true
    - :content: "        JOIN pg_class t1 ON c.conrelid = t1.oid"
      :was_run: true
    - :content: "        JOIN pg_class t2 ON c.confrelid = t2.oid"
      :was_run: true
    - :content: "        JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid"
      :was_run: true
    - :content: "        JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid"
      :was_run: true
    - :content: "        JOIN pg_namespace t3 ON c.connamespace = t3.oid"
      :was_run: true
    - :content: "        JOIN pg_namespace nsp ON nsp.oid = t2.relnamespace"
      :was_run: true
    - :content: "        WHERE c.contype = 'f'"
      :was_run: true
    - :content: "        AND t1.relname = '#{relation}'"
      :was_run: true
    - :content: "        AND t3.nspname = #{quoted_schema}"
      :was_run: true
    - :content: "        ORDER BY c.conname"
      :was_run: true
    - :content: "      SQL"
      :was_run: true
    - :content: "      fk_info.map do |row|"
      :was_run: true
    - :content: "        options = {:column => row['column'], :name => row['name'], :primary_key => row['primary_key']}"
      :was_run: true
    - :content: "        options[:dependent] = case row['dependency']"
      :was_run: true
    - :content: "          when 'c' then :delete"
      :was_run: true
    - :content: "          when 'n' then :nullify"
      :was_run: true
    - :content: "          when 'r' then :restrict"
      :was_run: true
    - :content: "        end"
      :was_run: true
    - :content: "        PgPower::ConnectionAdapters::ForeignKeyDefinition.new(table_name, row['to_table'], options)"
      :was_run: true
    - :content: "      end"
      :was_run: true
    - :content: "    end"
      :was_run: true
    - :content: "    # Disables triggers and drops tables."
      :was_run: true
    - :content: "    def drop_table(*args)"
      :was_run: true
    - :content: "      disable_referential_integrity { super }"
      :was_run: false
    - :content: "    end"
      :was_run: false
    - :content: "    # Adds foreign key."
      :was_run: true
    - :content: "    #"
      :was_run: true
    - :content: "    # Ensures that an index is created for the foreign key, unless :exclude_index is true."
      :was_run: true
    - :content: "    #"
      :was_run: true
    - :content: "    # Raises a [PgPower::IndexExistsError] when :exclude_index is true, but the index already exists."
      :was_run: true
    - :content: "    #"
      :was_run: true
    - :content: "    # == Options:"
      :was_run: true
    - :content: "    # * :column"
      :was_run: true
    - :content: "    # * :primary_key"
      :was_run: true
    - :content: "    # * :dependent"
      :was_run: true
    - :content: "    # * :exclude_index [Boolean]"
      :was_run: true
    - :content: "    #"
      :was_run: true
    - :content: "    # @param [String, Symbol] from_table"
      :was_run: true
    - :content: "    # @param [String, Symbol] to_table"
      :was_run: true
    - :content: "    # @param [Hash] options"
      :was_run: true
    - :content: "    #"
      :was_run: true
    - :content: "    def add_foreign_key(from_table, to_table, options = {})"
      :was_run: true
    - :content: "      options[:column] ||= id_column_name_from_table_name(to_table)"
      :was_run: true
    - :content: "      options[:exclude_index] ||= false"
      :was_run: true
    - :content: "      if index_exists?(from_table, options[:column]) and !options[:exclude_index]"
      :was_run: true
    - :content: "        raise PgPower::IndexExistsError, \"The index, #{index_name(from_table, options[:column])}, already exists.  Use :exclude_index => true when adding the foreign key.\""
      :was_run: true
    - :content: "      end"
      :was_run: true
    - :content: "      sql = \"ALTER TABLE #{quote_table_name(from_table)} #{add_foreign_key_sql(from_table, to_table, options)}\""
      :was_run: true
    - :content: "      execute(sql)"
      :was_run: true
    - :content: "      add_index(from_table, options[:column]) unless options[:exclude_index]"
      :was_run: true
    - :content: "    end"
      :was_run: true
    - :content: "    # Returns chunk of SQL to add foreign key based on table names and options."
      :was_run: true
    - :content: "    def add_foreign_key_sql(from_table, to_table, options = {})"
      :was_run: true
    - :content: "      foreign_key_name = foreign_key_name(from_table, options[:column], options)"
      :was_run: true
    - :content: "      primary_key = options[:primary_key] || \"id\""
      :was_run: true
    - :content: "      dependency = dependency_sql(options[:dependent])"
      :was_run: true
    - :content: "      sql ="
      :was_run: true
    - :content: "        \"ADD CONSTRAINT #{quote_column_name(foreign_key_name)} \" +"
      :was_run: true
    - :content: "        \"FOREIGN KEY (#{quote_column_name(options[:column])}) \" +"
      :was_run: true
    - :content: "        \"REFERENCES #{quote_table_name(ActiveRecord::Migrator.proper_table_name(to_table))}(#{primary_key})\""
      :was_run: true
    - :content: "      sql << \" #{dependency}\" if dependency.present?"
      :was_run: true
    - :content: "      sql << \" #{options[:options]}\" if options[:options]"
      :was_run: true
    - :content: "      sql"
      :was_run: true
    - :content: "    end"
      :was_run: true
    - :content: "    #"
      :was_run: true
    - :content: "    # TODO Determine if we can refactor the method signature"
      :was_run: true
    - :content: "    #   remove_foreign_key(from_table, to_table_or_options_hash, options={}) => remove_foreign_key(from_table, to_table, options={})"
      :was_run: true
    - :content: "    #"
      :was_run: true
    - :content: "    # Removes foreign key."
      :was_run: true
    - :content: "    # @param [String, Symbol] from_table"
      :was_run: true
    - :content: "    # @param [String, Hash] to_table_or_options_hash"
      :was_run: true
    - :content: "    #"
      :was_run: true
    - :content: "    def remove_foreign_key(from_table, to_table_or_options_hash, options={})"
      :was_run: true
    - :content: "      if Hash === to_table_or_options_hash"
      :was_run: true
    - :content: "        options = to_table_or_options_hash"
      :was_run: false
    - :content: "        column = options[:column]"
      :was_run: false
    - :content: "        foreign_key_name = foreign_key_name(from_table, column, options)"
      :was_run: false
    - :content: "        column ||= id_column_name_from_foreign_key_metadata(from_table, foreign_key_name)"
      :was_run: false
    - :content: "      else"
      :was_run: true
    - :content: "        column = id_column_name_from_table_name(to_table_or_options_hash)"
      :was_run: true
    - :content: "        foreign_key_name = foreign_key_name(from_table, column)"
      :was_run: true
    - :content: "      end"
      :was_run: true
    - :content: "      execute \"ALTER TABLE #{quote_table_name(from_table)} #{remove_foreign_key_sql(foreign_key_name)}\""
      :was_run: true
    - :content: "      options[:exclude_index] ||= false"
      :was_run: true
    - :content: "      remove_index(from_table, column) unless options[:exclude_index] || !index_exists?(from_table, column)"
      :was_run: true
    - :content: "    end"
      :was_run: true
    - :content: "    # Returns chunk of SQL to  remove foreign key based on table name and options."
      :was_run: true
    - :content: "    def remove_foreign_key_sql(foreign_key_name)"
      :was_run: true
    - :content: "      \"DROP CONSTRAINT #{quote_column_name(foreign_key_name)}\""
      :was_run: true
    - :content: "    end"
      :was_run: true
    - :content: "    # Builds the foreign key column id from the referenced table"
      :was_run: true
    - :content: "    def id_column_name_from_table_name(table)"
      :was_run: true
    - :content: "      \"#{table.to_s.split('.').last.singularize}_id\""
      :was_run: true
    - :content: "    end"
      :was_run: true
    - :content: "    private :id_column_name_from_table_name"
      :was_run: true
    - :content: "    # Extracts the foreign key column id from the foreign key metadata"
      :was_run: true
    - :content: "    # @param [String, Symbol] from_table"
      :was_run: true
    - :content: "    # @param [String]         foreign_key_name"
      :was_run: true
    - :content: "    def id_column_name_from_foreign_key_metadata(from_table, foreign_key_name)"
      :was_run: true
    - :content: "      keys = foreign_keys(from_table)"
      :was_run: false
    - :content: "      this_key = keys.find {|key| key.options[:name] == foreign_key_name}"
      :was_run: false
    - :content: "      this_key.options[:column]"
      :was_run: false
    - :content: "    end"
      :was_run: false
    - :content: "    private :id_column_name_from_foreign_key_metadata"
      :was_run: true
    - :content: "    # Builds default name for constraint"
      :was_run: true
    - :content: "    def foreign_key_name(table, column, options = {})"
      :was_run: true
    - :content: "      if options[:name]"
      :was_run: true
    - :content: "        options[:name]"
      :was_run: false
    - :content: "      else"
      :was_run: true
    - :content: "        prefix = table.gsub(\".\", \"_\")"
      :was_run: true
    - :content: "        \"#{prefix}_#{column}_fk\""
      :was_run: true
    - :content: "      end"
      :was_run: true
    - :content: "    end"
      :was_run: true
    - :content: "    private :foreign_key_name"
      :was_run: true
    - :content: "    def dependency_sql(dependency)"
      :was_run: true
    - :content: "      case dependency"
      :was_run: true
    - :content: "        when :nullify then \"ON DELETE SET NULL\""
      :was_run: true
    - :content: "        when :delete then \"ON DELETE CASCADE\""
      :was_run: true
    - :content: "        when :restrict then \"ON DELETE RESTRICT\""
      :was_run: true
    - :content: "        else \"\""
      :was_run: true
    - :content: "      end"
      :was_run: true
    - :content: "    end"
      :was_run: true
    - :content: "    private :dependency_sql"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: end
      :was_run: true
    :percent_run: 91
  lib/pg_power/connection_adapters/table/comment_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#set_column_comments: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#remove_column_comments: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#set_column_comment: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#remove_table_comment: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#set_table_comment: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#remove_column_comment: 66.6666666666667
    :lines: 
    - :content: "# Provides methods to extend {ActiveRecord::ConnectionAdapters::Table}"
      :was_run: true
    - :content: "# to support comments feature."
      :was_run: true
    - :content: module PgPower::ConnectionAdapters::Table::CommentMethods
      :was_run: true
    - :content: "  # Sets the comment on the table"
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  # ===== Example"
      :was_run: true
    - :content: "  # ====== Set comment on table"
      :was_run: true
    - :content: "  #   t.set_table_comment 'This table stores phone numbers that conform to the North American Numbering Plan.'"
      :was_run: true
    - :content: "  def set_table_comment(comment)"
      :was_run: true
    - :content: "    @base.set_table_comment(@table_name, comment)"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # Removes any comment from the table"
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  # ===== Example"
      :was_run: true
    - :content: "  # ====== Remove table comment"
      :was_run: true
    - :content: "  #   t.remove_table_comment"
      :was_run: true
    - :content: "  def remove_table_comment"
      :was_run: true
    - :content: "    @base.remove_table_comment(@table_name)"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # Sets the comment for a given column"
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  # ===== Example"
      :was_run: true
    - :content: "  # ====== Set comment on the npa column"
      :was_run: true
    - :content: "  #   t.set_column_comment :npa, 'Numbering Plan Area Code - Allowed ranges: [2-9] for first digit, [0-9] for second and third digit.'"
      :was_run: true
    - :content: "  def set_column_comment(column_name, comment)"
      :was_run: true
    - :content: "    @base.set_column_comment(@table_name, column_name, comment)"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # Sets comments on multiple columns.  'comments' is a hash of column_name => comment pairs."
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  # ===== Example"
      :was_run: true
    - :content: "  # ====== Setting comments on the columns of the phone_numbers table"
      :was_run: true
    - :content: "  #  t.set_column_comments :npa => 'Numbering Plan Area Code - Allowed ranges: [2-9] for first digit, [0-9] for second and third digit.',"
      :was_run: true
    - :content: "  #                        :nxx => 'Central Office Number'"
      :was_run: true
    - :content: "  def set_column_comments(comments)"
      :was_run: true
    - :content: "    @base.set_column_comments(@table_name, comments)"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # Removes any comment for a given column"
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  # ===== Example"
      :was_run: true
    - :content: "  # ====== Remove comment from the npa column"
      :was_run: true
    - :content: "  #   t.remove_column_comment :npa"
      :was_run: true
    - :content: "  def remove_column_comment(column_name)"
      :was_run: true
    - :content: "    @base.remove_column_comment(@table_name, column_name)"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: "  # Removes any comments from the given columns"
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  # ===== Example"
      :was_run: true
    - :content: "  # ====== Remove comment from the npa and nxx columns"
      :was_run: true
    - :content: "  #   t.remove_column_comment :npa, :nxx"
      :was_run: true
    - :content: "  def remove_column_comments(*column_names)"
      :was_run: true
    - :content: "    @base.remove_column_comments(@table_name, *column_names)"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: end
      :was_run: false
    :percent_run: 75
  lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :IndexMethods)#supports_partial_index?: 0.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :IndexMethods)#index_name_for_remove: 88.8888888888889
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :IndexMethods)#index_name: 0.0
    :lines: 
    - :content: "# Provides methods to extend {ActiveRecord::ConnectionAdapters::SchemaStatements}"
      :was_run: true
    - :content: "# to support index features."
      :was_run: true
    - :content: module PgPower::ConnectionAdapters::PostgreSQLAdapter::IndexMethods
      :was_run: true
    - :content: "  def supports_partial_index?"
      :was_run: true
    - :content: "    true"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: "  # Overrides ActiveRecord::ConnectionAdapters::SchemaStatements.index_name"
      :was_run: true
    - :content: "  # to support schema notation.  Converts dots in index name to underscores."
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  # === Example"
      :was_run: true
    - :content: "  #  add_index 'demography.citizens', :country_id"
      :was_run: true
    - :content: "  #  # produces"
      :was_run: true
    - :content: "  #  CREATE INDEX \"index_demography_citizens_on_country_id\" ON \"demography\".\"citizens\" (\"country_id\")"
      :was_run: true
    - :content: "  #  # instead of"
      :was_run: true
    - :content: "  #  CREATE INDEX \"index_demography.citizens_on_country_id\" ON \"demography\".\"citizens\" (\"country_id\")"
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  def index_name(table_name, options) #:nodoc:"
      :was_run: true
    - :content: "    super.gsub('.','_')"
      :was_run: true
    - :content: "  end"
      :was_run: true
    - :content: "  # Overrides ActiveRecord::ConnectionAdapters::SchemaStatements.index_name_for_remove"
      :was_run: true
    - :content: "  # to support schema notation. Prepends the schema name to the index name."
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  # === Example"
      :was_run: true
    - :content: "  #  drop_index 'demography.citizens', :country_id"
      :was_run: true
    - :content: "  #  # produces"
      :was_run: true
    - :content: "  #  DROP INDEX \"demography\".\"index_demography_citizens_on_country_id\""
      :was_run: true
    - :content: "  #  # instead of"
      :was_run: true
    - :content: "  #  DROP INDEX \"index_demography_citizens_on_country_id\""
      :was_run: true
    - :content: "  #"
      :was_run: true
    - :content: "  def index_name_for_remove(table_name, options = {})"
      :was_run: true
    - :content: "    index_name = super"
      :was_run: false
    - :content: "    if table_name.include?('.') # schema notation"
      :was_run: false
    - :content: "      schema = table_name.split('.').first"
      :was_run: false
    - :content: "      \"#{schema}.#{index_name}\""
      :was_run: false
    - :content: "    else"
      :was_run: false
    - :content: "      index_name"
      :was_run: false
    - :content: "    end"
      :was_run: false
    - :content: "  end"
      :was_run: false
    - :content: end
      :was_run: false
    :percent_run: 77
:roodi: 
  :problems: 
  - :problem: Found = in conditional.  It should probably be an ==
    :line: "43"
    :file: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb
  - :problem: Block cyclomatic complexity is 5.  It should be 4 or less.
    :line: "17"
    :file: ./lib/core_ext/active_record/schema_dumper.rb
  - :problem: Block cyclomatic complexity is 5.  It should be 4 or less.
    :line: "41"
    :file: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
  - :problem: Block cyclomatic complexity is 5.  It should be 4 or less.
    :line: "11"
    :file: ./lib/pg_power/schema_dumper/foreigner_methods.rb
  - :problem: Method "index_exists?" has 36 lines.  It should have 20 or less.
    :line: "28"
    :file: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
  - :problem: Method "add_index_options" has 22 lines.  It should have 20 or less.
    :line: "71"
    :file: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
  - :problem: Method "indexes" has 41 lines.  It should have 20 or less.
    :line: "27"
    :file: ./lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb
  - :problem: Method "indexes" has 22 lines.  It should have 20 or less.
    :line: "15"
    :file: ./lib/core_ext/active_record/schema_dumper.rb
  - :problem: Method "foreign_keys" has 35 lines.  It should have 20 or less.
    :line: "16"
    :file: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
  - :problem: Method "foreign_keys" has 28 lines.  It should have 20 or less.
    :line: "27"
    :file: ./lib/pg_power/schema_dumper/foreigner_methods.rb
  - :problem: Case statement is missing an else clause.
    :line: "44"
    :file: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
  :total: 
  - Found 11 errors.
:saikuro: 
  :files: 
  - :filename: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: PgPower
      :lines: 7
    - :complexity: 0
      :methods: []

      :class_name: PgPower::IndexExistsError
      :lines: 1
    - :complexity: 28
      :methods: 
      - :complexity: 6
        :lines: 17
        :name: PgPower::ConnectionAdapters#foreign_keys
      - :complexity: 4
        :lines: 7
        :name: PgPower::ConnectionAdapters#dependency_sql
      - :complexity: 3
        :lines: 15
        :name: PgPower::ConnectionAdapters#remove_foreign_key
      - :complexity: 3
        :lines: 13
        :name: PgPower::ConnectionAdapters#add_foreign_key_sql
      - :complexity: 3
        :lines: 12
        :name: PgPower::ConnectionAdapters#add_foreign_key
      - :complexity: 2
        :lines: 7
        :name: PgPower::ConnectionAdapters#foreign_key_name
      - :complexity: 2
        :lines: 2
        :name: PgPower::ConnectionAdapters#drop_table
      - :complexity: 2
        :lines: 4
        :name: PgPower::ConnectionAdapters#id_column_name_from_foreign_key_metadata
      - :complexity: 1
        :lines: 2
        :name: PgPower::ConnectionAdapters#id_column_name_from_table_name
      - :complexity: 1
        :lines: 2
        :name: PgPower::ConnectionAdapters#remove_foreign_key_sql
      - :complexity: 1
        :lines: 2
        :name: PgPower::ConnectionAdapters#supports_foreign_keys?
      :class_name: PgPower::ConnectionAdapters
      :lines: 144
  - :filename: spec/active_record/schema_dumper_spec.rb
    :classes: 
    - :complexity: 20
      :methods: []

      :class_name: ""
      :lines: 78
  - :filename: lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ActiveRecord
      :lines: 2
    - :complexity: 0
      :methods: []

      :class_name: ActiveRecord::ConnectionAdapters
      :lines: 2
    - :complexity: 19
      :methods: 
      - :complexity: 10
        :lines: 37
        :name: ActiveRecord::ConnectionAdapters::SchemaStatements#index_exists?
      - :complexity: 8
        :lines: 23
        :name: ActiveRecord::ConnectionAdapters::SchemaStatements#add_index_options
      - :complexity: 1
        :lines: 3
        :name: ActiveRecord::ConnectionAdapters::SchemaStatements#add_index
      :class_name: ActiveRecord::ConnectionAdapters::SchemaStatements
      :lines: 94
  - :filename: spec/comment_methods_spec.rb
    :classes: 
    - :complexity: 17
      :methods: []

      :class_name: ""
      :lines: 64
  - :filename: spec/indexes_spec.rb
    :classes: 
    - :complexity: 16
      :methods: []

      :class_name: ""
      :lines: 75
  - :filename: spec/foreign_keys_spec.rb
    :classes: 
    - :complexity: 13
      :methods: []

      :class_name: ""
      :lines: 64
  - :filename: lib/pg_power/schema_dumper/foreigner_methods.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 12
      :methods: 
      - :complexity: 6
        :lines: 29
        :name: PgPower#foreign_keys
      - :complexity: 6
        :lines: 17
        :name: PgPower#tables_with_foreign_keys
      :class_name: PgPower
      :lines: 55
  - :filename: lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 11
      :methods: 
      - :complexity: 2
        :lines: 8
        :name: PgPower#comments
      - :complexity: 2
        :lines: 4
        :name: PgPower#remove_column_comments
      - :complexity: 2
        :lines: 4
        :name: PgPower#set_column_comments
      - :complexity: 1
        :lines: 3
        :name: PgPower#remove_table_comment
      - :complexity: 1
        :lines: 3
        :name: PgPower#remove_column_comment
      - :complexity: 1
        :lines: 3
        :name: PgPower#set_column_comment
      - :complexity: 1
        :lines: 3
        :name: PgPower#set_table_comment
      - :complexity: 1
        :lines: 2
        :name: PgPower#supports_comments?
      :class_name: PgPower
      :lines: 68
  - :filename: lib/pg_power/migration/command_recorder/comment_methods.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 10
      :methods: 
      - :complexity: 2
        :lines: 3
        :name: PgPower#invert_set_column_comments
      - :complexity: 1
        :lines: 2
        :name: PgPower#remove_column_comment
      - :complexity: 1
        :lines: 3
        :name: PgPower#invert_set_table_comment
      - :complexity: 1
        :lines: 2
        :name: PgPower#remove_column_comments
      - :complexity: 1
        :lines: 4
        :name: PgPower#invert_set_column_comment
      - :complexity: 1
        :lines: 2
        :name: PgPower#set_column_comments
      - :complexity: 1
        :lines: 2
        :name: PgPower#set_column_comment
      - :complexity: 1
        :lines: 2
        :name: PgPower#remove_table_comment
      - :complexity: 1
        :lines: 2
        :name: PgPower#set_table_comment
      :class_name: PgPower
      :lines: 49
  - :filename: lib/pg_power/engine.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: PgPower
      :lines: 3
    - :complexity: 10
      :methods: []

      :class_name: PgPower::Engine
      :lines: 42
  - :filename: spec/dummy/db/schema.rb
    :classes: 
    - :complexity: 9
      :methods: []

      :class_name: ""
      :lines: 95
  - :filename: spec/support/explorer.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 7
      :methods: 
      - :complexity: 1
        :lines: 2
        :name: PgPower#connection
      - :complexity: 1
        :lines: 4
        :name: PgPower#to_schema_and_table
      - :complexity: 1
        :lines: 3
        :name: PgPower#table_exists?
      - :complexity: 1
        :lines: 2
        :name: PgPower#index_exists?
      - :complexity: 1
        :lines: 4
        :name: PgPower#has_foreign_key?
      - :complexity: 1
        :lines: 4
        :name: PgPower#get_column_comment
      - :complexity: 1
        :lines: 4
        :name: PgPower#get_table_comment
      :class_name: PgPower
      :lines: 44
  - :filename: spec/schema_methods_spec.rb
    :classes: 
    - :complexity: 7
      :methods: []

      :class_name: ""
      :lines: 17
  - :filename: lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 7
      :methods: 
      - :complexity: 1
        :lines: 2
        :name: PgPower#remove_column_comments
      - :complexity: 1
        :lines: 2
        :name: PgPower#remove_column_comment
      - :complexity: 1
        :lines: 2
        :name: PgPower#remove_table_comment
      - :complexity: 1
        :lines: 2
        :name: PgPower#set_column_comments
      - :complexity: 1
        :lines: 2
        :name: PgPower#set_column_comment
      - :complexity: 1
        :lines: 2
        :name: PgPower#set_table_comment
      - :complexity: 1
        :lines: 2
        :name: PgPower#supports_comments?
      :class_name: PgPower
      :lines: 59
  - :filename: lib/pg_power/schema_dumper/schema_methods.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 7
      :methods: 
      - :complexity: 2
        :lines: 7
        :name: PgPower#schemas
      - :complexity: 2
        :lines: 4
        :name: PgPower#non_public_schema_tables
      - :complexity: 1
        :lines: 2
        :name: PgPower#schema
      - :complexity: 1
        :lines: 3
        :name: PgPower#get_non_public_schema_table_names
      - :complexity: 1
        :lines: 4
        :name: PgPower#tables_with_schemas
      :class_name: PgPower
      :lines: 43
  - :filename: lib/pg_power/connection_adapters/table/comment_methods.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 6
      :methods: 
      - :complexity: 1
        :lines: 2
        :name: PgPower#remove_column_comments
      - :complexity: 1
        :lines: 2
        :name: PgPower#remove_column_comment
      - :complexity: 1
        :lines: 2
        :name: PgPower#set_column_comments
      - :complexity: 1
        :lines: 2
        :name: PgPower#set_column_comment
      - :complexity: 1
        :lines: 2
        :name: PgPower#remove_table_comment
      - :complexity: 1
        :lines: 2
        :name: PgPower#set_table_comment
      :class_name: PgPower
      :lines: 55
  - :filename: lib/core_ext/active_record/schema_dumper.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ActiveRecord
      :lines: 5
    - :complexity: 6
      :methods: 
      - :complexity: 6
        :lines: 23
        :name: ActiveRecord::SchemaDumper#indexes
      :class_name: ActiveRecord::SchemaDumper
      :lines: 34
  - :filename: lib/pg_power/schema_dumper/comment_methods.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 6
      :methods: 
      - :complexity: 4
        :lines: 16
        :name: PgPower#dump_comments
      - :complexity: 2
        :lines: 9
        :name: PgPower#tables_with_comments
      :class_name: PgPower
      :lines: 34
  - :filename: lib/pg_power/migration/command_recorder/foreigner_methods.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 5
      :methods: 
      - :complexity: 3
        :lines: 13
        :name: PgPower#invert_add_foreign_key
      - :complexity: 1
        :lines: 2
        :name: PgPower#remove_foreign_key
      - :complexity: 1
        :lines: 2
        :name: PgPower#add_foreign_key
      :class_name: PgPower
      :lines: 26
  - :filename: lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ActiveRecord
      :lines: 2
    - :complexity: 0
      :methods: []

      :class_name: ActiveRecord::ConnectionAdapters
      :lines: 5
    - :complexity: 4
      :methods: 
      - :complexity: 4
        :lines: 23
        :name: ActiveRecord::ConnectionAdapters::PostgreSQLAdapter#indexes
      :class_name: ActiveRecord::ConnectionAdapters::PostgreSQLAdapter
      :lines: 46
  - :filename: lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 4
      :methods: 
      - :complexity: 2
        :lines: 9
        :name: PgPower#index_name_for_remove
      - :complexity: 1
        :lines: 2
        :name: PgPower#index_name
      - :complexity: 1
        :lines: 2
        :name: PgPower#supports_partial_index?
      :class_name: PgPower
      :lines: 39
  - :filename: lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 4
      :methods: 
      - :complexity: 2
        :lines: 4
        :name: PgPower#drop_table_with_schema_option
      - :complexity: 2
        :lines: 4
        :name: PgPower#create_table_with_schema_option
      :class_name: PgPower
      :lines: 15
  - :filename: lib/pg_power/connection_adapters/table/foreigner_methods.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 4
      :methods: 
      - :complexity: 2
        :lines: 9
        :name: PgPower#references_with_foreign_keys
      - :complexity: 1
        :lines: 2
        :name: PgPower#remove_foreign_key
      - :complexity: 1
        :lines: 2
        :name: PgPower#foreign_key
      :class_name: PgPower
      :lines: 47
  - :filename: lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 4
      :methods: 
      - :complexity: 1
        :lines: 2
        :name: PgPower#foreign_keys
      - :complexity: 1
        :lines: 1
        :name: PgPower#remove_foreign_key
      - :complexity: 1
        :lines: 1
        :name: PgPower#add_foreign_key
      - :complexity: 1
        :lines: 2
        :name: PgPower#supports_foreign_keys?
      :class_name: PgPower
      :lines: 64
  - :filename: lib/pg_power/migration/command_recorder/schema_methods.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 4
      :methods: 
      - :complexity: 1
        :lines: 2
        :name: PgPower#invert_drop_schema
      - :complexity: 1
        :lines: 2
        :name: PgPower#invert_create_schema
      - :complexity: 1
        :lines: 2
        :name: PgPower#drop_schema
      - :complexity: 1
        :lines: 2
        :name: PgPower#create_schema
      :class_name: PgPower
      :lines: 20
  - :filename: lib/pg_power/tools.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: PgPower
      :lines: 8
    - :complexity: 3
      :methods: 
      - :complexity: 1
        :lines: 3
        :name: PgPower::Tools#schemas
      - :complexity: 1
        :lines: 3
        :name: PgPower::Tools#drop_schema
      - :complexity: 1
        :lines: 3
        :name: PgPower::Tools#create_schema
      :class_name: PgPower::Tools
      :lines: 21
  - :filename: spec/dummy/db/migrate/20120201163544_create_owners_and_breeds.rb
    :classes: 
    - :complexity: 3
      :methods: 
      - :complexity: 3
        :lines: 12
        :name: CreateOwnersAndBreeds#change
      :class_name: CreateOwnersAndBreeds
      :lines: 14
  - :filename: spec/dummy/db/migrate/20120301152819_create_demography_nationalities.rb
    :classes: 
    - :complexity: 2
      :methods: 
      - :complexity: 2
        :lines: 4
        :name: CreateDemographyNationalities#change
      :class_name: CreateDemographyNationalities
      :lines: 6
  - :filename: spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb
    :classes: 
    - :complexity: 2
      :methods: 
      - :complexity: 2
        :lines: 21
        :name: CreateDemographyCitizens#change
      :class_name: CreateDemographyCitizens
      :lines: 23
  - :filename: spec/dummy/db/migrate/20120207103858_remove_comments_on_countries_table.rb
    :classes: 
    - :complexity: 2
      :methods: 
      - :complexity: 1
        :lines: 2
        :name: RemoveCommentsOnCountriesTable#down
      - :complexity: 1
        :lines: 3
        :name: RemoveCommentsOnCountriesTable#up
      :class_name: RemoveCommentsOnCountriesTable
      :lines: 9
  - :filename: spec/dummy/db/migrate/20120106163810_create_demography_countries.rb
    :classes: 
    - :complexity: 2
      :methods: 
      - :complexity: 2
        :lines: 13
        :name: CreateDemographyCountries#change
      :class_name: CreateDemographyCountries
      :lines: 15
  - :filename: spec/dummy/db/migrate/20120208114020_remove_some_comments_on_citizens.rb
    :classes: 
    - :complexity: 2
      :methods: 
      - :complexity: 1
        :lines: 4
        :name: RemoveSomeCommentsOnCitizens#down
      - :complexity: 1
        :lines: 2
        :name: RemoveSomeCommentsOnCitizens#up
      :class_name: RemoveSomeCommentsOnCitizens
      :lines: 10
  - :filename: spec/dummy/db/migrate/20120105112744_create_pets.rb
    :classes: 
    - :complexity: 2
      :methods: 
      - :complexity: 2
        :lines: 15
        :name: CreatePets#change
      :class_name: CreatePets
      :lines: 17
  - :filename: spec/dummy/db/migrate/20120106163544_create_users.rb
    :classes: 
    - :complexity: 2
      :methods: 
      - :complexity: 2
        :lines: 18
        :name: CreateUsers#change
      :class_name: CreateUsers
      :lines: 20
  - :filename: spec/dummy/db/migrate/20120209094937_create_cities_table.rb
    :classes: 
    - :complexity: 2
      :methods: 
      - :complexity: 2
        :lines: 7
        :name: CreateCitiesTable#change
      :class_name: CreateCitiesTable
      :lines: 9
  - :filename: spec/dummy/db/migrate/20120207112916_remove_comment_on_pets_table.rb
    :classes: 
    - :complexity: 2
      :methods: 
      - :complexity: 1
        :lines: 2
        :name: RemoveCommentOnPetsTable#down
      - :complexity: 1
        :lines: 2
        :name: RemoveCommentOnPetsTable#up
      :class_name: RemoveCommentOnPetsTable
      :lines: 8
  - :filename: lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 2
      :methods: 
      - :complexity: 1
        :lines: 2
        :name: PgPower#drop_schema
      - :complexity: 1
        :lines: 2
        :name: PgPower#create_schema
      :class_name: PgPower
      :lines: 12
  - :filename: spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb
    :classes: 
    - :complexity: 2
      :methods: 
      - :complexity: 1
        :lines: 4
        :name: RemoveForeignKeys#down
      - :complexity: 1
        :lines: 6
        :name: RemoveForeignKeys#up
      :class_name: RemoveForeignKeys
      :lines: 14
  - :filename: spec/dummy/db/migrate/20120301153650_demography_population_statisctics.rb
    :classes: 
    - :complexity: 2
      :methods: 
      - :complexity: 2
        :lines: 5
        :name: DemographyPopulationStatisctics#change
      :class_name: DemographyPopulationStatisctics
      :lines: 7
  - :filename: spec/dummy/app/models/demography.rb
    :classes: 
    - :complexity: 1
      :methods: 
      - :complexity: 1
        :lines: 2
        :name: Demography#self.table_name_prefix
      :class_name: Demography
      :lines: 4
  - :filename: spec/spec_helper.rb
    :classes: 
    - :complexity: 1
      :methods: []

      :class_name: ""
      :lines: 5
  - :filename: lib/pg_power/connection_adapters/abstract_adapter.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 1
      :methods: []

      :class_name: PgPower
      :lines: 18
  - :filename: spec/dummy/db/migrate/20120224204546_add_demography_citizens_active_column.rb
    :classes: 
    - :complexity: 1
      :methods: 
      - :complexity: 1
        :lines: 4
        :name: AddDemographyCitizensActiveColumn#change
      :class_name: AddDemographyCitizensActiveColumn
      :lines: 6
  - :filename: spec/dummy/config/environments/development.rb
    :classes: 
    - :complexity: 1
      :methods: []

      :class_name: ""
      :lines: 29
  - :filename: lib/pg_power/connection_adapters/table.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 1
      :methods: []

      :class_name: PgPower
      :lines: 14
  - :filename: spec/dummy/config/environments/production.rb
    :classes: 
    - :complexity: 1
      :methods: []

      :class_name: ""
      :lines: 59
  - :filename: lib/pg_power/schema_dumper.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 1
      :methods: []

      :class_name: PgPower
      :lines: 17
  - :filename: spec/dummy/config/environments/test.rb
    :classes: 
    - :complexity: 1
      :methods: []

      :class_name: ""
      :lines: 38
  - :filename: lib/pg_power/connection_adapters/abstract_adapter/index_methods.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 1
      :methods: 
      - :complexity: 1
        :lines: 2
        :name: PgPower#supports_partial_index?
      :class_name: PgPower
      :lines: 4
  - :filename: spec/dummy/config/initializers/wrap_parameters.rb
    :classes: 
    - :complexity: 1
      :methods: []

      :class_name: ""
      :lines: 2
  - :filename: spec/dummy/config/routes.rb
    :classes: 
    - :complexity: 1
      :methods: []

      :class_name: ""
      :lines: 57
  - :filename: spec/dummy/db/migrate/20120301171826_remove_demography_nationalities.rb
    :classes: 
    - :complexity: 1
      :methods: 
      - :complexity: 1
        :lines: 2
        :name: RemoveDemographyNationalities#change
      :class_name: RemoveDemographyNationalities
      :lines: 4
  - :filename: spec/dummy/db/migrate/20120106163711_create_demography_schema.rb
    :classes: 
    - :complexity: 1
      :methods: 
      - :complexity: 1
        :lines: 4
        :name: CreateDemographySchema#change
      :class_name: CreateDemographySchema
      :lines: 6
  - :filename: spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb
    :classes: 
    - :complexity: 1
      :methods: 
      - :complexity: 1
        :lines: 11
        :name: AddForeignKeys#change
      :class_name: AddForeignKeys
      :lines: 13
  - :filename: spec/dummy/config/boot.rb
    :classes: 
    - :complexity: 1
      :methods: []

      :class_name: ""
      :lines: 4
  - :filename: spec/dummy/config/initializers/backtrace_silencers.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
  - :filename: lib/pg_power/migration.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: PgPower
      :lines: 3
  - :filename: lib/pg_power/version.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: PgPower
      :lines: 3
  - :filename: lib/pg_power.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 0
      :methods: []

      :class_name: PgPower
      :lines: 8
  - :filename: spec/dummy/app/controllers/application_controller.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ApplicationController
      :lines: 2
  - :filename: lib/pg_power/connection_adapters/postgresql_adapter.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 0
      :methods: []

      :class_name: PgPower
      :lines: 13
  - :filename: spec/dummy/app/helpers/application_helper.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ApplicationHelper
      :lines: 1
  - :filename: spec/dummy/app/models/demography/citizen.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: Demography
      :lines: 2
  - :filename: spec/dummy/app/models/demography/country.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: Demography
      :lines: 2
  - :filename: spec/dummy/app/models/user.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: User
      :lines: 2
  - :filename: lib/pg_power/connection_adapters/index_definition.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: PgPower
      :lines: 4
    - :complexity: 0
      :methods: []

      :class_name: PgPower::IndexDefinition
      :lines: 1
  - :filename: lib/pg_power/connection_adapters/foreign_key_definition.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: PgPower
      :lines: 3
    - :complexity: 0
      :methods: []

      :class_name: PgPower::ForeignKeyDefinition
      :lines: 1
  - :filename: spec/dummy/config/application.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 0
      :methods: []

      :class_name: Dummy
      :lines: 2
    - :complexity: 0
      :methods: []

      :class_name: Dummy::Application
      :lines: 34
  - :filename: spec/dummy/config/environment.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
  - :filename: lib/pg_power/migration/command_recorder.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
    - :complexity: 0
      :methods: []

      :class_name: PgPower
      :lines: 10
  - :filename: spec/dummy/config/initializers/inflections.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
  - :filename: spec/dummy/config/initializers/mime_types.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
  - :filename: spec/dummy/config/initializers/secret_token.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
  - :filename: spec/dummy/config/initializers/session_store.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: ""
      :lines: 1
  - :filename: lib/pg_power/connection_adapters.rb
    :classes: 
    - :complexity: 0
      :methods: []

      :class_name: PgPower
      :lines: 8
  :methods: 
  - :complexity: 10
    :lines: 37
    :name: ActiveRecord::ConnectionAdapters::SchemaStatements#index_exists?
  - :complexity: 8
    :lines: 23
    :name: ActiveRecord::ConnectionAdapters::SchemaStatements#add_index_options
  - :complexity: 6
    :lines: 17
    :name: PgPower#tables_with_foreign_keys
  - :complexity: 6
    :lines: 29
    :name: PgPower#foreign_keys
  - :complexity: 6
    :lines: 17
    :name: PgPower::ConnectionAdapters#foreign_keys
  - :complexity: 6
    :lines: 23
    :name: ActiveRecord::SchemaDumper#indexes
  - :complexity: 4
    :lines: 16
    :name: PgPower#dump_comments
  - :complexity: 4
    :lines: 23
    :name: ActiveRecord::ConnectionAdapters::PostgreSQLAdapter#indexes
  - :complexity: 4
    :lines: 7
    :name: PgPower::ConnectionAdapters#dependency_sql
  - :complexity: 3
    :lines: 13
    :name: PgPower::ConnectionAdapters#add_foreign_key_sql
  - :complexity: 3
    :lines: 15
    :name: PgPower::ConnectionAdapters#remove_foreign_key
  - :complexity: 3
    :lines: 12
    :name: PgPower::ConnectionAdapters#add_foreign_key
  - :complexity: 3
    :lines: 13
    :name: PgPower#invert_add_foreign_key
  - :complexity: 3
    :lines: 12
    :name: CreateOwnersAndBreeds#change
  - :complexity: 2
    :lines: 4
    :name: PgPower#remove_column_comments
  - :complexity: 2
    :lines: 15
    :name: CreatePets#change
  - :complexity: 2
    :lines: 4
    :name: PgPower#set_column_comments
  - :complexity: 2
    :lines: 18
    :name: CreateUsers#change
  - :complexity: 2
    :lines: 13
    :name: CreateDemographyCountries#change
  - :complexity: 2
    :lines: 8
    :name: PgPower#comments
  - :complexity: 2
    :lines: 3
    :name: PgPower#invert_set_column_comments
  - :complexity: 2
    :lines: 21
    :name: CreateDemographyCitizens#change
  - :complexity: 2
    :lines: 4
    :name: CreateDemographyNationalities#change
  - :complexity: 2
    :lines: 7
    :name: CreateCitiesTable#change
  - :complexity: 2
    :lines: 7
    :name: PgPower#schemas
  - :complexity: 2
    :lines: 4
    :name: PgPower#non_public_schema_tables
  - :complexity: 2
    :lines: 7
    :name: PgPower::ConnectionAdapters#foreign_key_name
  - :complexity: 2
    :lines: 9
    :name: PgPower#tables_with_comments
  - :complexity: 2
    :lines: 5
    :name: DemographyPopulationStatisctics#change
  - :complexity: 2
    :lines: 4
    :name: PgPower::ConnectionAdapters#id_column_name_from_foreign_key_metadata
  - :complexity: 2
    :lines: 2
    :name: PgPower::ConnectionAdapters#drop_table
  - :complexity: 2
    :lines: 9
    :name: PgPower#index_name_for_remove
  - :complexity: 2
    :lines: 4
    :name: PgPower#create_table_with_schema_option
  - :complexity: 2
    :lines: 4
    :name: PgPower#drop_table_with_schema_option
  - :complexity: 2
    :lines: 9
    :name: PgPower#references_with_foreign_keys
  - :complexity: 1
    :lines: 3
    :name: PgPower::Tools#create_schema
  - :complexity: 1
    :lines: 2
    :name: PgPower#remove_foreign_key
  - :complexity: 1
    :lines: 2
    :name: PgPower#foreign_key
  - :complexity: 1
    :lines: 1
    :name: PgPower#add_foreign_key
  - :complexity: 1
    :lines: 1
    :name: PgPower#remove_foreign_key
  - :complexity: 1
    :lines: 2
    :name: PgPower#foreign_keys
  - :complexity: 1
    :lines: 2
    :name: PgPower#index_name
  - :complexity: 1
    :lines: 2
    :name: PgPower#supports_partial_index?
  - :complexity: 1
    :lines: 2
    :name: PgPower#create_schema
  - :complexity: 1
    :lines: 2
    :name: PgPower#drop_schema
  - :complexity: 1
    :lines: 2
    :name: PgPower#remove_foreign_key
  - :complexity: 1
    :lines: 2
    :name: PgPower#add_foreign_key
  - :complexity: 1
    :lines: 2
    :name: PgPower#invert_create_schema
  - :complexity: 1
    :lines: 2
    :name: PgPower#invert_drop_schema
  - :complexity: 1
    :lines: 2
    :name: PgPower#supports_foreign_keys?
  - :complexity: 1
    :lines: 2
    :name: PgPower#remove_column_comments
  - :complexity: 1
    :lines: 2
    :name: PgPower#remove_column_comment
  - :complexity: 1
    :lines: 2
    :name: PgPower#set_column_comments
  - :complexity: 1
    :lines: 2
    :name: PgPower#set_column_comment
  - :complexity: 1
    :lines: 2
    :name: PgPower#remove_table_comment
  - :complexity: 1
    :lines: 2
    :name: PgPower#set_table_comment
  - :complexity: 1
    :lines: 3
    :name: PgPower#get_non_public_schema_table_names
  - :complexity: 1
    :lines: 3
    :name: PgPower::Tools#drop_schema
  - :complexity: 1
    :lines: 2
    :name: PgPower#schema
  - :complexity: 1
    :lines: 3
    :name: PgPower::Tools#schemas
  - :complexity: 1
    :lines: 4
    :name: PgPower#tables_with_schemas
  - :complexity: 1
    :lines: 2
    :name: PgPower#remove_column_comments
  - :complexity: 1
    :lines: 2
    :name: PgPower#remove_column_comment
  - :complexity: 1
    :lines: 2
    :name: PgPower#remove_table_comment
  - :complexity: 1
    :lines: 2
    :name: PgPower#set_column_comments
  - :complexity: 1
    :lines: 2
    :name: PgPower#set_column_comment
  - :complexity: 1
    :lines: 2
    :name: PgPower#set_table_comment
  - :complexity: 1
    :lines: 2
    :name: PgPower#supports_comments?
  - :complexity: 1
    :lines: 2
    :name: PgPower#connection
  - :complexity: 1
    :lines: 4
    :name: PgPower#to_schema_and_table
  - :complexity: 1
    :lines: 3
    :name: PgPower#table_exists?
  - :complexity: 1
    :lines: 2
    :name: PgPower#index_exists?
  - :complexity: 1
    :lines: 4
    :name: PgPower#has_foreign_key?
  - :complexity: 1
    :lines: 4
    :name: PgPower#get_column_comment
  - :complexity: 1
    :lines: 4
    :name: PgPower#get_table_comment
  - :complexity: 1
    :lines: 3
    :name: RemoveCommentsOnCountriesTable#up
  - :complexity: 1
    :lines: 4
    :name: PgPower#invert_set_column_comment
  - :complexity: 1
    :lines: 3
    :name: PgPower#invert_set_table_comment
  - :complexity: 1
    :lines: 2
    :name: PgPower#remove_column_comments
  - :complexity: 1
    :lines: 2
    :name: PgPower#remove_column_comment
  - :complexity: 1
    :lines: 2
    :name: PgPower#set_column_comments
  - :complexity: 1
    :lines: 2
    :name: PgPower#set_column_comment
  - :complexity: 1
    :lines: 2
    :name: PgPower#remove_table_comment
  - :complexity: 1
    :lines: 2
    :name: PgPower#set_table_comment
  - :complexity: 1
    :lines: 2
    :name: RemoveCommentsOnCountriesTable#down
  - :complexity: 1
    :lines: 2
    :name: RemoveSomeCommentsOnCitizens#up
  - :complexity: 1
    :lines: 3
    :name: PgPower#remove_column_comment
  - :complexity: 1
    :lines: 3
    :name: PgPower#remove_table_comment
  - :complexity: 1
    :lines: 4
    :name: RemoveSomeCommentsOnCitizens#down
  - :complexity: 1
    :lines: 3
    :name: PgPower#set_column_comment
  - :complexity: 1
    :lines: 3
    :name: PgPower#set_table_comment
  - :complexity: 1
    :lines: 2
    :name: PgPower#supports_comments?
  - :complexity: 1
    :lines: 2
    :name: RemoveCommentOnPetsTable#up
  - :complexity: 1
    :lines: 2
    :name: RemoveCommentOnPetsTable#down
  - :complexity: 1
    :lines: 2
    :name: PgPower#create_schema
  - :complexity: 1
    :lines: 2
    :name: PgPower#drop_schema
  - :complexity: 1
    :lines: 3
    :name: ActiveRecord::ConnectionAdapters::SchemaStatements#add_index
  - :complexity: 1
    :lines: 6
    :name: RemoveForeignKeys#up
  - :complexity: 1
    :lines: 4
    :name: RemoveForeignKeys#down
  - :complexity: 1
    :lines: 2
    :name: Demography#self.table_name_prefix
  - :complexity: 1
    :lines: 2
    :name: PgPower::ConnectionAdapters#id_column_name_from_table_name
  - :complexity: 1
    :lines: 2
    :name: PgPower::ConnectionAdapters#remove_foreign_key_sql
  - :complexity: 1
    :lines: 4
    :name: AddDemographyCitizensActiveColumn#change
  - :complexity: 1
    :lines: 2
    :name: PgPower#supports_partial_index?
  - :complexity: 1
    :lines: 2
    :name: RemoveDemographyNationalities#change
  - :complexity: 1
    :lines: 4
    :name: CreateDemographySchema#change
  - :complexity: 1
    :lines: 11
    :name: AddForeignKeys#change
  - :complexity: 1
    :lines: 2
    :name: PgPower::ConnectionAdapters#supports_foreign_keys?
  :classes: 
  - :complexity: 28
    :defs: 
    - :complexity: 1
      :lines: 2
      :name: PgPower::ConnectionAdapters#supports_foreign_keys?
    - :complexity: 6
      :lines: 17
      :name: PgPower::ConnectionAdapters#foreign_keys
    - :complexity: 2
      :lines: 2
      :name: PgPower::ConnectionAdapters#drop_table
    - :complexity: 3
      :lines: 12
      :name: PgPower::ConnectionAdapters#add_foreign_key
    - :complexity: 3
      :lines: 13
      :name: PgPower::ConnectionAdapters#add_foreign_key_sql
    - :complexity: 3
      :lines: 15
      :name: PgPower::ConnectionAdapters#remove_foreign_key
    - :complexity: 1
      :lines: 2
      :name: PgPower::ConnectionAdapters#remove_foreign_key_sql
    - :complexity: 1
      :lines: 2
      :name: PgPower::ConnectionAdapters#id_column_name_from_table_name
    - :complexity: 2
      :lines: 4
      :name: PgPower::ConnectionAdapters#id_column_name_from_foreign_key_metadata
    - :complexity: 2
      :lines: 7
      :name: PgPower::ConnectionAdapters#foreign_key_name
    - :complexity: 4
      :lines: 7
      :name: PgPower::ConnectionAdapters#dependency_sql
    :lines: 144
    :name: PgPower::ConnectionAdapters
  - :complexity: 20
    :lines: 78
    :name: ""
  - :complexity: 19
    :defs: 
    - :complexity: 1
      :lines: 3
      :name: ActiveRecord::ConnectionAdapters::SchemaStatements#add_index
    - :complexity: 10
      :lines: 37
      :name: ActiveRecord::ConnectionAdapters::SchemaStatements#index_exists?
    - :complexity: 8
      :lines: 23
      :name: ActiveRecord::ConnectionAdapters::SchemaStatements#add_index_options
    :lines: 94
    :name: ActiveRecord::ConnectionAdapters::SchemaStatements
  - :complexity: 17
    :lines: 64
    :name: ""
  - :complexity: 16
    :lines: 75
    :name: ""
  - :complexity: 13
    :lines: 64
    :name: ""
  - :complexity: 12
    :defs: 
    - :complexity: 6
      :lines: 17
      :name: PgPower#tables_with_foreign_keys
    - :complexity: 6
      :lines: 29
      :name: PgPower#foreign_keys
    :lines: 55
    :name: PgPower
  - :complexity: 11
    :defs: 
    - :complexity: 1
      :lines: 2
      :name: PgPower#supports_comments?
    - :complexity: 1
      :lines: 3
      :name: PgPower#set_table_comment
    - :complexity: 1
      :lines: 3
      :name: PgPower#set_column_comment
    - :complexity: 2
      :lines: 4
      :name: PgPower#set_column_comments
    - :complexity: 1
      :lines: 3
      :name: PgPower#remove_table_comment
    - :complexity: 1
      :lines: 3
      :name: PgPower#remove_column_comment
    - :complexity: 2
      :lines: 4
      :name: PgPower#remove_column_comments
    - :complexity: 2
      :lines: 8
      :name: PgPower#comments
    :lines: 68
    :name: PgPower
  - :complexity: 10
    :lines: 42
    :name: PgPower::Engine
  - :complexity: 10
    :defs: 
    - :complexity: 1
      :lines: 2
      :name: PgPower#set_table_comment
    - :complexity: 1
      :lines: 2
      :name: PgPower#remove_table_comment
    - :complexity: 1
      :lines: 2
      :name: PgPower#set_column_comment
    - :complexity: 1
      :lines: 2
      :name: PgPower#set_column_comments
    - :complexity: 1
      :lines: 2
      :name: PgPower#remove_column_comment
    - :complexity: 1
      :lines: 2
      :name: PgPower#remove_column_comments
    - :complexity: 1
      :lines: 3
      :name: PgPower#invert_set_table_comment
    - :complexity: 1
      :lines: 4
      :name: PgPower#invert_set_column_comment
    - :complexity: 2
      :lines: 3
      :name: PgPower#invert_set_column_comments
    :lines: 49
    :name: PgPower
  - :complexity: 9
    :lines: 95
    :name: ""
  - :complexity: 7
    :lines: 17
    :name: ""
  - :complexity: 7
    :defs: 
    - :complexity: 1
      :lines: 4
      :name: PgPower#get_table_comment
    - :complexity: 1
      :lines: 4
      :name: PgPower#get_column_comment
    - :complexity: 1
      :lines: 4
      :name: PgPower#has_foreign_key?
    - :complexity: 1
      :lines: 2
      :name: PgPower#index_exists?
    - :complexity: 1
      :lines: 3
      :name: PgPower#table_exists?
    - :complexity: 1
      :lines: 4
      :name: PgPower#to_schema_and_table
    - :complexity: 1
      :lines: 2
      :name: PgPower#connection
    :lines: 44
    :name: PgPower
  - :complexity: 7
    :defs: 
    - :complexity: 1
      :lines: 4
      :name: PgPower#tables_with_schemas
    - :complexity: 2
      :lines: 7
      :name: PgPower#schemas
    - :complexity: 1
      :lines: 2
      :name: PgPower#schema
    - :complexity: 2
      :lines: 4
      :name: PgPower#non_public_schema_tables
    - :complexity: 1
      :lines: 3
      :name: PgPower#get_non_public_schema_table_names
    :lines: 43
    :name: PgPower
  - :complexity: 7
    :defs: 
    - :complexity: 1
      :lines: 2
      :name: PgPower#supports_comments?
    - :complexity: 1
      :lines: 2
      :name: PgPower#set_table_comment
    - :complexity: 1
      :lines: 2
      :name: PgPower#set_column_comment
    - :complexity: 1
      :lines: 2
      :name: PgPower#set_column_comments
    - :complexity: 1
      :lines: 2
      :name: PgPower#remove_table_comment
    - :complexity: 1
      :lines: 2
      :name: PgPower#remove_column_comment
    - :complexity: 1
      :lines: 2
      :name: PgPower#remove_column_comments
    :lines: 59
    :name: PgPower
  - :complexity: 6
    :defs: 
    - :complexity: 2
      :lines: 9
      :name: PgPower#tables_with_comments
    - :complexity: 4
      :lines: 16
      :name: PgPower#dump_comments
    :lines: 34
    :name: PgPower
  - :complexity: 6
    :defs: 
    - :complexity: 1
      :lines: 2
      :name: PgPower#set_table_comment
    - :complexity: 1
      :lines: 2
      :name: PgPower#remove_table_comment
    - :complexity: 1
      :lines: 2
      :name: PgPower#set_column_comment
    - :complexity: 1
      :lines: 2
      :name: PgPower#set_column_comments
    - :complexity: 1
      :lines: 2
      :name: PgPower#remove_column_comment
    - :complexity: 1
      :lines: 2
      :name: PgPower#remove_column_comments
    :lines: 55
    :name: PgPower
  - :complexity: 6
    :defs: 
    - :complexity: 6
      :lines: 23
      :name: ActiveRecord::SchemaDumper#indexes
    :lines: 34
    :name: ActiveRecord::SchemaDumper
  - :complexity: 5
    :defs: 
    - :complexity: 1
      :lines: 2
      :name: PgPower#add_foreign_key
    - :complexity: 1
      :lines: 2
      :name: PgPower#remove_foreign_key
    - :complexity: 3
      :lines: 13
      :name: PgPower#invert_add_foreign_key
    :lines: 26
    :name: PgPower
  - :complexity: 4
    :defs: 
    - :complexity: 1
      :lines: 2
      :name: PgPower#supports_partial_index?
    - :complexity: 1
      :lines: 2
      :name: PgPower#index_name
    - :complexity: 2
      :lines: 9
      :name: PgPower#index_name_for_remove
    :lines: 39
    :name: PgPower
  - :complexity: 4
    :defs: 
    - :complexity: 4
      :lines: 23
      :name: ActiveRecord::ConnectionAdapters::PostgreSQLAdapter#indexes
    :lines: 46
    :name: ActiveRecord::ConnectionAdapters::PostgreSQLAdapter
  - :complexity: 4
    :defs: 
    - :complexity: 1
      :lines: 2
      :name: PgPower#create_schema
    - :complexity: 1
      :lines: 2
      :name: PgPower#drop_schema
    - :complexity: 1
      :lines: 2
      :name: PgPower#invert_create_schema
    - :complexity: 1
      :lines: 2
      :name: PgPower#invert_drop_schema
    :lines: 20
    :name: PgPower
  - :complexity: 4
    :defs: 
    - :complexity: 2
      :lines: 4
      :name: PgPower#create_table_with_schema_option
    - :complexity: 2
      :lines: 4
      :name: PgPower#drop_table_with_schema_option
    :lines: 15
    :name: PgPower
  - :complexity: 4
    :defs: 
    - :complexity: 1
      :lines: 2
      :name: PgPower#supports_foreign_keys?
    - :complexity: 1
      :lines: 1
      :name: PgPower#add_foreign_key
    - :complexity: 1
      :lines: 1
      :name: PgPower#remove_foreign_key
    - :complexity: 1
      :lines: 2
      :name: PgPower#foreign_keys
    :lines: 64
    :name: PgPower
  - :complexity: 4
    :defs: 
    - :complexity: 1
      :lines: 2
      :name: PgPower#foreign_key
    - :complexity: 1
      :lines: 2
      :name: PgPower#remove_foreign_key
    - :complexity: 2
      :lines: 9
      :name: PgPower#references_with_foreign_keys
    :lines: 47
    :name: PgPower
  - :complexity: 3
    :defs: 
    - :complexity: 3
      :lines: 12
      :name: CreateOwnersAndBreeds#change
    :lines: 14
    :name: CreateOwnersAndBreeds
  - :complexity: 3
    :defs: 
    - :complexity: 1
      :lines: 3
      :name: PgPower::Tools#create_schema
    - :complexity: 1
      :lines: 3
      :name: PgPower::Tools#drop_schema
    - :complexity: 1
      :lines: 3
      :name: PgPower::Tools#schemas
    :lines: 21
    :name: PgPower::Tools
  - :complexity: 2
    :defs: 
    - :complexity: 2
      :lines: 15
      :name: CreatePets#change
    :lines: 17
    :name: CreatePets
  - :complexity: 2
    :defs: 
    - :complexity: 2
      :lines: 18
      :name: CreateUsers#change
    :lines: 20
    :name: CreateUsers
  - :complexity: 2
    :defs: 
    - :complexity: 2
      :lines: 7
      :name: CreateCitiesTable#change
    :lines: 9
    :name: CreateCitiesTable
  - :complexity: 2
    :defs: 
    - :complexity: 1
      :lines: 2
      :name: RemoveCommentOnPetsTable#up
    - :complexity: 1
      :lines: 2
      :name: RemoveCommentOnPetsTable#down
    :lines: 8
    :name: RemoveCommentOnPetsTable
  - :complexity: 2
    :defs: 
    - :complexity: 2
      :lines: 13
      :name: CreateDemographyCountries#change
    :lines: 15
    :name: CreateDemographyCountries
  - :complexity: 2
    :defs: 
    - :complexity: 1
      :lines: 2
      :name: PgPower#create_schema
    - :complexity: 1
      :lines: 2
      :name: PgPower#drop_schema
    :lines: 12
    :name: PgPower
  - :complexity: 2
    :defs: 
    - :complexity: 1
      :lines: 6
      :name: RemoveForeignKeys#up
    - :complexity: 1
      :lines: 4
      :name: RemoveForeignKeys#down
    :lines: 14
    :name: RemoveForeignKeys
  - :complexity: 2
    :defs: 
    - :complexity: 2
      :lines: 21
      :name: CreateDemographyCitizens#change
    :lines: 23
    :name: CreateDemographyCitizens
  - :complexity: 2
    :defs: 
    - :complexity: 2
      :lines: 5
      :name: DemographyPopulationStatisctics#change
    :lines: 7
    :name: DemographyPopulationStatisctics
  - :complexity: 2
    :defs: 
    - :complexity: 1
      :lines: 3
      :name: RemoveCommentsOnCountriesTable#up
    - :complexity: 1
      :lines: 2
      :name: RemoveCommentsOnCountriesTable#down
    :lines: 9
    :name: RemoveCommentsOnCountriesTable
  - :complexity: 2
    :defs: 
    - :complexity: 2
      :lines: 4
      :name: CreateDemographyNationalities#change
    :lines: 6
    :name: CreateDemographyNationalities
  - :complexity: 2
    :defs: 
    - :complexity: 1
      :lines: 2
      :name: RemoveSomeCommentsOnCitizens#up
    - :complexity: 1
      :lines: 4
      :name: RemoveSomeCommentsOnCitizens#down
    :lines: 10
    :name: RemoveSomeCommentsOnCitizens
  - :complexity: 1
    :lines: 14
    :name: PgPower
  - :complexity: 1
    :lines: 59
    :name: ""
  - :complexity: 1
    :lines: 29
    :name: ""
  - :complexity: 1
    :defs: 
    - :complexity: 1
      :lines: 4
      :name: AddDemographyCitizensActiveColumn#change
    :lines: 6
    :name: AddDemographyCitizensActiveColumn
  - :complexity: 1
    :lines: 18
    :name: PgPower
  - :complexity: 1
    :lines: 17
    :name: PgPower
  - :complexity: 1
    :lines: 5
    :name: ""
  - :complexity: 1
    :defs: 
    - :complexity: 1
      :lines: 2
      :name: Demography#self.table_name_prefix
    :lines: 4
    :name: Demography
  - :complexity: 1
    :lines: 38
    :name: ""
  - :complexity: 1
    :defs: 
    - :complexity: 1
      :lines: 2
      :name: PgPower#supports_partial_index?
    :lines: 4
    :name: PgPower
  - :complexity: 1
    :lines: 2
    :name: ""
  - :complexity: 1
    :lines: 57
    :name: ""
  - :complexity: 1
    :defs: 
    - :complexity: 1
      :lines: 2
      :name: RemoveDemographyNationalities#change
    :lines: 4
    :name: RemoveDemographyNationalities
  - :complexity: 1
    :defs: 
    - :complexity: 1
      :lines: 4
      :name: CreateDemographySchema#change
    :lines: 6
    :name: CreateDemographySchema
  - :complexity: 1
    :defs: 
    - :complexity: 1
      :lines: 11
      :name: AddForeignKeys#change
    :lines: 13
    :name: AddForeignKeys
  - :complexity: 1
    :lines: 4
    :name: ""
  - :complexity: 0
    :lines: 8
    :name: PgPower
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 8
    :name: PgPower
  - :complexity: 0
    :lines: 3
    :name: PgPower
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 3
    :name: PgPower
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 8
    :name: PgPower
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 2
    :name: ApplicationController
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 5
    :name: ActiveRecord::ConnectionAdapters
  - :complexity: 0
    :lines: 2
    :name: ActiveRecord
  - :complexity: 0
    :lines: 13
    :name: PgPower
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 1
    :name: ApplicationHelper
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 2
    :name: Demography
  - :complexity: 0
    :lines: 5
    :name: ActiveRecord
  - :complexity: 0
    :lines: 2
    :name: Demography
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 2
    :name: User
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 4
    :name: PgPower
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 1
    :name: PgPower::IndexDefinition
  - :complexity: 0
    :lines: 3
    :name: PgPower
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 1
    :name: PgPower::ForeignKeyDefinition
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 3
    :name: PgPower
  - :complexity: 0
    :lines: 2
    :name: Dummy
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 34
    :name: Dummy::Application
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 10
    :name: PgPower
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 2
    :name: ActiveRecord::ConnectionAdapters
  - :complexity: 0
    :lines: 2
    :name: ActiveRecord
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 1
    :name: ""
  - :complexity: 0
    :lines: 1
    :name: PgPower::IndexExistsError
  - :complexity: 0
    :lines: 7
    :name: PgPower
:flog: 
  :total: 1474.45976823184
  :method_containers: 
  - :average_score: 146.219868690955
    :methods: 
      main#none: 
        :path: 
        :score: 146.219868690955
        :operators: 
          :on_load: 2.2
          :unshift: 1.1
          :define: 1.0
          :lit_fixnum: 0.3
          :configure: 4.10000000000001
          :set_table_comment: 2.4
          :routes: 1.2
          :active_support: 3.60000000000001
          :set_column_comment: 8.40000000000001
          :draw: 1.0
          :setup: 1.3
          :describe: 1.1
          :root: 1.3
          :each: 1.1
          :assets: 6.00000000000001
          :action_dispatch: 2.4
          :initialize!: 1.1
          :require: 22.3
          :mock_with: 1.3
          :create_schema: 3.60000000000001
          :action_controller: 4.80000000000001
          :exist?: 1.1
          :add_foreign_key: 3.60000000000001
          :session_store: 1.0
          :i18n: 1.2
          :assignment: 44.5000000000001
          :[]: 1.3
          :add_index: 8.40000000000001
          :wrap_parameters: 1.2
          :expand_path: 7.80000000000001
          :action_mailer: 2.4
          :config: 39.2000000000001
          :branch: 11.6
    :path: ""
    :highest_score: 146.219868690955
    :total_score: 146.219868690955
    :name: main
  - :average_score: 37.7171156453597
    :methods: 
      PgPower::SchemaDumper::ForeignerMethods#none: 
        :path: 
        :score: 1.1
        :operators: 
          :private: 1.1
      PgPower::SchemaDumper::ForeignerMethods#foreign_keys: 
        :path: ./lib/pg_power/schema_dumper/foreigner_methods.rb:27
        :score: 88.0103403015806
        :operators: 
          :to_table: 4.0
          :+: 10.7
          :inspect: 11.9
          :options: 15.9
          :<<: 9.90000000000001
          :foreign_keys: 1.4
          :puts: 2.8
          :join: 3.4
          :singularize: 1.8
          :any?: 1.2
          :sort: 1.8
          :map: 1.4
          :assignment: 5.90000000000001
          :present?: 1.6
          :==: 3.2
          :[]: 14.5
          :from_table: 2.0
          :branch: 7.40000000000001
      PgPower::SchemaDumper::ForeignerMethods#tables_with_foreign_keys: 
        :path: ./lib/pg_power/schema_dumper/foreigner_methods.rb:5
        :score: 24.0410066344985
        :operators: 
          :+: 1.2
          :foreign_keys: 1.4
          :each: 1.2
          :raise: 1.6
          :any?: 1.4
          :flatten: 1.6
          :tables_without_foreign_keys: 1.2
          :=~: 1.7
          :sort: 4.0
          :assignment: 5.2
          :==: 1.7
          :ignore_tables: 1.8
          :branch: 8.70000000000001
          :get_non_public_schema_table_names: 1.6
          :tables: 1.4
    :path: ./lib/pg_power/schema_dumper/foreigner_methods.rb
    :highest_score: 88.0103403015806
    :total_score: 113.151346936079
    :name: PgPower::SchemaDumper::ForeignerMethods
  - :average_score: 25.7134847646912
    :methods: 
      ActiveRecord::ConnectionAdapters::SchemaStatements#add_index: 
        :path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb:13
        :score: 8.88144132446981
        :operators: 
          :quote_table_name: 1.4
          :execute: 1.2
          :add_index_options: 1.2
          :assignment: 7.2
          :quote_column_name: 1.4
      ActiveRecord::ConnectionAdapters::SchemaStatements#index_exists?: 
        :path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb:28
        :score: 63.3303244899314
        :operators: 
          :gsub!: 4.0
          :is_a?: 3.8
          :index_name: 1.3
          :downcase: 4.4
          :wrap: 1.2
          :call: 1.5
          :key?: 2.7
          :indexes: 1.4
          :<<: 1.3
          :each: 1.2
          :any?: 1.2
          :blank?: 1.7
          :send: 11.1
          :name: 1.5
          :assignment: 20.5
          :==: 5.2
          :lambda: 4.4
          :to_s: 1.3
          :[]: 6.0
          :inject: 2.6
          :branch: 15.8
      ActiveRecord::ConnectionAdapters::SchemaStatements#add_index_options: 
        :path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb:71
        :score: 29.5421732443637
        :operators: 
          :index_name: 1.2
          :===: 1.2
          :>: 1.2
          :quoted_columns_for_index: 1.4
          :key?: 1.4
          :Array: 1.2
          :length: 1.4
          :supports_partial_index?: 1.4
          :join: 1.2
          :raise: 2.6
          :index_name_exists?: 1.2
          :assignment: 10.5
          :to_s: 1.5
          :[]: 6.2
          :index_name_length: 2.9
          :branch: 9.3
      ActiveRecord::ConnectionAdapters::SchemaStatements#none: 
        :path: 
        :score: 1.1
        :operators: 
          :protected: 1.1
    :path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
    :highest_score: 63.3303244899314
    :total_score: 102.853939058765
    :name: ActiveRecord::ConnectionAdapters::SchemaStatements
  - :average_score: 59.3451767206064
    :methods: 
      ActiveRecord::SchemaDumper#indexes: 
        :path: ./lib/core_ext/active_record/schema_dumper.rb:15
        :score: 59.3451767206064
        :operators: 
          :where: 3.7
          :+: 8.1
          :inspect: 8.9
          :table: 1.9
          :compact: 1.5
          :columns: 4.3
          :zip: 2.4
          :empty?: 1.5
          :<<: 4.8
          :indexes: 1.3
          :puts: 2.6
          :join: 3.2
          :lengths: 4.4
          :any?: 1.1
          :sort: 1.7
          :name: 1.9
          :map: 1.3
          :assignment: 7.0
          :[]: 2.2
          :unique: 1.5
          :branch: 8.6
    :path: ./lib/core_ext/active_record/schema_dumper.rb
    :highest_score: 59.3451767206064
    :total_score: 59.3451767206064
    :name: ActiveRecord::SchemaDumper
  - :average_score: 54.5031191767958
    :methods: 
      PgPower::Engine::initializer#pg_power: 
        :path: ./lib/pg_power/engine.rb:43
        :score: 54.5031191767958
        :operators: 
          :+: 3.2
          :on_load: 1.0
          :module_eval: 12.0
          :include: 13.2
          :require: 1.3
          :root: 1.9
          :each: 1.2
          :class_eval: 18.5
          :assignment: 3.9
          :initializer: 1.0
          :branch: 10.7
    :path: ./lib/pg_power/engine.rb
    :highest_score: 54.5031191767958
    :total_score: 54.5031191767958
    :name: PgPower::Engine::initializer
  - :average_score: 41.8563017955481
    :methods: 
      ActiveRecord::ConnectionAdapters::PostgreSQLAdapter#indexes: 
        :path: ./lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb:27
        :score: 41.8563017955481
        :operators: 
          :lit_fixnum: 1.8
          :scan: 1.9
          :compact: 2.6
          :values_at: 1.7
          :empty?: 1.5
          :join: 1.9
          :flatten: 1.7
          :query: 2.8
          :split: 1.5
          :map: 1.3
          :assignment: 21.5
          :==: 1.5
          :[]: 12.8
          :extract_schema_and_table: 1.1
          :new: 1.6
          :branch: 3.9
    :path: ./lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb
    :highest_score: 41.8563017955481
    :total_score: 41.8563017955481
    :name: ActiveRecord::ConnectionAdapters::PostgreSQLAdapter
  - :average_score: 11.2854032528492
    :methods: 
      PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#foreign_keys: 
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:16
        :score: 21.8573929140692
        :operators: 
          :lit_fixnum: 0.425
          :select_all: 1.3
          :map: 1.3
          :split: 1.5
          :assignment: 10.9
          :[]: 7.7
          :to_s: 1.7
          :new: 1.5
          :branch: 8.90000000000001
          :reverse: 1.3
      PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#none: 
        :path: 
        :score: 4.8
        :operators: 
          :private: 4.8
      PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#drop_table: 
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:55
        :score: 1.83847763108502
        :operators: 
          :disable_referential_integrity: 1.3
          :branch: 1.3
      PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#add_foreign_key: 
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:75
        :score: 19.2784854176878
        :operators: 
          :index_name: 1.6
          :quote_table_name: 1.3
          :id_column_name_from_table_name: 1.3
          :execute: 1.3
          :add_foreign_key_sql: 1.3
          :raise: 1.4
          :assignment: 2.6
          :add_index: 1.4
          :[]: 7.7
          :index_exists?: 1.4
          :branch: 3.9
      PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#dependency_sql: 
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:162
        :score: 5.50000000000001
        :operators: 
          :branch: 5.50000000000001
      PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#remove_foreign_key: 
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:113
        :score: 20.5082910063223
        :operators: 
          :remove_index: 1.4
          :quote_table_name: 1.5
          :===: 1.3
          :id_column_name_from_table_name: 1.5
          :execute: 1.3
          :id_column_name_from_foreign_key_metadata: 1.5
          :foreign_key_name: 3.0
          :assignment: 10.3
          :remove_foreign_key_sql: 1.5
          :[]: 2.9
          :index_exists?: 1.4
          :branch: 3.9
      PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#add_foreign_key_sql: 
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:90
        :score: 26.411171878582
        :operators: 
          :+: 2.8
          :quote_table_name: 1.5
          :proper_table_name: 1.7
          :<<: 2.8
          :foreign_key_name: 1.3
          :assignment: 6.5
          :present?: 1.3
          :[]: 9.20000000000001
          :quote_column_name: 3.4
          :dependency_sql: 1.3
          :branch: 3.9
      PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#id_column_name_from_foreign_key_metadata: 
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:144
        :score: 11.0331319216259
        :operators: 
          :options: 3.3
          :foreign_keys: 1.3
          :find: 1.3
          :assignment: 4.0
          :==: 1.4
          :[]: 2.9
          :branch: 1.3
      PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#id_column_name_from_table_name: 
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:136
        :score: 6.4
        :operators: 
          :last: 1.5
          :singularize: 1.3
          :split: 1.7
          :to_s: 1.9
      PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#foreign_key_name: 
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:152
        :score: 5.21248501196887
        :operators: 
          :gsub: 1.5
          :assignment: 2.8
          :[]: 2.7
          :branch: 1.3
      PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#remove_foreign_key_sql: 
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:131
        :score: 1.3
        :operators: 
          :quote_column_name: 1.3
    :path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
    :highest_score: 26.411171878582
    :total_score: 124.139435781341
    :name: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods
  - :average_score: 21.3283848427395
    :methods: 
      PgPower::ConnectionAdapters::AbstractAdapter#none: 
        :path: 
        :score: 21.3283848427395
        :operators: 
          :include: 8.8
          :alias_method_chain: 2.6
          :included: 1.1
          :autoload: 4.4
          :branch: 1.1
          :extend: 4.4
    :path: ""
    :highest_score: 21.3283848427395
    :total_score: 21.3283848427395
    :name: PgPower::ConnectionAdapters::AbstractAdapter
  - :average_score: 19.3313217344288
    :methods: 
      PgPower::SchemaDumper#none: 
        :path: 
        :score: 19.3313217344288
        :operators: 
          :include: 6.60000000000001
          :alias_method_chain: 3.9
          :included: 1.1
          :autoload: 3.3
          :branch: 1.1
          :extend: 4.4
    :path: ""
    :highest_score: 19.3313217344288
    :total_score: 19.3313217344288
    :name: PgPower::SchemaDumper
  - :average_score: 7.66676525902996
    :methods: 
      describe::describe::it#removes comment on column: 
        :path: ./spec/comment_methods_spec.rb:57
        :score: 10.0
        :operators: 
          :get_column_comment: 3.2
          :it: 1.2
          :be_nil: 1.5
          :should: 2.8
          :==: 1.3
      describe::describe::it#should be true for a :where clause that includes NULL comparison: 
        :path: ./spec/indexes_spec.rb:63
        :score: 7.629547824085
        :operators: 
          :it: 1.3
          :should: 1.6
          :assignment: 1.4
          :==: 1.4
          :add_index: 1.4
          :index_exists?: 1.8
      describe::describe::it#should not raise an exception if the index does not exist: 
        :path: ./spec/foreign_keys_spec.rb:63
        :score: 10.2235023353057
        :operators: 
          :raise_exception: 1.4
          :connection: 1.6
          :remove_foreign_key: 1.6
          :it: 1.2
          :should_not: 1.2
          :add_foreign_key: 1.6
          :assignment: 1.6
          :expect: 1.4
          :branch: 1.4
      describe::describe::it#sets comment on column: 
        :path: ./spec/comment_methods_spec.rb:21
        :score: 5.86941223633168
        :operators: 
          :get_column_comment: 1.4
          :it: 1.3
          :should: 1.6
          :assignment: 1.4
          :==: 1.4
      describe::describe::it#should be false for a subset of valid options: 
        :path: ./spec/indexes_spec.rb:40
        :score: 6.25859409132755
        :operators: 
          :it: 1.3
          :should: 1.6
          :assignment: 1.4
          :==: 1.4
          :index_exists?: 1.8
      describe::describe::it#should be true for simple options on a schema table: 
        :path: ./spec/indexes_spec.rb:25
        :score: 5.80000000000001
        :operators: 
          :it: 1.3
          :should: 1.5
          :==: 1.3
          :index_exists?: 1.7
      describe::describe::it#adds an index on the foreign key: 
        :path: ./spec/foreign_keys_spec.rb:13
        :score: 5.40000000000001
        :operators: 
          :it: 1.2
          :should: 1.4
          :==: 1.2
          :index_exists?: 1.6
      describe::describe::it#sets comments on columns of non-public schemas: 
        :path: ./spec/comment_methods_spec.rb:38
        :score: 10.9
        :operators: 
          :get_column_comment: 3.6
          :it: 1.3
          :should: 3.2
          :==: 2.8
      describe::describe::it#should be built with the :where option: 
        :path: ./spec/indexes_spec.rb:11
        :score: 7.11969100453104
        :operators: 
          :it: 1.2
          :should: 1.5
          :assignment: 1.3
          :==: 1.3
          :add_index: 1.3
          :index_exists?: 1.7
      describe::describe::it#sets comment on table: 
        :path: ./spec/comment_methods_spec.rb:9
        :score: 5.86941223633168
        :operators: 
          :get_table_comment: 1.4
          :it: 1.3
          :should: 1.6
          :assignment: 1.4
          :==: 1.4
      describe::describe::it#sets comments on columns: 
        :path: ./spec/comment_methods_spec.rb:33
        :score: 10.9
        :operators: 
          :get_column_comment: 3.6
          :it: 1.3
          :should: 3.2
          :==: 2.8
      describe::describe::it#removes comment on table of non-public schema: 
        :path: ./spec/comment_methods_spec.rb:50
        :score: 5.60000000000001
        :operators: 
          :get_table_comment: 1.5
          :it: 1.3
          :be_nil: 1.5
          :should: 1.3
      describe::describe::it#removes foreign key: 
        :path: ./spec/foreign_keys_spec.rb:37
        :score: 10.2
        :operators: 
          :has_foreign_key?: 3.4
          :it: 1.2
          :should: 3.0
          :==: 2.6
      describe::describe::it#should not add an index on the foreign key when :exclude_index is true: 
        :path: ./spec/foreign_keys_spec.rb:19
        :score: 5.40000000000001
        :operators: 
          :it: 1.2
          :should: 1.4
          :==: 1.2
          :index_exists?: 1.6
      describe::describe::it#should be true for a :where clause that includes text comparison: 
        :path: ./spec/indexes_spec.rb:57
        :score: 7.629547824085
        :operators: 
          :it: 1.3
          :should: 1.6
          :assignment: 1.4
          :==: 1.4
          :add_index: 1.4
          :index_exists?: 1.8
      describe::describe::it#should be true for a compound :where clause: 
        :path: ./spec/indexes_spec.rb:75
        :score: 7.629547824085
        :operators: 
          :it: 1.3
          :should: 1.6
          :assignment: 1.4
          :==: 1.4
          :add_index: 1.4
          :index_exists?: 1.8
      describe::describe::it#removes the index on the foreign key: 
        :path: ./spec/foreign_keys_spec.rb:45
        :score: 10.2
        :operators: 
          :it: 1.2
          :should: 3.0
          :==: 2.6
          :index_exists?: 3.4
      describe::describe::it#sets comment on table of non-public schema: 
        :path: ./spec/comment_methods_spec.rb:14
        :score: 5.86941223633168
        :operators: 
          :get_table_comment: 1.4
          :it: 1.3
          :should: 1.6
          :assignment: 1.4
          :==: 1.4
      describe::describe::it#should be true for a :where clause that includes integer comparison: 
        :path: ./spec/indexes_spec.rb:69
        :score: 7.629547824085
        :operators: 
          :it: 1.3
          :should: 1.6
          :assignment: 1.4
          :==: 1.4
          :add_index: 1.4
          :index_exists?: 1.8
      describe::describe::it#should be true for simple options: 
        :path: ./spec/indexes_spec.rb:17
        :score: 5.80000000000001
        :operators: 
          :it: 1.3
          :should: 1.5
          :==: 1.3
          :index_exists?: 1.7
      describe::describe::it#should be true for a :where clause that includes boolean comparison: 
        :path: ./spec/indexes_spec.rb:51
        :score: 7.629547824085
        :operators: 
          :it: 1.3
          :should: 1.6
          :assignment: 1.4
          :==: 1.4
          :add_index: 1.4
          :index_exists?: 1.8
      describe::describe::it#should remove foreign key by not remove the index when :exclude_index is true: 
        :path: ./spec/foreign_keys_spec.rb:55
        :score: 19.2
        :operators: 
          :has_foreign_key?: 3.4
          :it: 1.2
          :should: 6.00000000000001
          :==: 5.20000000000001
          :index_exists?: 3.4
      describe::describe::it#removes comment on table: 
        :path: ./spec/comment_methods_spec.rb:46
        :score: 5.60000000000001
        :operators: 
          :get_table_comment: 1.5
          :it: 1.3
          :be_nil: 1.5
          :should: 1.3
      describe::describe::it#should be true for a valid set of options including name: 
        :path: ./spec/indexes_spec.rb:35
        :score: 6.25859409132755
        :operators: 
          :it: 1.3
          :should: 1.6
          :assignment: 1.4
          :==: 1.4
          :index_exists?: 1.8
      describe::describe::it#should be true for a valid set of options: 
        :path: ./spec/indexes_spec.rb:30
        :score: 6.25859409132755
        :operators: 
          :it: 1.3
          :should: 1.6
          :assignment: 1.4
          :==: 1.4
          :index_exists?: 1.8
      describe::describe::it#adds foreign key: 
        :path: ./spec/foreign_keys_spec.rb:7
        :score: 5.40000000000001
        :operators: 
          :has_foreign_key?: 1.6
          :it: 1.2
          :should: 1.4
          :==: 1.2
      describe::describe::it#should support table name as a symbol: 
        :path: ./spec/indexes_spec.rb:21
        :score: 5.80000000000001
        :operators: 
          :it: 1.3
          :should: 1.5
          :==: 1.3
          :index_exists?: 1.7
      describe::describe::it#should be false for invalid options: 
        :path: ./spec/indexes_spec.rb:45
        :score: 6.25859409132755
        :operators: 
          :it: 1.3
          :should: 1.6
          :assignment: 1.4
          :==: 1.4
          :index_exists?: 1.8
      describe::describe::it#removes comment on columns: 
        :path: ./spec/comment_methods_spec.rb:64
        :score: 9.80000000000001
        :operators: 
          :get_column_comment: 3.0
          :it: 1.2
          :be_nil: 3.0
          :should: 2.6
      describe::describe::it#sets comment on column of non-public schema: 
        :path: ./spec/comment_methods_spec.rb:26
        :score: 5.86941223633168
        :operators: 
          :get_column_comment: 1.4
          :it: 1.3
          :should: 1.6
          :assignment: 1.4
          :==: 1.4
    :path: ./spec/indexes_spec.rb
    :highest_score: 19.2
    :total_score: 230.002957770899
    :name: describe::describe::it
  - :average_score: 17.6
    :methods: 
      PgPower::ConnectionAdapters::PostgreSQLAdapter#none: 
        :path: 
        :score: 17.6
        :operators: 
          :include: 8.8
          :autoload: 4.4
          :extend: 4.4
    :path: ""
    :highest_score: 17.6
    :total_score: 17.6
    :name: PgPower::ConnectionAdapters::PostgreSQLAdapter
  - :average_score: 9.54683847013672
    :methods: 
      PgPower::SchemaDumper::CommentMethods#tables_with_comments: 
        :path: ./lib/pg_power/schema_dumper/comment_methods.rb:5
        :score: 11.1973211081937
        :operators: 
          :+: 1.2
          :dump_comments: 1.3
          :each: 1.2
          :tables_without_comments: 1.2
          :sort: 2.6
          :assignment: 3.7
          :branch: 1.2
          :get_non_public_schema_table_names: 1.6
          :tables: 1.4
      PgPower::SchemaDumper::CommentMethods#none: 
        :path: 
        :score: 1.1
        :operators: 
          :private: 1.1
      PgPower::SchemaDumper::CommentMethods#dump_comments: 
        :path: ./lib/pg_power/schema_dumper/comment_methods.rb:18
        :score: 16.3431943022165
        :operators: 
          :gsub: 1.6
          :lit_fixnum: 0.5
          :empty?: 1.2
          :comments: 1.4
          :puts: 2.8
          :join: 1.6
          :map: 1.4
          :assignment: 7.50000000000001
          :[]: 3.4
          :branch: 4.2
    :path: ./lib/pg_power/schema_dumper/comment_methods.rb
    :highest_score: 16.3431943022165
    :total_score: 28.6405154104102
    :name: PgPower::SchemaDumper::CommentMethods
  - :average_score: 5.75003491051152
    :methods: 
      PgPower::ConnectionAdapters::Table::ForeignerMethods#references_with_foreign_keys: 
        :path: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb:40
        :score: 14.3530484566868
        :operators: 
          :p: 1.3
          :extract_options!: 1.2
          :<<: 1.4
          :dup: 1.6
          :references_without_foreign_keys: 1.2
          :send: 4.5
          :assignment: 2.4
          :delete: 1.2
          :caller: 1.7
          :branch: 1.2
      PgPower::ConnectionAdapters::Table::ForeignerMethods#foreign_key: 
        :path: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb:16
        :score: 1.69705627484772
        :operators: 
          :add_foreign_key: 1.2
          :assignment: 1.2
      PgPower::ConnectionAdapters::Table::ForeignerMethods#remove_foreign_key: 
        :path: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb:35
        :score: 1.2
        :operators: 
          :remove_foreign_key: 1.2
    :path: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb
    :highest_score: 14.3530484566868
    :total_score: 17.2501047315346
    :name: PgPower::ConnectionAdapters::Table::ForeignerMethods
  - :average_score: 13.7963763358355
    :methods: 
      CreatePets#change: 
        :path: ./spec/dummy/db/migrate/20120105112744_create_pets.rb:2
        :score: 13.7963763358355
        :operators: 
          :set_table_comment: 1.1
          :create_table: 1.1
          :string: 2.6
          :boolean: 1.3
          :assignment: 1.2
          :add_index: 1.1
          :integer: 6.50000000000001
          :branch: 1.1
    :path: ./spec/dummy/db/migrate/20120105112744_create_pets.rb
    :highest_score: 13.7963763358355
    :total_score: 13.7963763358355
    :name: CreatePets
  - :average_score: 13.5977939387241
    :methods: 
      CreateDemographyCitizens#change: 
        :path: ./spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb:2
        :score: 13.5977939387241
        :operators: 
          :text: 1.3
          :set_table_comment: 1.1
          :set_column_comment: 1.1
          :create_table: 1.1
          :set_column_comments: 1.1
          :string: 2.6
          :date: 1.3
          :timestamps: 1.3
          :assignment: 1.2
          :integer: 2.6
          :branch: 1.1
    :path: ./spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb
    :highest_score: 13.5977939387241
    :total_score: 13.5977939387241
    :name: CreateDemographyCitizens
  - :average_score: 13.3454111963626
    :methods: 
      PgPower::ConnectionAdapters::Table#none: 
        :path: 
        :score: 13.3454111963626
        :operators: 
          :include: 4.4
          :alias_method_chain: 1.2
          :included: 1.1
          :autoload: 2.2
          :branch: 1.1
          :extend: 4.4
    :path: ""
    :highest_score: 13.3454111963626
    :total_score: 13.3454111963626
    :name: PgPower::ConnectionAdapters::Table
  - :average_score: 7.1713205426255
    :methods: 
      create_table#breeds: 
        :path: ./spec/dummy/db/schema.rb:23
        :score: 5.2392747589719
        :operators: 
          :datetime: 2.6
          :create_table: 1.2
          :string: 1.3
          :assignment: 1.2
      create_table#users: 
        :path: ./spec/dummy/db/schema.rb:53
        :score: 7.79294552784762
        :operators: 
          :datetime: 2.6
          :create_table: 1.2
          :string: 3.90000000000001
          :assignment: 1.2
      create_table#demography.cities: 
        :path: ./spec/dummy/db/schema.rb:60
        :score: 3.98497176903426
        :operators: 
          :create_table: 1.2
          :assignment: 1.2
          :integer: 2.6
      create_table#owners: 
        :path: ./spec/dummy/db/schema.rb:29
        :score: 5.2392747589719
        :operators: 
          :datetime: 2.6
          :create_table: 1.2
          :string: 1.3
          :assignment: 1.2
      create_table#demography.population_statistics: 
        :path: ./spec/dummy/db/schema.rb:88
        :score: 3.98497176903426
        :operators: 
          :create_table: 1.2
          :assignment: 1.2
          :integer: 2.6
      create_table#demography.citizens: 
        :path: ./spec/dummy/db/schema.rb:74
        :score: 12.9556937290135
        :operators: 
          :text: 1.3
          :datetime: 2.6
          :create_table: 1.2
          :string: 2.6
          :date: 1.3
          :boolean: 1.3
          :assignment: 1.2
          :integer: 2.6
      create_table#pets: 
        :path: ./spec/dummy/db/schema.rb:40
        :score: 11.6619037896906
        :operators: 
          :create_table: 1.2
          :string: 2.6
          :boolean: 1.3
          :assignment: 1.2
          :integer: 6.50000000000001
      create_table#demography.countries: 
        :path: ./spec/dummy/db/schema.rb:83
        :score: 6.51152823843989
        :operators: 
          :datetime: 2.6
          :create_table: 1.2
          :string: 2.6
          :assignment: 1.2
    :path: ./spec/dummy/db/schema.rb
    :highest_score: 12.9556937290135
    :total_score: 57.370564341004
    :name: create_table
  - :average_score: 12.1
    :methods: 
      PgPower::Migration::CommandRecorder#none: 
        :path: 
        :score: 12.1
        :operators: 
          :include: 6.60000000000001
          :autoload: 3.3
          :extend: 2.2
    :path: ""
    :highest_score: 12.1
    :total_score: 12.1
    :name: PgPower::Migration::CommandRecorder
  - :average_score: 4.67728427295876
    :methods: 
      PgPower::Migration::CommandRecorder::ForeignerMethods#invert_add_foreign_key: 
        :path: ./lib/pg_power/migration/command_recorder/foreigner_methods.rb:15
        :score: 11.6318528188763
        :operators: 
          :assignment: 10.1
          :[]: 5.2
          :branch: 2.5
      PgPower::Migration::CommandRecorder::ForeignerMethods#remove_foreign_key: 
        :path: ./lib/pg_power/migration/command_recorder/foreigner_methods.rb:10
        :score: 1.2
        :operators: 
          :record: 1.2
      PgPower::Migration::CommandRecorder::ForeignerMethods#add_foreign_key: 
        :path: ./lib/pg_power/migration/command_recorder/foreigner_methods.rb:5
        :score: 1.2
        :operators: 
          :record: 1.2
    :path: ./lib/pg_power/migration/command_recorder/foreigner_methods.rb
    :highest_score: 11.6318528188763
    :total_score: 14.0318528188763
    :name: PgPower::Migration::CommandRecorder::ForeignerMethods
  - :average_score: 4.52863317135757
    :methods: 
      PgPower::ConnectionAdapters::PostgreSQLAdapter::CommentMethods#remove_table_comment: 
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:36
        :score: 2.68328157299975
        :operators: 
          :quote_table_name: 1.2
          :execute: 1.2
          :assignment: 1.2
      PgPower::ConnectionAdapters::PostgreSQLAdapter::CommentMethods#set_column_comments: 
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:28
        :score: 4.78539444560216
        :operators: 
          :set_column_comment: 1.3
          :assignment: 3.9
          :each_pair: 1.2
          :branch: 1.2
      PgPower::ConnectionAdapters::PostgreSQLAdapter::CommentMethods#comments: 
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:62
        :score: 10.8963296572745
        :operators: 
          :lit_fixnum: 0.4
          :select_all: 1.2
          :map: 1.2
          :split: 1.4
          :assignment: 7.3
          :[]: 2.6
          :branch: 1.2
          :reverse: 1.2
      PgPower::ConnectionAdapters::PostgreSQLAdapter::CommentMethods#remove_column_comments: 
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:50
        :score: 3.06267856622271
        :operators: 
          :each: 1.2
          :assignment: 1.3
          :remove_column_comment: 1.3
          :branch: 1.2
      PgPower::ConnectionAdapters::PostgreSQLAdapter::CommentMethods#set_table_comment: 
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:11
        :score: 2.68328157299975
        :operators: 
          :quote_table_name: 1.2
          :execute: 1.2
          :assignment: 1.2
      PgPower::ConnectionAdapters::PostgreSQLAdapter::CommentMethods#remove_column_comment: 
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:44
        :score: 3.79473319220206
        :operators: 
          :quote_table_name: 1.2
          :execute: 1.2
          :assignment: 1.2
          :quote_column_name: 1.2
      PgPower::ConnectionAdapters::PostgreSQLAdapter::CommentMethods#set_column_comment: 
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:20
        :score: 3.79473319220206
        :operators: 
          :quote_table_name: 1.2
          :execute: 1.2
          :assignment: 1.2
          :quote_column_name: 1.2
    :path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
    :highest_score: 10.8963296572745
    :total_score: 31.700432199503
    :name: PgPower::ConnectionAdapters::PostgreSQLAdapter::CommentMethods
  - :average_score: 10.8231233939192
    :methods: 
      CreateUsers#change: 
        :path: ./spec/dummy/db/migrate/20120106163544_create_users.rb:2
        :score: 10.8231233939192
        :operators: 
          :set_table_comment: 1.1
          :set_column_comment: 1.1
          :create_table: 1.1
          :set_column_comments: 1.1
          :string: 3.90000000000001
          :timestamps: 1.3
          :assignment: 1.2
          :add_index: 1.1
          :branch: 1.1
    :path: ./spec/dummy/db/migrate/20120106163544_create_users.rb
    :highest_score: 10.8231233939192
    :total_score: 10.8231233939192
    :name: CreateUsers
  - :average_score: 10.2235023353057
    :methods: 
      describe::describe::itshould raise a PgPower::IndexExistsError when the index already exists: 
        :path: ./spec/foreign_keys_spec.rb:27
        :score: 10.2235023353057
        :operators: 
          :raise_exception: 1.4
          :connection: 1.6
          :it: 1.2
          :should: 1.2
          :add_foreign_key: 1.6
          :assignment: 1.6
          :add_index: 1.6
          :expect: 1.4
          :branch: 1.4
    :path: ./spec/foreign_keys_spec.rb
    :highest_score: 10.2235023353057
    :total_score: 10.2235023353057
    :name: describe::describe::itshould raise a PgPower::IndexExistsError when the index already exists
  - :average_score: 2.33070230824418
    :methods: 
      PgPower::Migration::CommandRecorder::CommentMethods#invert_set_column_comment: 
        :path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:41
        :score: 3.65
        :operators: 
          :lit_fixnum: 0.35
          :assignment: 2.4
          :[]: 2.4
      PgPower::Migration::CommandRecorder::CommentMethods#remove_column_comments: 
        :path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:30
        :score: 1.2
        :operators: 
          :record: 1.2
      PgPower::Migration::CommandRecorder::CommentMethods#remove_table_comment: 
        :path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:10
        :score: 1.2
        :operators: 
          :record: 1.2
      PgPower::Migration::CommandRecorder::CommentMethods#set_column_comments: 
        :path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:20
        :score: 1.2
        :operators: 
          :record: 1.2
      PgPower::Migration::CommandRecorder::CommentMethods#set_table_comment: 
        :path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:5
        :score: 1.2
        :operators: 
          :record: 1.2
      PgPower::Migration::CommandRecorder::CommentMethods#invert_set_table_comment: 
        :path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:35
        :score: 1.69705627484772
        :operators: 
          :first: 1.2
          :assignment: 1.2
      PgPower::Migration::CommandRecorder::CommentMethods#invert_set_column_comments: 
        :path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:48
        :score: 8.42926449934988
        :operators: 
          :+: 1.2
          :lit_fixnum: 0.45
          :collect: 1.4
          :assignment: 5.7
          :[]: 3.0
          :branch: 1.4
      PgPower::Migration::CommandRecorder::CommentMethods#set_column_comment: 
        :path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:15
        :score: 1.2
        :operators: 
          :record: 1.2
      PgPower::Migration::CommandRecorder::CommentMethods#remove_column_comment: 
        :path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:25
        :score: 1.2
        :operators: 
          :record: 1.2
    :path: ./lib/pg_power/migration/command_recorder/comment_methods.rb
    :highest_score: 8.42926449934988
    :total_score: 20.9763207741976
    :name: PgPower::Migration::CommandRecorder::CommentMethods
  - :average_score: 8.40951841665147
    :methods: 
      Dummy::Application#none: 
        :path: 
        :score: 8.40951841665147
        :operators: 
          :assets: 2.4
          :assignment: 3.60000000000001
          :config: 5.20000000000001
    :path: ""
    :highest_score: 8.40951841665147
    :total_score: 8.40951841665147
    :name: Dummy::Application
  - :average_score: 8.40000000000001
    :methods: 
      PgPower#none: 
        :path: 
        :score: 8.40000000000001
        :operators: 
          :autoload: 6.0
          :extend: 2.4
    :path: ""
    :highest_score: 8.40000000000001
    :total_score: 8.40000000000001
    :name: PgPower
  - :average_score: 8.08455317256311
    :methods: 
      CreateOwnersAndBreeds#change: 
        :path: ./spec/dummy/db/migrate/20120201163544_create_owners_and_breeds.rb:2
        :score: 8.08455317256311
        :operators: 
          :create_table: 2.2
          :string: 2.6
          :timestamps: 2.6
          :assignment: 2.4
          :branch: 2.2
    :path: ./spec/dummy/db/migrate/20120201163544_create_owners_and_breeds.rb
    :highest_score: 8.08455317256311
    :total_score: 8.08455317256311
    :name: CreateOwnersAndBreeds
  - :average_score: 6.14912376703682
    :methods: 
      PgPower::Explorer#connection: 
        :path: ./spec/support/explorer.rb:84
        :score: 1.76918060129542
        :operators: 
          :connection: 1.3
          :branch: 1.2
      PgPower::Explorer#index_exists?: 
        :path: ./spec/support/explorer.rb:57
        :score: 4.17612260356423
        :operators: 
          :connection: 1.4
          :assignment: 1.2
          :to_s: 1.4
          :index_exists?: 1.2
      PgPower::Explorer#get_column_comment: 
        :path: ./spec/support/explorer.rb:22
        :score: 8.04984471899926
        :operators: 
          :connection: 1.8
          :to_schema_and_table: 1.2
          :first: 1.2
          :flatten: 1.4
          :query: 1.6
          :assignment: 3.60000000000001
      PgPower::Explorer#none: 
        :path: 
        :score: 4.40000000000001
        :operators: 
          :private: 2.2
          :extend: 2.2
      PgPower::Explorer#get_table_comment: 
        :path: ./spec/support/explorer.rb:6
        :score: 8.04984471899926
        :operators: 
          :connection: 1.8
          :to_schema_and_table: 1.2
          :first: 1.2
          :flatten: 1.4
          :query: 1.6
          :assignment: 3.60000000000001
      PgPower::Explorer#has_foreign_key?: 
        :path: ./spec/support/explorer.rb:40
        :score: 8.04984471899926
        :operators: 
          :connection: 1.8
          :to_schema_and_table: 1.2
          :first: 1.2
          :flatten: 1.4
          :query: 1.6
          :assignment: 3.60000000000001
      PgPower::Explorer#table_exists?: 
        :path: ./spec/support/explorer.rb:61
        :score: 8.04984471899926
        :operators: 
          :connection: 1.8
          :to_schema_and_table: 1.2
          :first: 1.2
          :flatten: 1.4
          :query: 1.6
          :assignment: 3.60000000000001
      PgPower::Explorer#to_schema_and_table: 
        :path: ./spec/support/explorer.rb:77
        :score: 6.64830805543788
        :operators: 
          :lit_fixnum: 0.400000000000001
          :split: 1.4
          :assignment: 4.80000000000001
          :to_s: 1.6
          :reverse: 1.2
    :path: ./spec/support/explorer.rb
    :highest_score: 8.04984471899926
    :total_score: 49.1929901362946
    :name: PgPower::Explorer
  - :average_score: 7.7
    :methods: 
      PgPower::ConnectionAdapters#none: 
        :path: 
        :score: 7.7
        :operators: 
          :autoload: 5.5
          :extend: 2.2
    :path: ""
    :highest_score: 7.7
    :total_score: 7.7
    :name: PgPower::ConnectionAdapters
  - :average_score: 7.63216876123688
    :methods: 
      describe::before#all: 
        :path: ./spec/active_record/schema_dumper_spec.rb:6
        :score: 7.63216876123688
        :operators: 
          :connection: 1.6
          :string: 1.4
          :dump: 1.4
          :assignment: 2.8
          :new: 1.4
          :before: 1.3
    :path: ./spec/active_record/schema_dumper_spec.rb
    :highest_score: 7.63216876123688
    :total_score: 7.63216876123688
    :name: describe::before
  - :average_score: 3.57500000000001
    :methods: 
      describe::context::it#dumps table comments: 
        :path: ./spec/active_record/schema_dumper_spec.rb:65
        :score: 2.8
        :operators: 
          :it: 1.4
          :should: 1.4
      describe::context::it#dumps indexes: 
        :path: ./spec/active_record/schema_dumper_spec.rb:43
        :score: 7.40000000000001
        :operators: 
          :it: 1.4
          :should: 4.50000000000001
          :should_not: 1.5
      describe::context::it#dumps column comments: 
        :path: ./spec/active_record/schema_dumper_spec.rb:73
        :score: 2.8
        :operators: 
          :it: 1.4
          :should: 1.4
      describe::context::it#dumps indexes from non-public schemas: 
        :path: ./spec/active_record/schema_dumper_spec.rb:48
        :score: 2.8
        :operators: 
          :it: 1.4
          :should: 1.4
      describe::context::it#dumps schemas: 
        :path: ./spec/active_record/schema_dumper_spec.rb:17
        :score: 5.90000000000001
        :operators: 
          :it: 1.4
          :should: 4.50000000000001
      describe::context::it#dumps tables from non-public schemas: 
        :path: ./spec/active_record/schema_dumper_spec.rb:30
        :score: 2.8
        :operators: 
          :it: 1.4
          :should: 1.4
      describe::context::it#dumps table comments from non-public schemas: 
        :path: ./spec/active_record/schema_dumper_spec.rb:69
        :score: 2.8
        :operators: 
          :it: 1.4
          :should: 1.4
      describe::context::it#dumps tables: 
        :path: ./spec/active_record/schema_dumper_spec.rb:26
        :score: 2.8
        :operators: 
          :it: 1.4
          :should: 1.4
      describe::context::it#dumps schemas in alphabetical order: 
        :path: ./spec/active_record/schema_dumper_spec.rb:20
        :score: 2.8
        :operators: 
          :it: 1.4
          :should: 1.4
      describe::context::it#dumps foreign keys: 
        :path: ./spec/active_record/schema_dumper_spec.rb:54
        :score: 2.8
        :operators: 
          :it: 1.4
          :should: 1.4
      describe::context::it#dumps column comments from non-public schemas: 
        :path: ./spec/active_record/schema_dumper_spec.rb:77
        :score: 2.8
        :operators: 
          :it: 1.4
          :should: 1.4
      describe::context::it#dumps foreign keys from non-public schemas: 
        :path: ./spec/active_record/schema_dumper_spec.rb:59
        :score: 4.40000000000001
        :operators: 
          :it: 1.4
          :should: 3.0
    :path: ./spec/active_record/schema_dumper_spec.rb
    :highest_score: 7.40000000000001
    :total_score: 42.9000000000001
    :name: describe::context::it
  - :average_score: 7.38173421358424
    :methods: 
      CreateDemographyCountries#change: 
        :path: ./spec/dummy/db/migrate/20120106163810_create_demography_countries.rb:2
        :score: 7.38173421358424
        :operators: 
          :set_table_comment: 1.1
          :create_table: 1.1
          :set_column_comments: 1.1
          :string: 2.6
          :timestamps: 1.3
          :assignment: 1.2
          :branch: 1.1
    :path: ./spec/dummy/db/migrate/20120106163810_create_demography_countries.rb
    :highest_score: 7.38173421358424
    :total_score: 7.38173421358424
    :name: CreateDemographyCountries
  - :average_score: 3.84151955830229
    :methods: 
      PgPower::SchemaDumper::SchemaMethods#schema: 
        :path: ./lib/pg_power/schema_dumper/schema_methods.rb:25
        :score: 1.2
        :operators: 
          :<<: 1.2
      PgPower::SchemaDumper::SchemaMethods#tables_with_schemas: 
        :path: ./lib/pg_power/schema_dumper/schema_methods.rb:7
        :score: 3.6
        :operators: 
          :schemas: 1.2
          :tables_without_schemas: 1.2
          :non_public_schema_tables: 1.2
      PgPower::SchemaDumper::SchemaMethods#none: 
        :path: 
        :score: 4.40000000000001
        :operators: 
          :private: 4.40000000000001
      PgPower::SchemaDumper::SchemaMethods#non_public_schema_tables: 
        :path: ./lib/pg_power/schema_dumper/schema_methods.rb:31
        :score: 4.28252262107278
        :operators: 
          :table: 1.3
          :each: 1.2
          :assignment: 1.3
          :get_non_public_schema_table_names: 1.4
          :branch: 1.2
      PgPower::SchemaDumper::SchemaMethods#get_non_public_schema_table_names: 
        :path: ./lib/pg_power/schema_dumper/schema_methods.rb:41
        :score: 2.68328157299975
        :operators: 
          :flatten: 1.2
          :query: 1.2
          :assignment: 1.2
      PgPower::SchemaDumper::SchemaMethods#schemas: 
        :path: ./lib/pg_power/schema_dumper/schema_methods.rb:14
        :score: 6.88331315574122
        :operators: 
          :schemas: 1.4
          :<<: 1.2
          :each: 1.2
          :-: 1.2
          :schema: 1.3
          :assignment: 2.5
          :branch: 1.2
    :path: ./lib/pg_power/schema_dumper/schema_methods.rb
    :highest_score: 6.88331315574122
    :total_score: 23.0491173498138
    :name: PgPower::SchemaDumper::SchemaMethods
  - :average_score: 6.60000000000001
    :methods: 
      AddForeignKeys#change: 
        :path: ./spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb:2
        :score: 6.60000000000001
        :operators: 
          :add_foreign_key: 6.60000000000001
    :path: ./spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb
    :highest_score: 6.60000000000001
    :total_score: 6.60000000000001
    :name: AddForeignKeys
  - :average_score: 3.49482296522603
    :methods: 
      PgPower::ConnectionAdapters::PostgreSQLAdapter::IndexMethods#index_name_for_remove: 
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb:32
        :score: 5.78964593045206
        :operators: 
          :include?: 1.2
          :first: 1.4
          :split: 1.6
          :assignment: 3.8
          :branch: 1.2
      PgPower::ConnectionAdapters::PostgreSQLAdapter::IndexMethods#index_name: 
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb:18
        :score: 1.2
        :operators: 
          :gsub: 1.2
    :path: ./lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
    :highest_score: 5.78964593045206
    :total_score: 6.98964593045206
    :name: PgPower::ConnectionAdapters::PostgreSQLAdapter::IndexMethods
  - :average_score: 5.0041942012698
    :methods: 
      PgPower::ConnectionAdapters::AbstractAdapter::SchemaMethods#drop_table_with_schema_option: 
        :path: ./lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb:13
        :score: 4.57055795281058
        :operators: 
          :drop_table_without_schema_option: 1.2
          :assignment: 3.7
          :delete: 1.2
          :branch: 1.2
      PgPower::ConnectionAdapters::AbstractAdapter::SchemaMethods#create_table_with_schema_option: 
        :path: ./lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb:6
        :score: 5.43783044972901
        :operators: 
          :create_table_without_schema_option: 1.2
          :block_pass: 1.4
          :assignment: 3.7
          :delete: 1.2
          :branch: 1.2
    :path: ./lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb
    :highest_score: 5.43783044972901
    :total_score: 10.0083884025396
    :name: PgPower::ConnectionAdapters::AbstractAdapter::SchemaMethods
  - :average_score: 5.40000000000001
    :methods: 
      describe::describe::context::it#removes table in passed schema: 
        :path: ./spec/schema_methods_spec.rb:17
        :score: 5.40000000000001
        :operators: 
          :it: 1.2
          :should: 1.4
          :==: 1.2
          :table_exists?: 1.6
      describe::describe::context::it#creates table in passed schema: 
        :path: ./spec/schema_methods_spec.rb:8
        :score: 5.40000000000001
        :operators: 
          :it: 1.2
          :should: 1.4
          :==: 1.2
          :table_exists?: 1.6
    :path: ./spec/schema_methods_spec.rb
    :highest_score: 5.40000000000001
    :total_score: 10.8
    :name: describe::describe::context::it
  - :average_score: 5.06853035898968
    :methods: 
      CreateCitiesTable#change: 
        :path: ./spec/dummy/db/migrate/20120209094937_create_cities_table.rb:2
        :score: 5.06853035898968
        :operators: 
          :create_table: 1.1
          :add_foreign_key: 1.1
          :assignment: 1.2
          :integer: 2.6
          :branch: 1.1
    :path: ./spec/dummy/db/migrate/20120209094937_create_cities_table.rb
    :highest_score: 5.06853035898968
    :total_score: 5.06853035898968
    :name: CreateCitiesTable
  - :average_score: 4.20000000000001
    :methods: 
      RemoveForeignKeys#up: 
        :path: ./spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb:2
        :score: 4.80000000000001
        :operators: 
          :remove_foreign_key: 4.80000000000001
      RemoveForeignKeys#down: 
        :path: ./spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb:10
        :score: 3.60000000000001
        :operators: 
          :add_foreign_key: 3.60000000000001
    :path: ./spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb
    :highest_score: 4.80000000000001
    :total_score: 8.40000000000001
    :name: RemoveForeignKeys
  - :average_score: 3.07379858971972
    :methods: 
      PgPower::Tools#drop_schema: 
        :path: ./lib/pg_power/tools.rb:18
        :score: 2.86356421265527
        :operators: 
          :connection: 1.4
          :execute: 1.2
          :assignment: 1.2
      PgPower::Tools#create_schema: 
        :path: ./lib/pg_power/tools.rb:12
        :score: 2.86356421265527
        :operators: 
          :connection: 1.4
          :execute: 1.2
          :assignment: 1.2
      PgPower::Tools#none: 
        :path: 
        :score: 2.2
        :operators: 
          :extend: 2.2
      PgPower::Tools#schemas: 
        :path: ./lib/pg_power/tools.rb:24
        :score: 4.36806593356832
        :operators: 
          :connection: 1.6
          :flatten: 1.2
          :query: 1.4
          :assignment: 1.2
    :path: ./lib/pg_power/tools.rb
    :highest_score: 4.36806593356832
    :total_score: 12.2951943588789
    :name: PgPower::Tools
  - :average_score: 4.04227658628155
    :methods: 
      DemographyPopulationStatisctics#change: 
        :path: ./spec/dummy/db/migrate/20120301153650_demography_population_statisctics.rb:2
        :score: 4.04227658628155
        :operators: 
          :create_table: 1.1
          :assignment: 1.2
          :integer: 2.6
          :branch: 1.1
    :path: ./spec/dummy/db/migrate/20120301153650_demography_population_statisctics.rb
    :highest_score: 4.04227658628155
    :total_score: 4.04227658628155
    :name: DemographyPopulationStatisctics
  - :average_score: 3.30000000000001
    :methods: 
      CreateDemographySchema#change: 
        :path: ./spec/dummy/db/migrate/20120106163711_create_demography_schema.rb:2
        :score: 3.30000000000001
        :operators: 
          :create_schema: 3.30000000000001
    :path: ./spec/dummy/db/migrate/20120106163711_create_demography_schema.rb
    :highest_score: 3.30000000000001
    :total_score: 3.30000000000001
    :name: CreateDemographySchema
  - :average_score: 3.3
    :methods: 
      PgPower::Migration#none: 
        :path: 
        :score: 3.3
        :operators: 
          :autoload: 1.1
          :extend: 2.2
    :path: ""
    :highest_score: 3.3
    :total_score: 3.3
    :name: PgPower::Migration
  - :average_score: 2.81780056072108
    :methods: 
      CreateDemographyNationalities#change: 
        :path: ./spec/dummy/db/migrate/20120301152819_create_demography_nationalities.rb:2
        :score: 2.81780056072108
        :operators: 
          :create_table: 1.1
          :string: 1.2
          :assignment: 1.2
          :branch: 1.1
    :path: ./spec/dummy/db/migrate/20120301152819_create_demography_nationalities.rb
    :highest_score: 2.81780056072108
    :total_score: 2.81780056072108
    :name: CreateDemographyNationalities
  - :average_score: 2.4
    :methods: 
      describe::describe::context#with :schema option: 
        :path: ./spec/schema_methods_spec.rb:18
        :score: 2.4
        :operators: 
          :context: 2.4
    :path: ./spec/schema_methods_spec.rb
    :highest_score: 2.4
    :total_score: 2.4
    :name: describe::describe::context
  - :average_score: 1.8
    :methods: 
      RemoveCommentsOnCountriesTable#down: 
        :path: ./spec/dummy/db/migrate/20120207103858_remove_comments_on_countries_table.rb:7
        :score: 1.2
        :operators: 
          :set_table_comment: 1.2
      RemoveCommentsOnCountriesTable#up: 
        :path: ./spec/dummy/db/migrate/20120207103858_remove_comments_on_countries_table.rb:2
        :score: 2.4
        :operators: 
          :remove_table_comment: 1.2
          :remove_column_comment: 1.2
    :path: ./spec/dummy/db/migrate/20120207103858_remove_comments_on_countries_table.rb
    :highest_score: 2.4
    :total_score: 3.60000000000001
    :name: RemoveCommentsOnCountriesTable
  - :average_score: 2.2
    :methods: 
      AddDemographyCitizensActiveColumn#change: 
        :path: ./spec/dummy/db/migrate/20120224204546_add_demography_citizens_active_column.rb:2
        :score: 2.2
        :operators: 
          :add_column: 1.1
          :add_index: 1.1
    :path: ./spec/dummy/db/migrate/20120224204546_add_demography_citizens_active_column.rb
    :highest_score: 2.2
    :total_score: 2.2
    :name: AddDemographyCitizensActiveColumn
  - :average_score: 2.0
    :methods: 
      PgPower::ConnectionAdapters::ForeignKeyDefinition#none: 
        :path: 
        :score: 2.0
        :operators: 
          :new: 2.0
    :path: ""
    :highest_score: 2.0
    :total_score: 2.0
    :name: PgPower::ConnectionAdapters::ForeignKeyDefinition
  - :average_score: 2.0
    :methods: 
      PgPower::ConnectionAdapters::IndexDefinition#none: 
        :path: 
        :score: 2.0
        :operators: 
          :new: 2.0
    :path: ""
    :highest_score: 2.0
    :total_score: 2.0
    :name: PgPower::ConnectionAdapters::IndexDefinition
  - :average_score: 1.3
    :methods: 
      describe::context#Schemas: 
        :path: ./spec/active_record/schema_dumper_spec.rb:21
        :score: 1.3
        :operators: 
          :context: 1.3
      describe::context#Comments: 
        :path: ./spec/active_record/schema_dumper_spec.rb:78
        :score: 1.3
        :operators: 
          :context: 1.3
      describe::context#Indexes: 
        :path: ./spec/active_record/schema_dumper_spec.rb:49
        :score: 1.3
        :operators: 
          :context: 1.3
      describe::context#Tables: 
        :path: ./spec/active_record/schema_dumper_spec.rb:31
        :score: 1.3
        :operators: 
          :context: 1.3
      describe::context#Foreign keys: 
        :path: ./spec/active_record/schema_dumper_spec.rb:60
        :score: 1.3
        :operators: 
          :context: 1.3
    :path: ./spec/active_record/schema_dumper_spec.rb
    :highest_score: 1.3
    :total_score: 6.50000000000001
    :name: describe::context
  - :average_score: 1.18333333333334
    :methods: 
      describe::describe##add_index: 
        :path: ./spec/indexes_spec.rb:12
        :score: 1.2
        :operators: 
          :describe: 1.2
      describe::describe##remove_column_comment: 
        :path: ./spec/comment_methods_spec.rb:58
        :score: 1.2
        :operators: 
          :describe: 1.2
      describe::describe##set_column_comments: 
        :path: ./spec/comment_methods_spec.rb:39
        :score: 1.2
        :operators: 
          :describe: 1.2
      describe::describe##set_column_comment: 
        :path: ./spec/comment_methods_spec.rb:27
        :score: 1.2
        :operators: 
          :describe: 1.2
      describe::describe##remove_foreign_key: 
        :path: ./spec/foreign_keys_spec.rb:64
        :score: 1.1
        :operators: 
          :describe: 1.1
      describe::describe##remove_column_comments: 
        :path: ./spec/comment_methods_spec.rb:65
        :score: 1.2
        :operators: 
          :describe: 1.2
      describe::describe##create_table: 
        :path: ./spec/schema_methods_spec.rb:10
        :score: 1.2
        :operators: 
          :describe: 1.2
      describe::describe##index_exists: 
        :path: ./spec/indexes_spec.rb:77
        :score: 1.2
        :operators: 
          :describe: 1.2
      describe::describe##set_table_comment: 
        :path: ./spec/comment_methods_spec.rb:15
        :score: 1.2
        :operators: 
          :describe: 1.2
      describe::describe##drop_table: 
        :path: ./spec/schema_methods_spec.rb:19
        :score: 1.2
        :operators: 
          :describe: 1.2
      describe::describe##remove_table_comment: 
        :path: ./spec/comment_methods_spec.rb:51
        :score: 1.2
        :operators: 
          :describe: 1.2
      describe::describe##add_foreign_key: 
        :path: ./spec/foreign_keys_spec.rb:28
        :score: 1.1
        :operators: 
          :describe: 1.1
    :path: ./spec/schema_methods_spec.rb
    :highest_score: 1.2
    :total_score: 14.2
    :name: describe::describe
  - :average_score: 1.2
    :methods: 
      RemoveSomeCommentsOnCitizens#down: 
        :path: ./spec/dummy/db/migrate/20120208114020_remove_some_comments_on_citizens.rb:6
        :score: 1.2
        :operators: 
          :set_column_comments: 1.2
      RemoveSomeCommentsOnCitizens#up: 
        :path: ./spec/dummy/db/migrate/20120208114020_remove_some_comments_on_citizens.rb:2
        :score: 1.2
        :operators: 
          :remove_column_comments: 1.2
    :path: ./spec/dummy/db/migrate/20120208114020_remove_some_comments_on_citizens.rb
    :highest_score: 1.2
    :total_score: 2.4
    :name: RemoveSomeCommentsOnCitizens
  - :average_score: 1.2
    :methods: 
      RemoveCommentOnPetsTable#down: 
        :path: ./spec/dummy/db/migrate/20120207112916_remove_comment_on_pets_table.rb:6
        :score: 1.2
        :operators: 
          :set_table_comment: 1.2
      RemoveCommentOnPetsTable#up: 
        :path: ./spec/dummy/db/migrate/20120207112916_remove_comment_on_pets_table.rb:2
        :score: 1.2
        :operators: 
          :remove_table_comment: 1.2
    :path: ./spec/dummy/db/migrate/20120207112916_remove_comment_on_pets_table.rb
    :highest_score: 1.2
    :total_score: 2.4
    :name: RemoveCommentOnPetsTable
  - :average_score: 1.1
    :methods: 
      describe#Comment methods: 
        :path: ./spec/comment_methods_spec.rb:67
        :score: 1.1
        :operators: 
          :describe: 1.1
      describe#Foreign keys: 
        :path: ./spec/foreign_keys_spec.rb:65
        :score: 1.0
        :operators: 
          :describe: 1.0
      describe#.dump: 
        :path: ./spec/active_record/schema_dumper_spec.rb:80
        :score: 1.2
        :operators: 
          :describe: 1.2
      describe#Indexes: 
        :path: ./spec/indexes_spec.rb:78
        :score: 1.1
        :operators: 
          :describe: 1.1
      describe#Schema methods: 
        :path: ./spec/schema_methods_spec.rb:20
        :score: 1.1
        :operators: 
          :describe: 1.1
    :path: ./spec/indexes_spec.rb
    :highest_score: 1.2
    :total_score: 5.50000000000001
    :name: describe
  - :average_score: 1.2
    :methods: 
      PgPower::ConnectionAdapters::Table::CommentMethods#set_column_comments: 
        :path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:37
        :score: 1.2
        :operators: 
          :set_column_comments: 1.2
      PgPower::ConnectionAdapters::Table::CommentMethods#set_table_comment: 
        :path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:9
        :score: 1.2
        :operators: 
          :set_table_comment: 1.2
      PgPower::ConnectionAdapters::Table::CommentMethods#remove_column_comments: 
        :path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:55
        :score: 1.2
        :operators: 
          :remove_column_comments: 1.2
      PgPower::ConnectionAdapters::Table::CommentMethods#remove_column_comment: 
        :path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:46
        :score: 1.2
        :operators: 
          :remove_column_comment: 1.2
      PgPower::ConnectionAdapters::Table::CommentMethods#remove_table_comment: 
        :path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:18
        :score: 1.2
        :operators: 
          :remove_table_comment: 1.2
      PgPower::ConnectionAdapters::Table::CommentMethods#set_column_comment: 
        :path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:27
        :score: 1.2
        :operators: 
          :set_column_comment: 1.2
    :path: ./lib/pg_power/connection_adapters/table/comment_methods.rb
    :highest_score: 1.2
    :total_score: 7.20000000000001
    :name: PgPower::ConnectionAdapters::Table::CommentMethods
  - :average_score: 1.2
    :methods: 
      PgPower::ConnectionAdapters::PostgreSQLAdapter::SchemaMethods#drop_schema: 
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb:12
        :score: 1.2
        :operators: 
          :drop_schema: 1.2
      PgPower::ConnectionAdapters::PostgreSQLAdapter::SchemaMethods#create_schema: 
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb:6
        :score: 1.2
        :operators: 
          :create_schema: 1.2
    :path: ./lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb
    :highest_score: 1.2
    :total_score: 2.4
    :name: PgPower::ConnectionAdapters::PostgreSQLAdapter::SchemaMethods
  - :average_score: 1.2
    :methods: 
      PgPower::Migration::CommandRecorder::SchemaMethods#create_schema: 
        :path: ./lib/pg_power/migration/command_recorder/schema_methods.rb:5
        :score: 1.2
        :operators: 
          :record: 1.2
      PgPower::Migration::CommandRecorder::SchemaMethods#drop_schema: 
        :path: ./lib/pg_power/migration/command_recorder/schema_methods.rb:10
        :score: 1.2
        :operators: 
          :record: 1.2
      PgPower::Migration::CommandRecorder::SchemaMethods#invert_drop_schema: 
        :path: ./lib/pg_power/migration/command_recorder/schema_methods.rb:20
        :score: 1.2
        :operators: 
          :first: 1.2
      PgPower::Migration::CommandRecorder::SchemaMethods#invert_create_schema: 
        :path: ./lib/pg_power/migration/command_recorder/schema_methods.rb:15
        :score: 1.2
        :operators: 
          :first: 1.2
    :path: ./lib/pg_power/migration/command_recorder/schema_methods.rb
    :highest_score: 1.2
    :total_score: 4.8
    :name: PgPower::Migration::CommandRecorder::SchemaMethods
  - :average_score: 1.2
    :methods: 
      PgPower::ConnectionAdapters::AbstractAdapter::ForeignerMethods#add_foreign_key: 
        :path: ./lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb:48
        :score: 1.2
        :operators: 
          :assignment: 1.2
    :path: ./lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb
    :highest_score: 1.2
    :total_score: 1.2
    :name: PgPower::ConnectionAdapters::AbstractAdapter::ForeignerMethods
  - :average_score: 1.1
    :methods: 
      RemoveDemographyNationalities#change: 
        :path: ./spec/dummy/db/migrate/20120301171826_remove_demography_nationalities.rb:2
        :score: 1.1
        :operators: 
          :drop_table: 1.1
    :path: ./spec/dummy/db/migrate/20120301171826_remove_demography_nationalities.rb
    :highest_score: 1.1
    :total_score: 1.1
    :name: RemoveDemographyNationalities
  - :average_score: 1.0
    :methods: 
      ApplicationController#none: 
        :path: 
        :score: 1.0
        :operators: 
          :protect_from_forgery: 1.0
    :path: ""
    :highest_score: 1.0
    :total_score: 1.0
    :name: ApplicationController
  - :average_score: 1.0
    :methods: 
      Demography::Country#none: 
        :path: 
        :score: 1.0
        :operators: 
          :has_many: 1.0
    :path: ""
    :highest_score: 1.0
    :total_score: 1.0
    :name: Demography::Country
  - :average_score: 1.0
    :methods: 
      User#none: 
        :path: 
        :score: 1.0
        :operators: 
          :has_one: 1.0
    :path: ""
    :highest_score: 1.0
    :total_score: 1.0
    :name: User
  - :average_score: 1.0
    :methods: 
      Demography::Citizen#none: 
        :path: 
        :score: 1.0
        :operators: 
          :belongs_to: 1.0
    :path: ""
    :highest_score: 1.0
    :total_score: 1.0
    :name: Demography::Citizen
  :average: 7.60030808366926
