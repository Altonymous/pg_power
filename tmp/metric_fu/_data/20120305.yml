--- 
:flay: 
  :total_score: "685"
  :matches: 
  - :reason: 1) Similar code found in :iter (mass = 75)
    :matches: 
    - :line: "7"
      :name: ./spec/foreign_keys_spec.rb
    - :line: "13"
      :name: ./spec/foreign_keys_spec.rb
    - :line: "47"
      :name: ./spec/foreign_keys_spec.rb
    - :line: "17"
      :name: ./spec/indexes_spec.rb
    - :line: "25"
      :name: ./spec/indexes_spec.rb
  - :reason: 2) Similar code found in :defn (mass = 60)
    :matches: 
    - :line: "22"
      :name: ./spec/support/explorer.rb
    - :line: "40"
      :name: ./spec/support/explorer.rb
  - :reason: 3) Similar code found in :call (mass = 56)
    :matches: 
    - :line: "32"
      :name: ./lib/pg_power/schema_dumper/foreigner_methods.rb
    - :line: "35"
      :name: ./lib/pg_power/schema_dumper/foreigner_methods.rb
    - :line: "38"
      :name: ./lib/pg_power/schema_dumper/foreigner_methods.rb
    - :line: "41"
      :name: ./lib/pg_power/schema_dumper/foreigner_methods.rb
  - :reason: 4) IDENTICAL code found in :call (mass*2 = 56)
    :matches: 
    - :line: "29"
      :name: ./spec/indexes_spec.rb
    - :line: "34"
      :name: ./spec/indexes_spec.rb
  - :reason: 5) Similar code found in :iter (mass = 54)
    :matches: 
    - :line: "33"
      :name: ./spec/comment_methods_spec.rb
    - :line: "38"
      :name: ./spec/comment_methods_spec.rb
  - :reason: 6) Similar code found in :defn (mass = 54)
    :matches: 
    - :line: "6"
      :name: ./spec/support/explorer.rb
    - :line: "61"
      :name: ./spec/support/explorer.rb
  - :reason: 7) Similar code found in :iter (mass = 45)
    :matches: 
    - :line: "19"
      :name: ./spec/foreign_keys_spec.rb
    - :line: "35"
      :name: ./spec/foreign_keys_spec.rb
    - :line: "41"
      :name: ./spec/foreign_keys_spec.rb
  - :reason: 8) Similar code found in :iter (mass = 36)
    :matches: 
    - :line: "21"
      :name: ./spec/comment_methods_spec.rb
    - :line: "26"
      :name: ./spec/comment_methods_spec.rb
  - :reason: 9) Similar code found in :iter (mass = 34)
    :matches: 
    - :line: "9"
      :name: ./spec/comment_methods_spec.rb
    - :line: "14"
      :name: ./spec/comment_methods_spec.rb
  - :reason: 10) Similar code found in :iter (mass = 34)
    :matches: 
    - :line: "45"
      :name: ./spec/dummy/db/schema.rb
    - :line: "73"
      :name: ./spec/dummy/db/schema.rb
  - :reason: 11) Similar code found in :call (mass = 33)
    :matches: 
    - :line: "89"
      :name: ./spec/dummy/db/schema.rb
    - :line: "91"
      :name: ./spec/dummy/db/schema.rb
    - :line: "93"
      :name: ./spec/dummy/db/schema.rb
  - :reason: 12) Similar code found in :defn (mass = 32)
    :matches: 
    - :line: "12"
      :name: ./lib/pg_power/tools.rb
    - :line: "18"
      :name: ./lib/pg_power/tools.rb
  - :reason: 13) Similar code found in :masgn (mass = 28)
    :matches: 
    - :line: "17"
      :name: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
    - :line: "78"
      :name: ./spec/support/explorer.rb
  - :reason: 14) Similar code found in :iter (mass = 26)
    :matches: 
    - :line: "46"
      :name: ./spec/comment_methods_spec.rb
    - :line: "50"
      :name: ./spec/comment_methods_spec.rb
  - :reason: 15) Similar code found in :iter (mass = 22)
    :matches: 
    - :line: "24"
      :name: ./lib/pg_power/engine.rb
    - :line: "28"
      :name: ./lib/pg_power/engine.rb
  - :reason: 16) Similar code found in :lasgn (mass = 20)
    :matches: 
    - :line: "66"
      :name: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
    - :line: "20"
      :name: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
  - :reason: 17) Similar code found in :defn (mass = 20)
    :matches: 
    - :line: "15"
      :name: ./lib/pg_power/migration/command_recorder/schema_methods.rb
    - :line: "20"
      :name: ./lib/pg_power/migration/command_recorder/schema_methods.rb
:flog: 
  :total: 1412.64749330472
  :average: 7.43498680686694
  :method_containers: 
  - :methods: 
      main#none: 
        :operators: 
          :draw: 1.0
          :unshift: 1.1
          :set_column_comment: 8.40000000000001
          :on_load: 2.2
          :session_store: 1.0
          :config: 39.2000000000001
          :add_index: 7.20000000000001
          :action_mailer: 2.4
          :assignment: 44.5000000000001
          :wrap_parameters: 1.2
          :add_foreign_key: 3.60000000000001
          :define: 1.0
          :configure: 4.10000000000001
          :describe: 1.1
          :branch: 11.6
          :mock_with: 1.3
          :each: 1.1
          :require: 22.3
          :lit_fixnum: 0.3
          :assets: 6.00000000000001
          :active_support: 3.60000000000001
          :exist?: 1.1
          :root: 1.3
          :i18n: 1.2
          :setup: 1.3
          :action_dispatch: 2.4
          :initialize!: 1.1
          :[]: 1.3
          :routes: 1.2
          :action_controller: 4.80000000000001
          :expand_path: 7.80000000000001
          :set_table_comment: 2.4
          :create_schema: 3.60000000000001
        :path: 
        :score: 145.081253096326
    :average_score: 145.081253096326
    :total_score: 145.081253096326
    :path: ""
    :highest_score: 145.081253096326
    :name: main
  - :methods: 
      PgPower::SchemaDumper::ForeignerMethods#none: 
        :operators: 
          :private: 1.1
        :path: 
        :score: 1.1
      PgPower::SchemaDumper::ForeignerMethods#foreign_keys: 
        :operators: 
          :+: 10.7
          :inspect: 11.9
          :foreign_keys: 1.4
          :options: 15.9
          :assignment: 5.90000000000001
          :<<: 9.90000000000002
          :branch: 7.40000000000001
          :puts: 2.8
          :present?: 1.6
          :singularize: 1.8
          :join: 3.4
          :from_table: 2.0
          :any?: 1.2
          :sort: 1.8
          :to_table: 4.0
          :map: 1.4
          :==: 3.2
          :[]: 14.5
        :path: ./lib/pg_power/schema_dumper/foreigner_methods.rb:27
        :score: 88.0103403015806
      PgPower::SchemaDumper::ForeignerMethods#tables_with_foreign_keys: 
        :operators: 
          :+: 1.2
          :tables: 1.4
          :foreign_keys: 1.4
          :assignment: 5.20000000000001
          :tables_without_foreign_keys: 1.2
          :ignore_tables: 1.8
          :branch: 8.70000000000001
          :each: 1.2
          :get_non_public_schema_table_names: 1.6
          :raise: 1.6
          :any?: 1.4
          :flatten: 1.6
          :=~: 1.7
          :sort: 4.0
          :==: 1.7
        :path: ./lib/pg_power/schema_dumper/foreigner_methods.rb:5
        :score: 24.0410066344985
    :average_score: 37.7171156453597
    :total_score: 113.151346936079
    :path: ./lib/pg_power/schema_dumper/foreigner_methods.rb
    :highest_score: 88.0103403015806
    :name: PgPower::SchemaDumper::ForeignerMethods
  - :methods: 
      ActiveRecord::ConnectionAdapters::SchemaStatements#index_exists?: 
        :operators: 
          :gsub!: 4.0
          :is_a?: 3.8
          :downcase: 4.4
          :call: 1.5
          :assignment: 20.5
          :blank?: 1.7
          :key?: 2.7
          :indexes: 1.4
          :<<: 1.3
          :index_name: 1.3
          :branch: 15.8
          :each: 1.2
          :any?: 1.2
          :send: 11.1
          :name: 1.5
          :==: 5.2
          :lambda: 4.4
          :to_s: 1.3
          :[]: 6.0
          :wrap: 1.2
          :inject: 2.6
        :path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb:28
        :score: 63.3303244899314
      ActiveRecord::ConnectionAdapters::SchemaStatements#add_index: 
        :operators: 
          :execute: 1.2
          :add_index_options: 1.2
          :assignment: 7.2
          :quote_column_name: 1.4
          :quote_table_name: 1.4
        :path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb:13
        :score: 8.88144132446981
      ActiveRecord::ConnectionAdapters::SchemaStatements#none: 
        :operators: 
          :protected: 1.1
        :path: 
        :score: 1.1
      ActiveRecord::ConnectionAdapters::SchemaStatements#add_index_options: 
        :operators: 
          :index_name_exists?: 1.2
          :===: 1.2
          :>: 1.2
          :assignment: 10.5
          :index_name_length: 2.9
          :key?: 1.4
          :Array: 1.2
          :length: 1.4
          :branch: 9.3
          :index_name: 1.2
          :join: 1.2
          :raise: 2.6
          :quoted_columns_for_index: 1.4
          :supports_partial_index?: 1.4
          :to_s: 1.5
          :[]: 6.2
        :path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb:71
        :score: 29.5421732443637
    :average_score: 25.7134847646912
    :total_score: 102.853939058765
    :path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
    :highest_score: 63.3303244899314
    :name: ActiveRecord::ConnectionAdapters::SchemaStatements
  - :methods: 
      ActiveRecord::SchemaDumper#indexes: 
        :operators: 
          :+: 8.1
          :inspect: 8.9
          :lengths: 4.4
          :columns: 4.3
          :unique: 1.5
          :assignment: 7.0
          :compact: 1.5
          :where: 3.7
          :zip: 2.4
          :empty?: 1.5
          :<<: 4.8
          :indexes: 1.3
          :branch: 8.6
          :puts: 2.6
          :join: 3.2
          :table: 1.9
          :any?: 1.1
          :sort: 1.7
          :name: 1.9
          :map: 1.3
          :[]: 2.2
        :path: ./lib/core_ext/active_record/schema_dumper.rb:15
        :score: 59.3451767206064
    :average_score: 59.3451767206064
    :total_score: 59.3451767206064
    :path: ./lib/core_ext/active_record/schema_dumper.rb
    :highest_score: 59.3451767206064
    :name: ActiveRecord::SchemaDumper
  - :methods: 
      PgPower::Engine::initializer#pg_power: 
        :operators: 
          :+: 3.2
          :on_load: 1.0
          :assignment: 3.9
          :module_eval: 12.0
          :include: 13.2
          :branch: 10.7
          :initializer: 1.0
          :require: 1.3
          :each: 1.2
          :class_eval: 18.5
          :root: 1.9
        :path: ./lib/pg_power/engine.rb:43
        :score: 54.5031191767958
    :average_score: 54.5031191767958
    :total_score: 54.5031191767958
    :path: ./lib/pg_power/engine.rb
    :highest_score: 54.5031191767958
    :name: PgPower::Engine::initializer
  - :methods: 
      ActiveRecord::ConnectionAdapters::PostgreSQLAdapter#indexes: 
        :operators: 
          :scan: 1.9
          :extract_schema_and_table: 1.1
          :assignment: 21.5
          :compact: 2.6
          :values_at: 1.7
          :empty?: 1.5
          :branch: 3.9
          :join: 1.9
          :lit_fixnum: 1.8
          :query: 2.8
          :flatten: 1.7
          :split: 1.5
          :map: 1.3
          :==: 1.5
          :[]: 12.8
          :new: 1.6
        :path: ./lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb:27
        :score: 41.8563017955481
    :average_score: 41.8563017955481
    :total_score: 41.8563017955481
    :path: ./lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb
    :highest_score: 41.8563017955481
    :name: ActiveRecord::ConnectionAdapters::PostgreSQLAdapter
  - :methods: 
      PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#dependency_sql: 
        :operators: 
          :branch: 5.50000000000001
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:150
        :score: 5.50000000000001
      PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#foreign_keys: 
        :operators: 
          :assignment: 10.9
          :branch: 8.90000000000001
          :lit_fixnum: 0.425
          :map: 1.3
          :split: 1.5
          :[]: 7.7
          :to_s: 1.7
          :new: 1.5
          :select_all: 1.3
          :reverse: 1.3
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:16
        :score: 21.8573929140692
      PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#remove_foreign_key_sql: 
        :operators: 
          :===: 1.3
          :options: 3.4
          :assignment: 4.4
          :quote_column_name: 1.3
          :branch: 1.3
          :foreign_key_name: 2.9
          :[]: 1.6
          :foreign_key_column_id_from_table_name: 1.5
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:122
        :score: 12.8471786786049
      PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#add_foreign_key_sql: 
        :operators: 
          :proper_table_name: 1.7
          :+: 2.8
          :assignment: 6.5
          :quote_column_name: 3.4
          :<<: 2.8
          :branch: 3.9
          :present?: 1.3
          :quote_table_name: 1.5
          :foreign_key_name: 1.3
          :dependency_sql: 1.3
          :[]: 9.20000000000001
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:90
        :score: 26.411171878582
      PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#none: 
        :operators: 
          :private: 3.6
        :path: 
        :score: 3.6
      PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#foreign_key_name: 
        :operators: 
          :gsub: 1.5
          :assignment: 2.8
          :branch: 1.3
          :[]: 2.7
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:140
        :score: 5.21248501196887
      PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#drop_table: 
        :operators: 
          :branch: 1.3
          :disable_referential_integrity: 1.3
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:55
        :score: 1.83847763108502
      PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#foreign_key_column_id_from_table_name: 
        :operators: 
          :last: 1.5
          :singularize: 1.3
          :split: 1.7
          :to_s: 1.9
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:134
        :score: 6.40000000000001
      PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#remove_foreign_key: 
        :operators: 
          :===: 1.3
          :execute: 1.3
          :assignment: 2.6
          :index_exists?: 1.4
          :branch: 3.9
          :remove_foreign_key_sql: 1.5
          :quote_table_name: 1.5
          :remove_index: 1.4
          :[]: 2.8
          :foreign_key_column_id_from_table_name: 1.4
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:113
        :score: 13.4435858311687
      PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#add_foreign_key: 
        :operators: 
          :execute: 1.3
          :add_index: 1.4
          :assignment: 2.6
          :add_foreign_key_sql: 1.3
          :index_exists?: 1.4
          :index_name: 1.6
          :branch: 3.9
          :quote_table_name: 1.3
          :raise: 1.4
          :[]: 7.7
          :foreign_key_column_id_from_table_name: 1.3
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:75
        :score: 19.2784854176878
    :average_score: 11.6388777363166
    :total_score: 116.388777363166
    :path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
    :highest_score: 26.411171878582
    :name: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods
  - :methods: 
      PgPower::ConnectionAdapters::AbstractAdapter#none: 
        :operators: 
          :alias_method_chain: 2.6
          :include: 8.8
          :included: 1.1
          :branch: 1.1
          :autoload: 4.4
          :extend: 4.4
        :path: 
        :score: 21.3283848427395
    :average_score: 21.3283848427395
    :total_score: 21.3283848427395
    :path: ""
    :highest_score: 21.3283848427395
    :name: PgPower::ConnectionAdapters::AbstractAdapter
  - :methods: 
      PgPower::SchemaDumper#none: 
        :operators: 
          :alias_method_chain: 3.9
          :include: 6.60000000000001
          :included: 1.1
          :branch: 1.1
          :autoload: 3.3
          :extend: 4.40000000000001
        :path: 
        :score: 19.3313217344288
    :average_score: 19.3313217344288
    :total_score: 19.3313217344288
    :path: ""
    :highest_score: 19.3313217344288
    :name: PgPower::SchemaDumper
  - :methods: 
      PgPower::ConnectionAdapters::PostgreSQLAdapter#none: 
        :operators: 
          :include: 8.8
          :autoload: 4.4
          :extend: 4.4
        :path: 
        :score: 17.6
    :average_score: 17.6
    :total_score: 17.6
    :path: ""
    :highest_score: 17.6
    :name: PgPower::ConnectionAdapters::PostgreSQLAdapter
  - :methods: 
      PgPower::SchemaDumper::CommentMethods#tables_with_comments: 
        :operators: 
          :+: 1.2
          :tables: 1.4
          :tables_without_comments: 1.2
          :assignment: 3.7
          :branch: 1.2
          :each: 1.2
          :get_non_public_schema_table_names: 1.6
          :dump_comments: 1.3
          :sort: 2.6
        :path: ./lib/pg_power/schema_dumper/comment_methods.rb:5
        :score: 11.1973211081937
      PgPower::SchemaDumper::CommentMethods#none: 
        :operators: 
          :private: 1.1
        :path: 
        :score: 1.1
      PgPower::SchemaDumper::CommentMethods#dump_comments: 
        :operators: 
          :gsub: 1.6
          :comments: 1.4
          :assignment: 7.50000000000001
          :empty?: 1.2
          :branch: 4.2
          :puts: 2.8
          :join: 1.6
          :lit_fixnum: 0.5
          :map: 1.4
          :[]: 3.4
        :path: ./lib/pg_power/schema_dumper/comment_methods.rb:18
        :score: 16.3431943022165
    :average_score: 9.54683847013672
    :total_score: 28.6405154104102
    :path: ./lib/pg_power/schema_dumper/comment_methods.rb
    :highest_score: 16.3431943022165
    :name: PgPower::SchemaDumper::CommentMethods
  - :methods: 
      PgPower::ConnectionAdapters::Table::ForeignerMethods#references_with_foreign_keys: 
        :operators: 
          :references_without_foreign_keys: 1.2
          :p: 1.3
          :assignment: 2.4
          :<<: 1.4
          :branch: 1.2
          :dup: 1.6
          :extract_options!: 1.2
          :send: 4.5
          :delete: 1.2
          :caller: 1.7
        :path: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb:40
        :score: 14.3530484566868
      PgPower::ConnectionAdapters::Table::ForeignerMethods#foreign_key: 
        :operators: 
          :assignment: 1.2
          :add_foreign_key: 1.2
        :path: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb:16
        :score: 1.69705627484772
      PgPower::ConnectionAdapters::Table::ForeignerMethods#remove_foreign_key: 
        :operators: 
          :remove_foreign_key: 1.2
        :path: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb:35
        :score: 1.2
    :average_score: 5.75003491051152
    :total_score: 17.2501047315346
    :path: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb
    :highest_score: 14.3530484566868
    :name: PgPower::ConnectionAdapters::Table::ForeignerMethods
  - :methods: 
      CreateDemographyCitizens#change: 
        :operators: 
          :timestamps: 1.3
          :set_column_comment: 1.1
          :assignment: 1.2
          :create_table: 1.1
          :set_column_comments: 1.1
          :date: 1.3
          :integer: 2.6
          :text: 1.3
          :branch: 1.1
          :string: 2.6
          :set_table_comment: 1.1
        :path: ./spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb:2
        :score: 13.5977939387241
    :average_score: 13.5977939387241
    :total_score: 13.5977939387241
    :path: ./spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb
    :highest_score: 13.5977939387241
    :name: CreateDemographyCitizens
  - :methods: 
      PgPower::ConnectionAdapters::Table#none: 
        :operators: 
          :alias_method_chain: 1.2
          :include: 4.40000000000001
          :included: 1.1
          :branch: 1.1
          :autoload: 2.2
          :extend: 4.40000000000001
        :path: 
        :score: 13.3454111963626
    :average_score: 13.3454111963626
    :total_score: 13.3454111963626
    :path: ""
    :highest_score: 13.3454111963626
    :name: PgPower::ConnectionAdapters::Table
  - :methods: 
      create_table#demography.population_statistics: 
        :operators: 
          :assignment: 1.2
          :create_table: 1.2
          :integer: 2.6
        :path: ./spec/dummy/db/schema.rb:73
        :score: 3.98497176903426
      create_table#demography.countries: 
        :operators: 
          :assignment: 1.2
          :create_table: 1.2
          :datetime: 2.6
          :string: 2.6
        :path: ./spec/dummy/db/schema.rb:68
        :score: 6.51152823843989
      create_table#demography.citizens: 
        :operators: 
          :assignment: 1.2
          :create_table: 1.2
          :datetime: 2.6
          :date: 1.3
          :integer: 2.6
          :boolean: 1.3
          :text: 1.3
          :string: 2.6
        :path: ./spec/dummy/db/schema.rb:59
        :score: 12.9556937290135
      create_table#demography.cities: 
        :operators: 
          :assignment: 1.2
          :create_table: 1.2
          :integer: 2.6
        :path: ./spec/dummy/db/schema.rb:45
        :score: 3.98497176903426
      create_table#pets: 
        :operators: 
          :assignment: 1.2
          :create_table: 1.2
          :integer: 3.90000000000001
          :boolean: 1.3
          :string: 2.6
        :path: ./spec/dummy/db/schema.rb:26
        :score: 9.07964757025295
      create_table#users: 
        :operators: 
          :assignment: 1.2
          :create_table: 1.2
          :datetime: 2.6
          :string: 3.90000000000001
        :path: ./spec/dummy/db/schema.rb:38
        :score: 7.79294552784762
    :average_score: 7.38495976727042
    :total_score: 44.3097586036225
    :path: ./spec/dummy/db/schema.rb
    :highest_score: 12.9556937290135
    :name: create_table
  - :methods: 
      PgPower::Migration::CommandRecorder#none: 
        :operators: 
          :include: 6.60000000000001
          :autoload: 3.3
          :extend: 2.2
        :path: 
        :score: 12.1
    :average_score: 12.1
    :total_score: 12.1
    :path: ""
    :highest_score: 12.1
    :name: PgPower::Migration::CommandRecorder
  - :methods: 
      PgPower::Migration::CommandRecorder::ForeignerMethods#add_foreign_key: 
        :operators: 
          :record: 1.2
        :path: ./lib/pg_power/migration/command_recorder/foreigner_methods.rb:5
        :score: 1.2
      PgPower::Migration::CommandRecorder::ForeignerMethods#invert_add_foreign_key: 
        :operators: 
          :assignment: 10.1
          :branch: 2.5
          :[]: 5.20000000000001
        :path: ./lib/pg_power/migration/command_recorder/foreigner_methods.rb:15
        :score: 11.6318528188763
      PgPower::Migration::CommandRecorder::ForeignerMethods#remove_foreign_key: 
        :operators: 
          :record: 1.2
        :path: ./lib/pg_power/migration/command_recorder/foreigner_methods.rb:10
        :score: 1.2
    :average_score: 4.67728427295876
    :total_score: 14.0318528188763
    :path: ./lib/pg_power/migration/command_recorder/foreigner_methods.rb
    :highest_score: 11.6318528188763
    :name: PgPower::Migration::CommandRecorder::ForeignerMethods
  - :methods: 
      CreatePets#change: 
        :operators: 
          :add_index: 1.1
          :assignment: 1.2
          :create_table: 1.1
          :integer: 3.90000000000001
          :boolean: 1.3
          :branch: 1.1
          :string: 2.6
          :set_table_comment: 1.1
        :path: ./spec/dummy/db/migrate/20120105112744_create_pets.rb:2
        :score: 11.2187343314654
    :average_score: 11.2187343314654
    :total_score: 11.2187343314654
    :path: ./spec/dummy/db/migrate/20120105112744_create_pets.rb
    :highest_score: 11.2187343314654
    :name: CreatePets
  - :methods: 
      describe::describe::it#sets comments on columns of non-public schemas: 
        :operators: 
          :it: 1.3
          :should: 3.2
          :==: 2.8
          :get_column_comment: 3.6
        :path: ./spec/comment_methods_spec.rb:38
        :score: 10.9
      describe::describe::it#sets comments on columns: 
        :operators: 
          :it: 1.3
          :should: 3.2
          :==: 2.8
          :get_column_comment: 3.6
        :path: ./spec/comment_methods_spec.rb:33
        :score: 10.9
      describe::describe::it#should be true for a :where clause that includes boolean comparison: 
        :operators: 
          :it: 1.3
          :should: 1.6
          :add_index: 1.4
          :assignment: 1.4
          :index_exists?: 1.8
          :==: 1.4
        :path: ./spec/indexes_spec.rb:51
        :score: 7.629547824085
      describe::describe::it#should not remove the index when :exclude_index is true: 
        :operators: 
          :it: 1.2
          :should: 1.4
          :index_exists?: 1.6
          :==: 1.2
        :path: ./spec/foreign_keys_spec.rb:47
        :score: 5.40000000000001
      describe::describe::it#should be true for a compound :where clause: 
        :operators: 
          :it: 1.3
          :should: 1.6
          :add_index: 1.4
          :assignment: 1.4
          :index_exists?: 1.8
          :==: 1.4
        :path: ./spec/indexes_spec.rb:75
        :score: 7.629547824085
      describe::describe::it#removes comment on table of non-public schema: 
        :operators: 
          :it: 1.3
          :be_nil: 1.5
          :should: 1.3
          :get_table_comment: 1.5
        :path: ./spec/comment_methods_spec.rb:50
        :score: 5.60000000000001
      describe::describe::it#should be true for a :where clause that includes NULL comparison: 
        :operators: 
          :it: 1.3
          :should: 1.6
          :add_index: 1.4
          :assignment: 1.4
          :index_exists?: 1.8
          :==: 1.4
        :path: ./spec/indexes_spec.rb:63
        :score: 7.629547824085
      describe::describe::it#should be true for a :where clause that includes text comparison: 
        :operators: 
          :it: 1.3
          :should: 1.6
          :add_index: 1.4
          :assignment: 1.4
          :index_exists?: 1.8
          :==: 1.4
        :path: ./spec/indexes_spec.rb:57
        :score: 7.629547824085
      describe::describe::it#adds an index on the foreign key: 
        :operators: 
          :it: 1.2
          :should: 1.4
          :index_exists?: 1.6
          :==: 1.2
        :path: ./spec/foreign_keys_spec.rb:13
        :score: 5.40000000000001
      describe::describe::it#sets comment on table of non-public schema: 
        :operators: 
          :it: 1.3
          :should: 1.6
          :assignment: 1.4
          :get_table_comment: 1.4
          :==: 1.4
        :path: ./spec/comment_methods_spec.rb:14
        :score: 5.86941223633168
      describe::describe::it#should be true for a :where clause that includes integer comparison: 
        :operators: 
          :it: 1.3
          :should: 1.6
          :add_index: 1.4
          :assignment: 1.4
          :index_exists?: 1.8
          :==: 1.4
        :path: ./spec/indexes_spec.rb:69
        :score: 7.629547824085
      describe::describe::it#should not raise an exception if the index does not exist: 
        :operators: 
          :it: 1.2
          :assignment: 1.6
          :should_not: 1.2
          :add_foreign_key: 1.6
          :branch: 1.4
          :connection: 1.6
          :expect: 1.4
          :raise_exception: 1.4
          :remove_foreign_key: 1.6
        :path: ./spec/foreign_keys_spec.rb:55
        :score: 10.2235023353057
      describe::describe::it#should be false for a subset of valid options: 
        :operators: 
          :it: 1.3
          :should: 1.6
          :assignment: 1.4
          :index_exists?: 1.8
          :==: 1.4
        :path: ./spec/indexes_spec.rb:40
        :score: 6.25859409132755
      describe::describe::it#removes foreign key: 
        :operators: 
          :has_foreign_key?: 1.6
          :it: 1.2
          :should: 1.4
          :==: 1.2
        :path: ./spec/foreign_keys_spec.rb:35
        :score: 5.40000000000001
      describe::describe::it#removes comment on column: 
        :operators: 
          :it: 1.2
          :be_nil: 1.5
          :should: 2.8
          :==: 1.3
          :get_column_comment: 3.2
        :path: ./spec/comment_methods_spec.rb:57
        :score: 10.0
      describe::describe::it#should be true for simple options: 
        :operators: 
          :it: 1.3
          :should: 1.5
          :index_exists?: 1.7
          :==: 1.3
        :path: ./spec/indexes_spec.rb:17
        :score: 5.80000000000001
      describe::describe::it#sets comment on table: 
        :operators: 
          :it: 1.3
          :should: 1.6
          :assignment: 1.4
          :get_table_comment: 1.4
          :==: 1.4
        :path: ./spec/comment_methods_spec.rb:9
        :score: 5.86941223633168
      describe::describe::it#should support table name as a symbol: 
        :operators: 
          :it: 1.3
          :should: 1.5
          :index_exists?: 1.7
          :==: 1.3
        :path: ./spec/indexes_spec.rb:21
        :score: 5.80000000000001
      describe::describe::it#removes comment on columns: 
        :operators: 
          :it: 1.2
          :be_nil: 3.0
          :should: 2.6
          :get_column_comment: 3.0
        :path: ./spec/comment_methods_spec.rb:64
        :score: 9.80000000000001
      describe::describe::it#should be true for a valid set of options: 
        :operators: 
          :it: 1.3
          :should: 1.6
          :assignment: 1.4
          :index_exists?: 1.8
          :==: 1.4
        :path: ./spec/indexes_spec.rb:30
        :score: 6.25859409132755
      describe::describe::it#should not add an index on the foreign key when :exclude_index is true: 
        :operators: 
          :it: 1.2
          :should: 1.4
          :index_exists?: 1.6
          :==: 1.2
        :path: ./spec/foreign_keys_spec.rb:19
        :score: 5.40000000000001
      describe::describe::it#should be true for simple options on a schema table: 
        :operators: 
          :it: 1.3
          :should: 1.5
          :index_exists?: 1.7
          :==: 1.3
        :path: ./spec/indexes_spec.rb:25
        :score: 5.80000000000001
      describe::describe::it#sets comment on column: 
        :operators: 
          :it: 1.3
          :should: 1.6
          :assignment: 1.4
          :==: 1.4
          :get_column_comment: 1.4
        :path: ./spec/comment_methods_spec.rb:21
        :score: 5.86941223633168
      describe::describe::it#sets comment on column of non-public schema: 
        :operators: 
          :it: 1.3
          :should: 1.6
          :assignment: 1.4
          :==: 1.4
          :get_column_comment: 1.4
        :path: ./spec/comment_methods_spec.rb:26
        :score: 5.86941223633168
      describe::describe::it#should be true for a valid set of options including name: 
        :operators: 
          :it: 1.3
          :should: 1.6
          :assignment: 1.4
          :index_exists?: 1.8
          :==: 1.4
        :path: ./spec/indexes_spec.rb:35
        :score: 6.25859409132755
      describe::describe::it#adds foreign key: 
        :operators: 
          :has_foreign_key?: 1.6
          :it: 1.2
          :should: 1.4
          :==: 1.2
        :path: ./spec/foreign_keys_spec.rb:7
        :score: 5.40000000000001
      describe::describe::it#should be built with the :where option: 
        :operators: 
          :it: 1.2
          :should: 1.5
          :add_index: 1.3
          :assignment: 1.3
          :index_exists?: 1.7
          :==: 1.3
        :path: ./spec/indexes_spec.rb:11
        :score: 7.11969100453103
      describe::describe::it#should be false for invalid options: 
        :operators: 
          :it: 1.3
          :should: 1.6
          :assignment: 1.4
          :index_exists?: 1.8
          :==: 1.4
        :path: ./spec/indexes_spec.rb:45
        :score: 6.25859409132755
      describe::describe::it#removes comment on table: 
        :operators: 
          :it: 1.3
          :be_nil: 1.5
          :should: 1.3
          :get_table_comment: 1.5
        :path: ./spec/comment_methods_spec.rb:46
        :score: 5.60000000000001
      describe::describe::it#removes the index on the foreign key: 
        :operators: 
          :it: 1.2
          :should: 1.4
          :index_exists?: 1.6
          :==: 1.2
        :path: ./spec/foreign_keys_spec.rb:41
        :score: 5.40000000000001
    :average_score: 6.88676525902996
    :total_score: 206.602957770899
    :path: ./spec/indexes_spec.rb
    :highest_score: 10.9
    :name: describe::describe::it
  - :methods: 
      PgPower::ConnectionAdapters::PostgreSQLAdapter::CommentMethods#remove_column_comment: 
        :operators: 
          :execute: 1.2
          :assignment: 1.2
          :quote_column_name: 1.2
          :quote_table_name: 1.2
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:44
        :score: 3.79473319220206
      PgPower::ConnectionAdapters::PostgreSQLAdapter::CommentMethods#set_column_comment: 
        :operators: 
          :execute: 1.2
          :assignment: 1.2
          :quote_column_name: 1.2
          :quote_table_name: 1.2
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:20
        :score: 3.79473319220206
      PgPower::ConnectionAdapters::PostgreSQLAdapter::CommentMethods#set_column_comments: 
        :operators: 
          :set_column_comment: 1.3
          :assignment: 3.9
          :branch: 1.2
          :each_pair: 1.2
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:28
        :score: 4.78539444560216
      PgPower::ConnectionAdapters::PostgreSQLAdapter::CommentMethods#set_table_comment: 
        :operators: 
          :execute: 1.2
          :assignment: 1.2
          :quote_table_name: 1.2
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:11
        :score: 2.68328157299975
      PgPower::ConnectionAdapters::PostgreSQLAdapter::CommentMethods#remove_column_comments: 
        :operators: 
          :assignment: 1.3
          :branch: 1.2
          :each: 1.2
          :remove_column_comment: 1.3
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:50
        :score: 3.06267856622271
      PgPower::ConnectionAdapters::PostgreSQLAdapter::CommentMethods#remove_table_comment: 
        :operators: 
          :execute: 1.2
          :assignment: 1.2
          :quote_table_name: 1.2
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:36
        :score: 2.68328157299975
      PgPower::ConnectionAdapters::PostgreSQLAdapter::CommentMethods#comments: 
        :operators: 
          :assignment: 7.3
          :branch: 1.2
          :lit_fixnum: 0.4
          :map: 1.2
          :split: 1.4
          :[]: 2.6
          :select_all: 1.2
          :reverse: 1.2
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:62
        :score: 10.8963296572745
    :average_score: 4.52863317135757
    :total_score: 31.700432199503
    :path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
    :highest_score: 10.8963296572745
    :name: PgPower::ConnectionAdapters::PostgreSQLAdapter::CommentMethods
  - :methods: 
      CreateUsers#change: 
        :operators: 
          :timestamps: 1.3
          :set_column_comment: 1.1
          :add_index: 1.1
          :assignment: 1.2
          :create_table: 1.1
          :set_column_comments: 1.1
          :branch: 1.1
          :string: 3.90000000000001
          :set_table_comment: 1.1
        :path: ./spec/dummy/db/migrate/20120106163544_create_users.rb:2
        :score: 10.8231233939192
    :average_score: 10.8231233939192
    :total_score: 10.8231233939192
    :path: ./spec/dummy/db/migrate/20120106163544_create_users.rb
    :highest_score: 10.8231233939192
    :name: CreateUsers
  - :methods: 
      describe::describe::itshould raise a PgPower::IndexExistsError when the index already exists: 
        :operators: 
          :it: 1.2
          :should: 1.2
          :add_index: 1.6
          :assignment: 1.6
          :add_foreign_key: 1.6
          :branch: 1.4
          :connection: 1.6
          :expect: 1.4
          :raise_exception: 1.4
        :path: ./spec/foreign_keys_spec.rb:27
        :score: 10.2235023353057
    :average_score: 10.2235023353057
    :total_score: 10.2235023353057
    :path: ./spec/foreign_keys_spec.rb
    :highest_score: 10.2235023353057
    :name: describe::describe::itshould raise a PgPower::IndexExistsError when the index already exists
  - :methods: 
      PgPower::Migration::CommandRecorder::CommentMethods#set_column_comment: 
        :operators: 
          :record: 1.2
        :path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:15
        :score: 1.2
      PgPower::Migration::CommandRecorder::CommentMethods#set_table_comment: 
        :operators: 
          :record: 1.2
        :path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:5
        :score: 1.2
      PgPower::Migration::CommandRecorder::CommentMethods#remove_column_comments: 
        :operators: 
          :record: 1.2
        :path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:30
        :score: 1.2
      PgPower::Migration::CommandRecorder::CommentMethods#remove_column_comment: 
        :operators: 
          :record: 1.2
        :path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:25
        :score: 1.2
      PgPower::Migration::CommandRecorder::CommentMethods#invert_set_column_comment: 
        :operators: 
          :assignment: 2.4
          :lit_fixnum: 0.35
          :[]: 2.4
        :path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:41
        :score: 3.65
      PgPower::Migration::CommandRecorder::CommentMethods#invert_set_table_comment: 
        :operators: 
          :assignment: 1.2
          :first: 1.2
        :path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:35
        :score: 1.69705627484772
      PgPower::Migration::CommandRecorder::CommentMethods#invert_set_column_comments: 
        :operators: 
          :+: 1.2
          :assignment: 5.70000000000001
          :branch: 1.4
          :collect: 1.4
          :lit_fixnum: 0.45
          :[]: 3.0
        :path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:48
        :score: 8.42926449934988
      PgPower::Migration::CommandRecorder::CommentMethods#set_column_comments: 
        :operators: 
          :record: 1.2
        :path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:20
        :score: 1.2
      PgPower::Migration::CommandRecorder::CommentMethods#remove_table_comment: 
        :operators: 
          :record: 1.2
        :path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:10
        :score: 1.2
    :average_score: 2.33070230824418
    :total_score: 20.9763207741976
    :path: ./lib/pg_power/migration/command_recorder/comment_methods.rb
    :highest_score: 8.42926449934988
    :name: PgPower::Migration::CommandRecorder::CommentMethods
  - :methods: 
      Dummy::Application#none: 
        :operators: 
          :config: 5.20000000000001
          :assignment: 3.60000000000001
          :assets: 2.4
        :path: 
        :score: 8.40951841665147
    :average_score: 8.40951841665147
    :total_score: 8.40951841665147
    :path: ""
    :highest_score: 8.40951841665147
    :name: Dummy::Application
  - :methods: 
      PgPower#none: 
        :operators: 
          :autoload: 6.0
          :extend: 2.4
        :path: 
        :score: 8.40000000000001
    :average_score: 8.40000000000001
    :total_score: 8.40000000000001
    :path: ""
    :highest_score: 8.40000000000001
    :name: PgPower
  - :methods: 
      PgPower::Explorer#table_exists?: 
        :operators: 
          :to_schema_and_table: 1.2
          :assignment: 3.60000000000001
          :connection: 1.8
          :query: 1.6
          :first: 1.2
          :flatten: 1.4
        :path: ./spec/support/explorer.rb:61
        :score: 8.04984471899926
      PgPower::Explorer#has_foreign_key?: 
        :operators: 
          :to_schema_and_table: 1.2
          :assignment: 3.60000000000001
          :connection: 1.8
          :query: 1.6
          :first: 1.2
          :flatten: 1.4
        :path: ./spec/support/explorer.rb:40
        :score: 8.04984471899926
      PgPower::Explorer#index_exists?: 
        :operators: 
          :assignment: 1.2
          :index_exists?: 1.2
          :connection: 1.4
          :to_s: 1.4
        :path: ./spec/support/explorer.rb:57
        :score: 4.17612260356423
      PgPower::Explorer#connection: 
        :operators: 
          :branch: 1.2
          :connection: 1.3
        :path: ./spec/support/explorer.rb:84
        :score: 1.76918060129542
      PgPower::Explorer#none: 
        :operators: 
          :private: 2.2
          :extend: 2.2
        :path: 
        :score: 4.40000000000001
      PgPower::Explorer#to_schema_and_table: 
        :operators: 
          :assignment: 4.80000000000001
          :lit_fixnum: 0.400000000000001
          :split: 1.4
          :to_s: 1.6
          :reverse: 1.2
        :path: ./spec/support/explorer.rb:77
        :score: 6.64830805543788
      PgPower::Explorer#get_table_comment: 
        :operators: 
          :to_schema_and_table: 1.2
          :assignment: 3.60000000000001
          :connection: 1.8
          :query: 1.6
          :first: 1.2
          :flatten: 1.4
        :path: ./spec/support/explorer.rb:6
        :score: 8.04984471899926
      PgPower::Explorer#get_column_comment: 
        :operators: 
          :to_schema_and_table: 1.2
          :assignment: 3.60000000000001
          :connection: 1.8
          :query: 1.6
          :first: 1.2
          :flatten: 1.4
        :path: ./spec/support/explorer.rb:22
        :score: 8.04984471899926
    :average_score: 6.14912376703682
    :total_score: 49.1929901362946
    :path: ./spec/support/explorer.rb
    :highest_score: 8.04984471899926
    :name: PgPower::Explorer
  - :methods: 
      PgPower::ConnectionAdapters#none: 
        :operators: 
          :autoload: 5.5
          :extend: 2.2
        :path: 
        :score: 7.7
    :average_score: 7.7
    :total_score: 7.7
    :path: ""
    :highest_score: 7.7
    :name: PgPower::ConnectionAdapters
  - :methods: 
      describe::before#all: 
        :operators: 
          :assignment: 2.8
          :connection: 1.6
          :string: 1.4
          :before: 1.3
          :dump: 1.4
          :new: 1.4
        :path: ./spec/active_record/schema_dumper_spec.rb:6
        :score: 7.63216876123689
    :average_score: 7.63216876123689
    :total_score: 7.63216876123689
    :path: ./spec/active_record/schema_dumper_spec.rb
    :highest_score: 7.63216876123689
    :name: describe::before
  - :methods: 
      describe::context::it#dumps schemas in alphabetical order: 
        :operators: 
          :it: 1.4
          :should: 1.4
        :path: ./spec/active_record/schema_dumper_spec.rb:20
        :score: 2.8
      describe::context::it#dumps foreign keys: 
        :operators: 
          :it: 1.4
          :should: 1.4
        :path: ./spec/active_record/schema_dumper_spec.rb:54
        :score: 2.8
      describe::context::it#dumps column comments from non-public schemas: 
        :operators: 
          :it: 1.4
          :should: 1.4
        :path: ./spec/active_record/schema_dumper_spec.rb:77
        :score: 2.8
      describe::context::it#dumps table comments from non-public schemas: 
        :operators: 
          :it: 1.4
          :should: 1.4
        :path: ./spec/active_record/schema_dumper_spec.rb:69
        :score: 2.8
      describe::context::it#dumps tables from non-public schemas: 
        :operators: 
          :it: 1.4
          :should: 1.4
        :path: ./spec/active_record/schema_dumper_spec.rb:30
        :score: 2.8
      describe::context::it#dumps column comments: 
        :operators: 
          :it: 1.4
          :should: 1.4
        :path: ./spec/active_record/schema_dumper_spec.rb:73
        :score: 2.8
      describe::context::it#dumps schemas: 
        :operators: 
          :it: 1.4
          :should: 4.50000000000001
        :path: ./spec/active_record/schema_dumper_spec.rb:17
        :score: 5.90000000000001
      describe::context::it#dumps foreign keys from non-public schemas: 
        :operators: 
          :it: 1.4
          :should: 3.0
        :path: ./spec/active_record/schema_dumper_spec.rb:59
        :score: 4.40000000000001
      describe::context::it#dumps table comments: 
        :operators: 
          :it: 1.4
          :should: 1.4
        :path: ./spec/active_record/schema_dumper_spec.rb:65
        :score: 2.8
      describe::context::it#dumps tables: 
        :operators: 
          :it: 1.4
          :should: 1.4
        :path: ./spec/active_record/schema_dumper_spec.rb:26
        :score: 2.8
      describe::context::it#dumps indexes: 
        :operators: 
          :it: 1.4
          :should: 4.50000000000001
          :should_not: 1.5
        :path: ./spec/active_record/schema_dumper_spec.rb:43
        :score: 7.40000000000001
      describe::context::it#dumps indexes from non-public schemas: 
        :operators: 
          :it: 1.4
          :should: 1.4
        :path: ./spec/active_record/schema_dumper_spec.rb:48
        :score: 2.8
    :average_score: 3.57500000000001
    :total_score: 42.9000000000001
    :path: ./spec/active_record/schema_dumper_spec.rb
    :highest_score: 7.40000000000001
    :name: describe::context::it
  - :methods: 
      CreateDemographyCountries#change: 
        :operators: 
          :timestamps: 1.3
          :assignment: 1.2
          :create_table: 1.1
          :set_column_comments: 1.1
          :branch: 1.1
          :string: 2.6
          :set_table_comment: 1.1
        :path: ./spec/dummy/db/migrate/20120106163810_create_demography_countries.rb:2
        :score: 7.38173421358424
    :average_score: 7.38173421358424
    :total_score: 7.38173421358424
    :path: ./spec/dummy/db/migrate/20120106163810_create_demography_countries.rb
    :highest_score: 7.38173421358424
    :name: CreateDemographyCountries
  - :methods: 
      PgPower::SchemaDumper::SchemaMethods#non_public_schema_tables: 
        :operators: 
          :assignment: 1.3
          :branch: 1.2
          :each: 1.2
          :get_non_public_schema_table_names: 1.4
          :table: 1.3
        :path: ./lib/pg_power/schema_dumper/schema_methods.rb:31
        :score: 4.28252262107278
      PgPower::SchemaDumper::SchemaMethods#schemas: 
        :operators: 
          :schema: 1.3
          :assignment: 2.5
          :<<: 1.2
          :branch: 1.2
          :schemas: 1.4
          :each: 1.2
          :-: 1.2
        :path: ./lib/pg_power/schema_dumper/schema_methods.rb:14
        :score: 6.88331315574122
      PgPower::SchemaDumper::SchemaMethods#tables_with_schemas: 
        :operators: 
          :non_public_schema_tables: 1.2
          :schemas: 1.2
          :tables_without_schemas: 1.2
        :path: ./lib/pg_power/schema_dumper/schema_methods.rb:7
        :score: 3.60000000000001
      PgPower::SchemaDumper::SchemaMethods#get_non_public_schema_table_names: 
        :operators: 
          :assignment: 1.2
          :query: 1.2
          :flatten: 1.2
        :path: ./lib/pg_power/schema_dumper/schema_methods.rb:41
        :score: 2.68328157299975
      PgPower::SchemaDumper::SchemaMethods#none: 
        :operators: 
          :private: 4.40000000000001
        :path: 
        :score: 4.40000000000001
      PgPower::SchemaDumper::SchemaMethods#schema: 
        :operators: 
          :<<: 1.2
        :path: ./lib/pg_power/schema_dumper/schema_methods.rb:25
        :score: 1.2
    :average_score: 3.84151955830229
    :total_score: 23.0491173498138
    :path: ./lib/pg_power/schema_dumper/schema_methods.rb
    :highest_score: 6.88331315574122
    :name: PgPower::SchemaDumper::SchemaMethods
  - :methods: 
      PgPower::ConnectionAdapters::PostgreSQLAdapter::IndexMethods#index_name: 
        :operators: 
          :gsub: 1.2
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb:18
        :score: 1.2
      PgPower::ConnectionAdapters::PostgreSQLAdapter::IndexMethods#index_name_for_remove: 
        :operators: 
          :include?: 1.2
          :assignment: 3.8
          :branch: 1.2
          :first: 1.4
          :split: 1.6
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb:32
        :score: 5.78964593045206
    :average_score: 3.49482296522603
    :total_score: 6.98964593045206
    :path: ./lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
    :highest_score: 5.78964593045206
    :name: PgPower::ConnectionAdapters::PostgreSQLAdapter::IndexMethods
  - :methods: 
      PgPower::ConnectionAdapters::AbstractAdapter::SchemaMethods#create_table_with_schema_option: 
        :operators: 
          :assignment: 3.7
          :branch: 1.2
          :create_table_without_schema_option: 1.2
          :delete: 1.2
          :block_pass: 1.4
        :path: ./lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb:6
        :score: 5.43783044972901
      PgPower::ConnectionAdapters::AbstractAdapter::SchemaMethods#drop_table_with_schema_option: 
        :operators: 
          :drop_table_without_schema_option: 1.2
          :assignment: 3.7
          :branch: 1.2
          :delete: 1.2
        :path: ./lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb:13
        :score: 4.57055795281058
    :average_score: 5.0041942012698
    :total_score: 10.0083884025396
    :path: ./lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb
    :highest_score: 5.43783044972901
    :name: PgPower::ConnectionAdapters::AbstractAdapter::SchemaMethods
  - :methods: 
      describe::describe::context::it#removes table in passed schema: 
        :operators: 
          :it: 1.2
          :should: 1.4
          :table_exists?: 1.6
          :==: 1.2
        :path: ./spec/schema_methods_spec.rb:17
        :score: 5.40000000000001
      describe::describe::context::it#creates table in passed schema: 
        :operators: 
          :it: 1.2
          :should: 1.4
          :table_exists?: 1.6
          :==: 1.2
        :path: ./spec/schema_methods_spec.rb:8
        :score: 5.40000000000001
    :average_score: 5.40000000000001
    :total_score: 10.8
    :path: ./spec/schema_methods_spec.rb
    :highest_score: 5.40000000000001
    :name: describe::describe::context::it
  - :methods: 
      CreateCitiesTable#change: 
        :operators: 
          :assignment: 1.2
          :create_table: 1.1
          :integer: 2.6
          :add_foreign_key: 1.1
          :branch: 1.1
        :path: ./spec/dummy/db/migrate/20120209094937_create_cities_table.rb:2
        :score: 5.06853035898968
    :average_score: 5.06853035898968
    :total_score: 5.06853035898968
    :path: ./spec/dummy/db/migrate/20120209094937_create_cities_table.rb
    :highest_score: 5.06853035898968
    :name: CreateCitiesTable
  - :methods: 
      AddForeignKeys#change: 
        :operators: 
          :add_foreign_key: 4.40000000000001
        :path: ./spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb:2
        :score: 4.40000000000001
    :average_score: 4.40000000000001
    :total_score: 4.40000000000001
    :path: ./spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb
    :highest_score: 4.40000000000001
    :name: AddForeignKeys
  - :methods: 
      PgPower::Tools#none: 
        :operators: 
          :extend: 2.2
        :path: 
        :score: 2.2
      PgPower::Tools#drop_schema: 
        :operators: 
          :execute: 1.2
          :assignment: 1.2
          :connection: 1.4
        :path: ./lib/pg_power/tools.rb:18
        :score: 2.86356421265527
      PgPower::Tools#create_schema: 
        :operators: 
          :execute: 1.2
          :assignment: 1.2
          :connection: 1.4
        :path: ./lib/pg_power/tools.rb:12
        :score: 2.86356421265527
      PgPower::Tools#schemas: 
        :operators: 
          :assignment: 1.2
          :connection: 1.6
          :query: 1.4
          :flatten: 1.2
        :path: ./lib/pg_power/tools.rb:24
        :score: 4.36806593356832
    :average_score: 3.07379858971972
    :total_score: 12.2951943588789
    :path: ./lib/pg_power/tools.rb
    :highest_score: 4.36806593356832
    :name: PgPower::Tools
  - :methods: 
      DemographyPopulationStatisctics#change: 
        :operators: 
          :assignment: 1.2
          :create_table: 1.1
          :integer: 2.6
          :branch: 1.1
        :path: ./spec/dummy/db/migrate/20120301153650_demography_population_statisctics.rb:2
        :score: 4.04227658628155
    :average_score: 4.04227658628155
    :total_score: 4.04227658628155
    :path: ./spec/dummy/db/migrate/20120301153650_demography_population_statisctics.rb
    :highest_score: 4.04227658628155
    :name: DemographyPopulationStatisctics
  - :methods: 
      CreateDemographySchema#change: 
        :operators: 
          :create_schema: 3.30000000000001
        :path: ./spec/dummy/db/migrate/20120106163711_create_demography_schema.rb:2
        :score: 3.30000000000001
    :average_score: 3.30000000000001
    :total_score: 3.30000000000001
    :path: ./spec/dummy/db/migrate/20120106163711_create_demography_schema.rb
    :highest_score: 3.30000000000001
    :name: CreateDemographySchema
  - :methods: 
      PgPower::Migration#none: 
        :operators: 
          :autoload: 1.1
          :extend: 2.2
        :path: 
        :score: 3.3
    :average_score: 3.3
    :total_score: 3.3
    :path: ""
    :highest_score: 3.3
    :name: PgPower::Migration
  - :methods: 
      CreateDemographyNationalities#change: 
        :operators: 
          :assignment: 1.2
          :create_table: 1.1
          :branch: 1.1
          :string: 1.2
        :path: ./spec/dummy/db/migrate/20120301152819_create_demography_nationalities.rb:2
        :score: 2.81780056072108
    :average_score: 2.81780056072108
    :total_score: 2.81780056072108
    :path: ./spec/dummy/db/migrate/20120301152819_create_demography_nationalities.rb
    :highest_score: 2.81780056072108
    :name: CreateDemographyNationalities
  - :methods: 
      describe::describe::context#with :schema option: 
        :operators: 
          :context: 2.4
        :path: ./spec/schema_methods_spec.rb:18
        :score: 2.4
    :average_score: 2.4
    :total_score: 2.4
    :path: ./spec/schema_methods_spec.rb
    :highest_score: 2.4
    :name: describe::describe::context
  - :methods: 
      RemoveCommentsOnCountriesTable#up: 
        :operators: 
          :remove_table_comment: 1.2
          :remove_column_comment: 1.2
        :path: ./spec/dummy/db/migrate/20120207103858_remove_comments_on_countries_table.rb:2
        :score: 2.4
      RemoveCommentsOnCountriesTable#down: 
        :operators: 
          :set_table_comment: 1.2
        :path: ./spec/dummy/db/migrate/20120207103858_remove_comments_on_countries_table.rb:7
        :score: 1.2
    :average_score: 1.8
    :total_score: 3.60000000000001
    :path: ./spec/dummy/db/migrate/20120207103858_remove_comments_on_countries_table.rb
    :highest_score: 2.4
    :name: RemoveCommentsOnCountriesTable
  - :methods: 
      RemoveForeignKeys#down: 
        :operators: 
          :add_foreign_key: 2.4
        :path: ./spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb:7
        :score: 2.4
      RemoveForeignKeys#up: 
        :operators: 
          :remove_foreign_key: 2.4
        :path: ./spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb:2
        :score: 2.4
    :average_score: 2.4
    :total_score: 4.80000000000001
    :path: ./spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb
    :highest_score: 2.4
    :name: RemoveForeignKeys
  - :methods: 
      AddDemographyCitizensActiveColumn#change: 
        :operators: 
          :add_column: 1.1
          :add_index: 1.1
        :path: ./spec/dummy/db/migrate/20120224204546_add_demography_citizens_active_column.rb:2
        :score: 2.2
    :average_score: 2.2
    :total_score: 2.2
    :path: ./spec/dummy/db/migrate/20120224204546_add_demography_citizens_active_column.rb
    :highest_score: 2.2
    :name: AddDemographyCitizensActiveColumn
  - :methods: 
      PgPower::ConnectionAdapters::IndexDefinition#none: 
        :operators: 
          :new: 2.0
        :path: 
        :score: 2.0
    :average_score: 2.0
    :total_score: 2.0
    :path: ""
    :highest_score: 2.0
    :name: PgPower::ConnectionAdapters::IndexDefinition
  - :methods: 
      PgPower::ConnectionAdapters::ForeignKeyDefinition#none: 
        :operators: 
          :new: 2.0
        :path: 
        :score: 2.0
    :average_score: 2.0
    :total_score: 2.0
    :path: ""
    :highest_score: 2.0
    :name: PgPower::ConnectionAdapters::ForeignKeyDefinition
  - :methods: 
      describe::context#Foreign keys: 
        :operators: 
          :context: 1.3
        :path: ./spec/active_record/schema_dumper_spec.rb:60
        :score: 1.3
      describe::context#Schemas: 
        :operators: 
          :context: 1.3
        :path: ./spec/active_record/schema_dumper_spec.rb:21
        :score: 1.3
      describe::context#Indexes: 
        :operators: 
          :context: 1.3
        :path: ./spec/active_record/schema_dumper_spec.rb:49
        :score: 1.3
      describe::context#Tables: 
        :operators: 
          :context: 1.3
        :path: ./spec/active_record/schema_dumper_spec.rb:31
        :score: 1.3
      describe::context#Comments: 
        :operators: 
          :context: 1.3
        :path: ./spec/active_record/schema_dumper_spec.rb:78
        :score: 1.3
    :average_score: 1.3
    :total_score: 6.50000000000001
    :path: ./spec/active_record/schema_dumper_spec.rb
    :highest_score: 1.3
    :name: describe::context
  - :methods: 
      describe::describe##add_index: 
        :operators: 
          :describe: 1.2
        :path: ./spec/indexes_spec.rb:12
        :score: 1.2
      describe::describe##drop_table: 
        :operators: 
          :describe: 1.2
        :path: ./spec/schema_methods_spec.rb:19
        :score: 1.2
      describe::describe##remove_table_comment: 
        :operators: 
          :describe: 1.2
        :path: ./spec/comment_methods_spec.rb:51
        :score: 1.2
      describe::describe##remove_column_comments: 
        :operators: 
          :describe: 1.2
        :path: ./spec/comment_methods_spec.rb:65
        :score: 1.2
      describe::describe##remove_foreign_key: 
        :operators: 
          :describe: 1.1
        :path: ./spec/foreign_keys_spec.rb:56
        :score: 1.1
      describe::describe##set_column_comment: 
        :operators: 
          :describe: 1.2
        :path: ./spec/comment_methods_spec.rb:27
        :score: 1.2
      describe::describe##add_foreign_key: 
        :operators: 
          :describe: 1.1
        :path: ./spec/foreign_keys_spec.rb:28
        :score: 1.1
      describe::describe##index_exists: 
        :operators: 
          :describe: 1.2
        :path: ./spec/indexes_spec.rb:77
        :score: 1.2
      describe::describe##set_column_comments: 
        :operators: 
          :describe: 1.2
        :path: ./spec/comment_methods_spec.rb:39
        :score: 1.2
      describe::describe##create_table: 
        :operators: 
          :describe: 1.2
        :path: ./spec/schema_methods_spec.rb:10
        :score: 1.2
      describe::describe##set_table_comment: 
        :operators: 
          :describe: 1.2
        :path: ./spec/comment_methods_spec.rb:15
        :score: 1.2
      describe::describe##remove_column_comment: 
        :operators: 
          :describe: 1.2
        :path: ./spec/comment_methods_spec.rb:58
        :score: 1.2
    :average_score: 1.18333333333334
    :total_score: 14.2
    :path: ./spec/comment_methods_spec.rb
    :highest_score: 1.2
    :name: describe::describe
  - :methods: 
      describe#Foreign keys: 
        :operators: 
          :describe: 1.0
        :path: ./spec/foreign_keys_spec.rb:57
        :score: 1.0
      describe#Indexes: 
        :operators: 
          :describe: 1.1
        :path: ./spec/indexes_spec.rb:78
        :score: 1.1
      describe#Comment methods: 
        :operators: 
          :describe: 1.1
        :path: ./spec/comment_methods_spec.rb:67
        :score: 1.1
      describe#Schema methods: 
        :operators: 
          :describe: 1.1
        :path: ./spec/schema_methods_spec.rb:20
        :score: 1.1
      describe#.dump: 
        :operators: 
          :describe: 1.2
        :path: ./spec/active_record/schema_dumper_spec.rb:80
        :score: 1.2
    :average_score: 1.1
    :total_score: 5.50000000000001
    :path: ./spec/active_record/schema_dumper_spec.rb
    :highest_score: 1.2
    :name: describe
  - :methods: 
      RemoveSomeCommentsOnCitizens#down: 
        :operators: 
          :set_column_comments: 1.2
        :path: ./spec/dummy/db/migrate/20120208114020_remove_some_comments_on_citizens.rb:6
        :score: 1.2
      RemoveSomeCommentsOnCitizens#up: 
        :operators: 
          :remove_column_comments: 1.2
        :path: ./spec/dummy/db/migrate/20120208114020_remove_some_comments_on_citizens.rb:2
        :score: 1.2
    :average_score: 1.2
    :total_score: 2.4
    :path: ./spec/dummy/db/migrate/20120208114020_remove_some_comments_on_citizens.rb
    :highest_score: 1.2
    :name: RemoveSomeCommentsOnCitizens
  - :methods: 
      RemoveCommentOnPetsTable#up: 
        :operators: 
          :remove_table_comment: 1.2
        :path: ./spec/dummy/db/migrate/20120207112916_remove_comment_on_pets_table.rb:2
        :score: 1.2
      RemoveCommentOnPetsTable#down: 
        :operators: 
          :set_table_comment: 1.2
        :path: ./spec/dummy/db/migrate/20120207112916_remove_comment_on_pets_table.rb:6
        :score: 1.2
    :average_score: 1.2
    :total_score: 2.4
    :path: ./spec/dummy/db/migrate/20120207112916_remove_comment_on_pets_table.rb
    :highest_score: 1.2
    :name: RemoveCommentOnPetsTable
  - :methods: 
      PgPower::ConnectionAdapters::Table::CommentMethods#set_column_comments: 
        :operators: 
          :set_column_comments: 1.2
        :path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:37
        :score: 1.2
      PgPower::ConnectionAdapters::Table::CommentMethods#set_table_comment: 
        :operators: 
          :set_table_comment: 1.2
        :path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:9
        :score: 1.2
      PgPower::ConnectionAdapters::Table::CommentMethods#remove_column_comment: 
        :operators: 
          :remove_column_comment: 1.2
        :path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:46
        :score: 1.2
      PgPower::ConnectionAdapters::Table::CommentMethods#set_column_comment: 
        :operators: 
          :set_column_comment: 1.2
        :path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:27
        :score: 1.2
      PgPower::ConnectionAdapters::Table::CommentMethods#remove_column_comments: 
        :operators: 
          :remove_column_comments: 1.2
        :path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:55
        :score: 1.2
      PgPower::ConnectionAdapters::Table::CommentMethods#remove_table_comment: 
        :operators: 
          :remove_table_comment: 1.2
        :path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:18
        :score: 1.2
    :average_score: 1.2
    :total_score: 7.20000000000001
    :path: ./lib/pg_power/connection_adapters/table/comment_methods.rb
    :highest_score: 1.2
    :name: PgPower::ConnectionAdapters::Table::CommentMethods
  - :methods: 
      PgPower::ConnectionAdapters::PostgreSQLAdapter::SchemaMethods#create_schema: 
        :operators: 
          :create_schema: 1.2
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb:6
        :score: 1.2
      PgPower::ConnectionAdapters::PostgreSQLAdapter::SchemaMethods#drop_schema: 
        :operators: 
          :drop_schema: 1.2
        :path: ./lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb:12
        :score: 1.2
    :average_score: 1.2
    :total_score: 2.4
    :path: ./lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb
    :highest_score: 1.2
    :name: PgPower::ConnectionAdapters::PostgreSQLAdapter::SchemaMethods
  - :methods: 
      PgPower::Migration::CommandRecorder::SchemaMethods#invert_create_schema: 
        :operators: 
          :first: 1.2
        :path: ./lib/pg_power/migration/command_recorder/schema_methods.rb:15
        :score: 1.2
      PgPower::Migration::CommandRecorder::SchemaMethods#invert_drop_schema: 
        :operators: 
          :first: 1.2
        :path: ./lib/pg_power/migration/command_recorder/schema_methods.rb:20
        :score: 1.2
      PgPower::Migration::CommandRecorder::SchemaMethods#create_schema: 
        :operators: 
          :record: 1.2
        :path: ./lib/pg_power/migration/command_recorder/schema_methods.rb:5
        :score: 1.2
      PgPower::Migration::CommandRecorder::SchemaMethods#drop_schema: 
        :operators: 
          :record: 1.2
        :path: ./lib/pg_power/migration/command_recorder/schema_methods.rb:10
        :score: 1.2
    :average_score: 1.2
    :total_score: 4.80000000000001
    :path: ./lib/pg_power/migration/command_recorder/schema_methods.rb
    :highest_score: 1.2
    :name: PgPower::Migration::CommandRecorder::SchemaMethods
  - :methods: 
      PgPower::ConnectionAdapters::AbstractAdapter::ForeignerMethods#add_foreign_key: 
        :operators: 
          :assignment: 1.2
        :path: ./lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb:48
        :score: 1.2
    :average_score: 1.2
    :total_score: 1.2
    :path: ./lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb
    :highest_score: 1.2
    :name: PgPower::ConnectionAdapters::AbstractAdapter::ForeignerMethods
  - :methods: 
      RemoveDemographyNationalities#change: 
        :operators: 
          :drop_table: 1.1
        :path: ./spec/dummy/db/migrate/20120301171826_remove_demography_nationalities.rb:2
        :score: 1.1
    :average_score: 1.1
    :total_score: 1.1
    :path: ./spec/dummy/db/migrate/20120301171826_remove_demography_nationalities.rb
    :highest_score: 1.1
    :name: RemoveDemographyNationalities
  - :methods: 
      User#none: 
        :operators: 
          :has_one: 1.0
        :path: 
        :score: 1.0
    :average_score: 1.0
    :total_score: 1.0
    :path: ""
    :highest_score: 1.0
    :name: User
  - :methods: 
      Demography::Citizen#none: 
        :operators: 
          :belongs_to: 1.0
        :path: 
        :score: 1.0
    :average_score: 1.0
    :total_score: 1.0
    :path: ""
    :highest_score: 1.0
    :name: Demography::Citizen
  - :methods: 
      ApplicationController#none: 
        :operators: 
          :protect_from_forgery: 1.0
        :path: 
        :score: 1.0
    :average_score: 1.0
    :total_score: 1.0
    :path: ""
    :highest_score: 1.0
    :name: ApplicationController
  - :methods: 
      Demography::Country#none: 
        :operators: 
          :has_many: 1.0
        :path: 
        :score: 1.0
    :average_score: 1.0
    :total_score: 1.0
    :path: ""
    :highest_score: 1.0
    :name: Demography::Country
:hotspots: 
  :methods: 
  - :details: 
      :flog: complexity is 145.1
    :location: !ruby/object:MetricFu::Location 
      class_name: main
      file_path: 
      hash: -1405862716
      method_name: main#none
      simple_method_name: "#none"
  - :details: 
      :rcov: uncovered code is 91.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :ForeignerMethods)
      file_path: lib/pg_power/migration/command_recorder/foreigner_methods.rb
      hash: -4193435161
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :ForeignerMethods)#invert_add_foreign_key
      simple_method_name: "#invert_add_foreign_key"
  - :details: 
      :rcov: uncovered code is 88.9%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :IndexMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
      hash: 5341479776
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :IndexMethods)#index_name_for_remove
      simple_method_name: "#index_name_for_remove"
  - :details: 
      :rcov: uncovered code is 88.9%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :ForeignerMethods)
      file_path: lib/pg_power/connection_adapters/table/foreigner_methods.rb
      hash: -7138007347
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :ForeignerMethods)#references_with_foreign_keys
      simple_method_name: "#references_with_foreign_keys"
  - :details: 
      :rcov: uncovered code is 80.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :SchemaMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb
      hash: 86830648
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :SchemaMethods)#create_table_with_schema_option
      simple_method_name: "#create_table_with_schema_option"
  - :details: 
      :rcov: uncovered code is 80.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: -6706774182
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#remove_column_comments
      simple_method_name: "#remove_column_comments"
  - :details: 
      :rcov: uncovered code is 80.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: -6616256744
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#set_column_comments
      simple_method_name: "#set_column_comments"
  - :details: 
      :rcov: uncovered code is 80.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)
      file_path: lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: -7129208884
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#invert_set_column_comment
      simple_method_name: "#invert_set_column_comment"
  - :details: 
      :rcov: uncovered code is 80.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :SchemaMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb
      hash: 1055659623
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :SchemaMethods)#drop_table_with_schema_option
      simple_method_name: "#drop_table_with_schema_option"
  - :details: 
      :rcov: uncovered code is 75.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)
      file_path: lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: 7020987391
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#invert_set_column_comments
      simple_method_name: "#invert_set_column_comments"
  - :details: 
      :rcov: uncovered code is 75.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: 6937279444
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#remove_table_comment
      simple_method_name: "#remove_table_comment"
  - :details: 
      :rcov: uncovered code is 75.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: PgPower
      file_path: lib/pg_power/tools.rb
      hash: 8332611467
      method_name: PgPower#drop_schema
      simple_method_name: "#drop_schema"
  - :details: 
      :rcov: uncovered code is 75.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: 7974843997
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#set_table_comment
      simple_method_name: "#set_table_comment"
  - :details: 
      :rcov: uncovered code is 75.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)
      file_path: lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: -7097970873
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#invert_set_table_comment
      simple_method_name: "#invert_set_table_comment"
  - :details: 
      :rcov: uncovered code is 75.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: 6539952949
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#remove_column_comment
      simple_method_name: "#remove_column_comment"
  - :details: 
      :rcov: uncovered code is 75.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: -7425793223
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#set_column_comment
      simple_method_name: "#set_column_comment"
  - :details: 
      :rcov: uncovered code is 75.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: PgPower
      file_path: lib/pg_power/tools.rb
      hash: 7859842451
      method_name: PgPower#create_schema
      simple_method_name: "#create_schema"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :ForeignerMethods)
      file_path: lib/pg_power/connection_adapters/table/foreigner_methods.rb
      hash: 6989527831
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :ForeignerMethods)#foreign_key
      simple_method_name: "#foreign_key"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :ForeignerMethods)
      file_path: lib/pg_power/migration/command_recorder/foreigner_methods.rb
      hash: -2768068251
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :ForeignerMethods)#remove_foreign_key
      simple_method_name: "#remove_foreign_key"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/table/comment_methods.rb
      hash: 741171832
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#set_table_comment
      simple_method_name: "#set_table_comment"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)
      file_path: lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: -8284594797
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#set_column_comment
      simple_method_name: "#set_column_comment"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: 7245982155
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#supports_comments?
      simple_method_name: "#supports_comments?"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb
      hash: -3408428639
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)#foreign_keys
      simple_method_name: "#foreign_keys"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)
      file_path: lib/pg_power/migration/command_recorder/schema_methods.rb
      hash: -5814496437
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)#invert_create_schema
      simple_method_name: "#invert_create_schema"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)
      file_path: lib/pg_power/migration/command_recorder/schema_methods.rb
      hash: -5772616448
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)#drop_schema
      simple_method_name: "#drop_schema"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb
      hash: 6856429665
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#supports_comments?
      simple_method_name: "#supports_comments?"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)
      file_path: lib/pg_power/migration/command_recorder/schema_methods.rb
      hash: 4805140225
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)#invert_drop_schema
      simple_method_name: "#invert_drop_schema"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/table/comment_methods.rb
      hash: 2124571273
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#set_column_comments
      simple_method_name: "#set_column_comments"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :ForeignerMethods)
      file_path: lib/pg_power/connection_adapters/table/foreigner_methods.rb
      hash: 7825942937
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :ForeignerMethods)#remove_foreign_key
      simple_method_name: "#remove_foreign_key"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/table/comment_methods.rb
      hash: -47706507
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#remove_column_comments
      simple_method_name: "#remove_column_comments"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)
      file_path: lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: 8569378003
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#remove_column_comment
      simple_method_name: "#remove_column_comment"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/table/comment_methods.rb
      hash: 1743317327
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#remove_column_comment
      simple_method_name: "#remove_column_comment"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb
      hash: -3211964951
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)#supports_foreign_keys?
      simple_method_name: "#supports_foreign_keys?"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/table/comment_methods.rb
      hash: -131366053
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#remove_table_comment
      simple_method_name: "#remove_table_comment"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)
      file_path: lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: -7541168652
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#set_table_comment
      simple_method_name: "#set_table_comment"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)
      file_path: lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: 7939407576
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#set_column_comments
      simple_method_name: "#set_column_comments"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :SchemaMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb
      hash: 506178941
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :SchemaMethods)#create_schema
      simple_method_name: "#create_schema"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :SchemaMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb
      hash: 1176028202
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :SchemaMethods)#drop_schema
      simple_method_name: "#drop_schema"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)
      file_path: lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: -6725670336
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#remove_column_comments
      simple_method_name: "#remove_column_comments"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)
      file_path: lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: -6675589584
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#remove_table_comment
      simple_method_name: "#remove_table_comment"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)
      file_path: lib/pg_power/migration/command_recorder/schema_methods.rb
      hash: 5114502344
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)#create_schema
      simple_method_name: "#create_schema"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/table/comment_methods.rb
      hash: 374019940
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#set_column_comment
      simple_method_name: "#set_column_comment"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :ForeignerMethods)
      file_path: lib/pg_power/migration/command_recorder/foreigner_methods.rb
      hash: 2751452949
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :ForeignerMethods)#add_foreign_key
      simple_method_name: "#add_foreign_key"
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :IndexMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/index_methods.rb
      hash: -5992638579
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :IndexMethods)#supports_partial_index?
      simple_method_name: "#supports_partial_index?"
  - :details: 
      :flog: complexity is 63.3
      :reek: found 6 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: SchemaStatements
      file_path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
      hash: 6217268795
      method_name: SchemaStatements#index_exists?
      simple_method_name: "#index_exists?"
  - :details: 
      :flog: complexity is 59.3
      :rcov: uncovered code is 0.0%
      :reek: found 5 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: SchemaDumper
      file_path: ./lib/core_ext/active_record/schema_dumper.rb
      hash: -1798932169
      method_name: SchemaDumper#indexes
      simple_method_name: "#indexes"
  - :details: 
      :flog: complexity is 41.9
      :rcov: uncovered code is 13.9%
      :reek: found 3 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: PostgreSQLAdapter
      file_path: ./lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb
      hash: 2271838324
      method_name: PostgreSQLAdapter#indexes
      simple_method_name: "#indexes"
  - :details: 
      :flog: average complexity is 54.9
      :reek: found 9 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      hash: 3761900731
      method_name: ForeignerMethods#foreign_keys
      simple_method_name: "#foreign_keys"
  - :details: 
      :flog: complexity is 54.5
    :location: !ruby/object:MetricFu::Location 
      class_name: initializer
      file_path: ./lib/pg_power/engine.rb:43
      hash: -388126107
      method_name: initializer#pg_power
      simple_method_name: "#pg_power"
  - :details: 
      :rcov: uncovered code is 33.3%
    :location: !ruby/object:MetricFu::Location 
      class_name: ActiveRecord
      file_path: lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
      hash: 6746049024
      method_name: ActiveRecord#add_index_options
      simple_method_name: "#add_index_options"
  - :details: 
      :rcov: uncovered code is 31.2%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :ForeignerMethods)
      file_path: lib/pg_power/schema_dumper/foreigner_methods.rb
      hash: 5609148529
      method_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :ForeignerMethods)#tables_with_foreign_keys
      simple_method_name: "#tables_with_foreign_keys"
  - :details: 
      :flog: complexity is 29.5
      :reek: found 3 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: SchemaStatements
      file_path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
      hash: -5912138393
      method_name: SchemaStatements#add_index_options
      simple_method_name: "#add_index_options"
  - :details: 
      :flog: complexity is 26.4
      :reek: found 4 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      hash: 3809902253
      method_name: ForeignerMethods#add_foreign_key_sql
      simple_method_name: "#add_foreign_key_sql"
  - :details: 
      :flog: complexity is 24.0
      :reek: found 2 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/schema_dumper/foreigner_methods.rb
      hash: 3149269654
      method_name: ForeignerMethods#tables_with_foreign_keys
      simple_method_name: "#tables_with_foreign_keys"
  - :details: 
      :flog: complexity is 21.3
    :location: !ruby/object:MetricFu::Location 
      class_name: AbstractAdapter
      file_path: 
      hash: 3265428524
      method_name: AbstractAdapter#none
      simple_method_name: "#none"
  - :details: 
      :flog: complexity is 19.3
    :location: !ruby/object:MetricFu::Location 
      class_name: SchemaDumper
      file_path: 
      hash: 2067476253
      method_name: SchemaDumper#none
      simple_method_name: "#none"
  - :details: 
      :flog: complexity is 17.6
    :location: !ruby/object:MetricFu::Location 
      class_name: PostgreSQLAdapter
      file_path: 
      hash: 3066377511
      method_name: PostgreSQLAdapter#none
      simple_method_name: "#none"
  - :details: 
      :flog: complexity is 16.3
      :reek: found 3 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/schema_dumper/comment_methods.rb
      hash: 7843105825
      method_name: CommentMethods#dump_comments
      simple_method_name: "#dump_comments"
  - :details: 
      :rcov: uncovered code is 15.4%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :ForeignerMethods)
      file_path: lib/pg_power/schema_dumper/foreigner_methods.rb
      hash: -5505023113
      method_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :ForeignerMethods)#foreign_keys
      simple_method_name: "#foreign_keys"
  - :details: 
      :flog: complexity is 13.6
      :reek: found 3 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: CreateDemographyCitizens
      file_path: ./spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb
      hash: 2261119456
      method_name: CreateDemographyCitizens#change
      simple_method_name: "#change"
  - :details: 
      :flog: complexity is 14.4
    :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb:40
      hash: -2650490345
      method_name: ForeignerMethods#references_with_foreign_keys
      simple_method_name: "#references_with_foreign_keys"
  - :details: 
      :flog: complexity is 13.3
    :location: !ruby/object:MetricFu::Location 
      class_name: Table
      file_path: 
      hash: -2225292779
      method_name: Table#none
      simple_method_name: "#none"
  - :details: 
      :flog: complexity is 12.8
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      hash: 2871006929
      method_name: ForeignerMethods#remove_foreign_key_sql
      simple_method_name: "#remove_foreign_key_sql"
  - :details: 
      :flog: complexity is 13.0
    :location: !ruby/object:MetricFu::Location 
      class_name: create_table#demography
      file_path: ./spec/dummy/db/schema.rb:59
      hash: 1727973182
      method_name: create_table#demography.citizens
      simple_method_name: .citizens
  - :details: 
      :flog: complexity is 11.6
      :reek: found 5 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/migration/command_recorder/foreigner_methods.rb
      hash: -7140772419
      method_name: ForeignerMethods#invert_add_foreign_key
      simple_method_name: "#invert_add_foreign_key"
  - :details: 
      :flog: complexity is 12.1
    :location: !ruby/object:MetricFu::Location 
      class_name: CommandRecorder
      file_path: 
      hash: 105372823
      method_name: CommandRecorder#none
      simple_method_name: "#none"
  - :details: 
      :flog: complexity is 11.2
      :reek: found 3 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: CreatePets
      file_path: ./spec/dummy/db/migrate/20120105112744_create_pets.rb
      hash: -781314666
      method_name: CreatePets#change
      simple_method_name: "#change"
  - :details: 
      :flog: complexity is 10.8
      :reek: found 2 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: CreateUsers
      file_path: ./spec/dummy/db/migrate/20120106163544_create_users.rb
      hash: 1129889471
      method_name: CreateUsers#change
      simple_method_name: "#change"
  - :details: 
      :flog: complexity is 11.2
    :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/schema_dumper/comment_methods.rb:5
      hash: 2121653291
      method_name: CommentMethods#tables_with_comments
      simple_method_name: "#tables_with_comments"
  - :details: 
      :flog: complexity is 10.9
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: 4378743970
      method_name: CommentMethods#comments
      simple_method_name: "#comments"
  - :details: 
      :flog: complexity is 10.9
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/comment_methods_spec.rb:33
      hash: 7265315563
      method_name: describe#describe#it#sets comments on columns
      simple_method_name: describe#describe#it#sets comments on columns
  - :details: 
      :flog: complexity is 10.9
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/comment_methods_spec.rb:38
      hash: -7456135965
      method_name: describe#describe#it#sets comments on columns of non-public schemas
      simple_method_name: describe#describe#it#sets comments on columns of non-public schemas
  - :details: 
      :flog: complexity is 10.2
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/foreign_keys_spec.rb:55
      hash: 6444432985
      method_name: describe#describe#it#should not raise an exception if the index does not exist
      simple_method_name: describe#describe#it#should not raise an exception if the index does not exist
  - :details: 
      :flog: complexity is 10.0
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/comment_methods_spec.rb:57
      hash: 7323589848
      method_name: describe#describe#it#removes comment on column
      simple_method_name: describe#describe#it#removes comment on column
  - :details: 
      :flog: complexity is 9.8
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/comment_methods_spec.rb:64
      hash: 7944367470
      method_name: describe#describe#it#removes comment on columns
      simple_method_name: describe#describe#it#removes comment on columns
  - :details: 
      :flog: complexity is 9.1
    :location: !ruby/object:MetricFu::Location 
      class_name: create_table
      file_path: ./spec/dummy/db/schema.rb:26
      hash: -3858904860
      method_name: create_table#pets
      simple_method_name: "#pets"
  - :details: 
      :flog: complexity is 8.4
      :reek: found 2 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: -488486820
      method_name: CommentMethods#invert_set_column_comments
      simple_method_name: "#invert_set_column_comments"
  - :details: 
      :flog: complexity is 8.9
    :location: !ruby/object:MetricFu::Location 
      class_name: SchemaStatements
      file_path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb:13
      hash: -6266290457
      method_name: SchemaStatements#add_index
      simple_method_name: "#add_index"
  - :details: 
      :flog: complexity is 8.4
    :location: !ruby/object:MetricFu::Location 
      class_name: Application
      file_path: 
      hash: 3995664749
      method_name: Application#none
      simple_method_name: "#none"
  - :details: 
      :flog: complexity is 8.4
    :location: !ruby/object:MetricFu::Location 
      class_name: PgPower
      file_path: 
      hash: 3583652185
      method_name: PgPower#none
      simple_method_name: "#none"
  - :details: 
      :flog: complexity is 8.0
    :location: !ruby/object:MetricFu::Location 
      class_name: Explorer
      file_path: ./spec/support/explorer.rb:22
      hash: -375899485
      method_name: Explorer#get_column_comment
      simple_method_name: "#get_column_comment"
  - :details: 
      :flog: complexity is 8.0
    :location: !ruby/object:MetricFu::Location 
      class_name: Explorer
      file_path: ./spec/support/explorer.rb:61
      hash: -905275163
      method_name: Explorer#table_exists?
      simple_method_name: "#table_exists?"
  - :details: 
      :flog: complexity is 8.0
    :location: !ruby/object:MetricFu::Location 
      class_name: Explorer
      file_path: ./spec/support/explorer.rb:40
      hash: 2093398281
      method_name: Explorer#has_foreign_key?
      simple_method_name: "#has_foreign_key?"
  - :details: 
      :flog: complexity is 8.0
    :location: !ruby/object:MetricFu::Location 
      class_name: Explorer
      file_path: ./spec/support/explorer.rb:6
      hash: 7359859757
      method_name: Explorer#get_table_comment
      simple_method_name: "#get_table_comment"
  - :details: 
      :flog: complexity is 7.4
      :reek: found 2 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: CreateDemographyCountries
      file_path: ./spec/dummy/db/migrate/20120106163810_create_demography_countries.rb
      hash: 3953723266
      method_name: CreateDemographyCountries#change
      simple_method_name: "#change"
  - :details: 
      :flog: average complexity is 7.2
      :reek: found 3 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      hash: -2414239046
      method_name: ForeignerMethods#add_foreign_key
      simple_method_name: "#add_foreign_key"
  - :details: 
      :flog: complexity is 7.8
    :location: !ruby/object:MetricFu::Location 
      class_name: create_table
      file_path: ./spec/dummy/db/schema.rb:38
      hash: -2244447552
      method_name: create_table#users
      simple_method_name: "#users"
  - :details: 
      :flog: complexity is 7.7
    :location: !ruby/object:MetricFu::Location 
      class_name: ConnectionAdapters
      file_path: 
      hash: 1376387202
      method_name: ConnectionAdapters#none
      simple_method_name: "#none"
  - :details: 
      :flog: complexity is 7.6
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::before
      file_path: ./spec/active_record/schema_dumper_spec.rb:6
      hash: 4527018367
      method_name: describe#before#all
      simple_method_name: describe#before#all
  - :details: 
      :flog: complexity is 7.6
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:75
      hash: -4464432608
      method_name: describe#describe#it#should be true for a compound :where clause
      simple_method_name: describe#describe#it#should be true for a compound :where clause
  - :details: 
      :flog: complexity is 7.6
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:63
      hash: 4391470762
      method_name: describe#describe#it#should be true for a :where clause that includes NULL comparison
      simple_method_name: describe#describe#it#should be true for a :where clause that includes NULL comparison
  - :details: 
      :flog: complexity is 7.6
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:51
      hash: 5247939434
      method_name: describe#describe#it#should be true for a :where clause that includes boolean comparison
      simple_method_name: describe#describe#it#should be true for a :where clause that includes boolean comparison
  - :details: 
      :flog: complexity is 7.6
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:69
      hash: 6343498955
      method_name: describe#describe#it#should be true for a :where clause that includes integer comparison
      simple_method_name: describe#describe#it#should be true for a :where clause that includes integer comparison
  - :details: 
      :flog: complexity is 7.6
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:57
      hash: 4953207890
      method_name: describe#describe#it#should be true for a :where clause that includes text comparison
      simple_method_name: describe#describe#it#should be true for a :where clause that includes text comparison
  - :details: 
      :flog: complexity is 7.4
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:43
      hash: 6600274515
      method_name: describe#context#it#dumps indexes
      simple_method_name: describe#context#it#dumps indexes
  - :details: 
      :flog: complexity is 6.6
      :reek: found 2 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: Explorer
      file_path: ./spec/support/explorer.rb
      hash: -2045725750
      method_name: Explorer#to_schema_and_table
      simple_method_name: "#to_schema_and_table"
  - :details: 
      :flog: complexity is 7.1
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:11
      hash: 4931278541
      method_name: describe#describe#it#should be built with the :where option
      simple_method_name: describe#describe#it#should be built with the :where option
  - :details: 
      :flog: complexity is 6.9
    :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/schema_dumper/schema_methods.rb:14
      hash: 4981214874
      method_name: SchemaMethods#schemas
      simple_method_name: "#schemas"
  - :details: 
      :flog: complexity is 6.4
      :reek: found 2 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      hash: 2218564442
      method_name: ForeignerMethods#foreign_key_column_id_from_table_name
      simple_method_name: "#foreign_key_column_id_from_table_name"
  - :details: 
      :flog: complexity is 6.5
    :location: !ruby/object:MetricFu::Location 
      class_name: create_table#demography
      file_path: ./spec/dummy/db/schema.rb:68
      hash: -558696859
      method_name: create_table#demography.countries
      simple_method_name: .countries
  - :details: 
      :flog: complexity is 6.3
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:35
      hash: -4900799995
      method_name: describe#describe#it#should be true for a valid set of options including name
      simple_method_name: describe#describe#it#should be true for a valid set of options including name
  - :details: 
      :flog: complexity is 6.3
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:45
      hash: -5775623370
      method_name: describe#describe#it#should be false for invalid options
      simple_method_name: describe#describe#it#should be false for invalid options
  - :details: 
      :flog: complexity is 6.3
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:40
      hash: 4922543964
      method_name: describe#describe#it#should be false for a subset of valid options
      simple_method_name: describe#describe#it#should be false for a subset of valid options
  - :details: 
      :flog: complexity is 6.3
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:30
      hash: 5827287674
      method_name: describe#describe#it#should be true for a valid set of options
      simple_method_name: describe#describe#it#should be true for a valid set of options
  - :details: 
      :flog: complexity is 5.8
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: IndexMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
      hash: -3970205107
      method_name: IndexMethods#index_name_for_remove
      simple_method_name: "#index_name_for_remove"
  - :details: 
      :flog: complexity is 5.9
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:17
      hash: 8372201340
      method_name: describe#context#it#dumps schemas
      simple_method_name: describe#context#it#dumps schemas
  - :details: 
      :flog: complexity is 5.9
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/comment_methods_spec.rb:21
      hash: 7037899585
      method_name: describe#describe#it#sets comment on column
      simple_method_name: describe#describe#it#sets comment on column
  - :details: 
      :flog: complexity is 5.9
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/comment_methods_spec.rb:26
      hash: -7622038814
      method_name: describe#describe#it#sets comment on column of non-public schema
      simple_method_name: describe#describe#it#sets comment on column of non-public schema
  - :details: 
      :flog: complexity is 5.9
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/comment_methods_spec.rb:14
      hash: -8411719567
      method_name: describe#describe#it#sets comment on table of non-public schema
      simple_method_name: describe#describe#it#sets comment on table of non-public schema
  - :details: 
      :flog: complexity is 5.9
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/comment_methods_spec.rb:9
      hash: -7914908570
      method_name: describe#describe#it#sets comment on table
      simple_method_name: describe#describe#it#sets comment on table
  - :details: 
      :flog: complexity is 5.2
      :reek: found 3 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      hash: -4134903236
      method_name: ForeignerMethods#foreign_key_name
      simple_method_name: "#foreign_key_name"
  - :details: 
      :flog: complexity is 5.8
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:25
      hash: -5547843080
      method_name: describe#describe#it#should be true for simple options on a schema table
      simple_method_name: describe#describe#it#should be true for simple options on a schema table
  - :details: 
      :flog: complexity is 5.8
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:17
      hash: 5463141435
      method_name: describe#describe#it#should be true for simple options
      simple_method_name: describe#describe#it#should be true for simple options
  - :details: 
      :flog: complexity is 5.8
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/indexes_spec.rb:21
      hash: -5650994646
      method_name: describe#describe#it#should support table name as a symbol
      simple_method_name: describe#describe#it#should support table name as a symbol
  - :details: 
      :flog: complexity is 5.6
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/comment_methods_spec.rb:50
      hash: 7481649792
      method_name: describe#describe#it#removes comment on table of non-public schema
      simple_method_name: describe#describe#it#removes comment on table of non-public schema
  - :details: 
      :flog: complexity is 5.6
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/comment_methods_spec.rb:46
      hash: -8313900458
      method_name: describe#describe#it#removes comment on table
      simple_method_name: describe#describe#it#removes comment on table
  - :details: 
      :flog: complexity is 5.5
    :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:150
      hash: -4651434507
      method_name: ForeignerMethods#dependency_sql
      simple_method_name: "#dependency_sql"
  - :details: 
      :flog: complexity is 5.4
    :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb:6
      hash: 2523260864
      method_name: SchemaMethods#create_table_with_schema_option
      simple_method_name: "#create_table_with_schema_option"
  - :details: 
      :flog: complexity is 5.4
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::context::it
      file_path: ./spec/schema_methods_spec.rb:17
      hash: -5874025492
      method_name: describe#describe#context#it#removes table in passed schema
      simple_method_name: describe#describe#context#it#removes table in passed schema
  - :details: 
      :flog: complexity is 5.4
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/foreign_keys_spec.rb:13
      hash: -8455005823
      method_name: describe#describe#it#adds an index on the foreign key
      simple_method_name: describe#describe#it#adds an index on the foreign key
  - :details: 
      :flog: complexity is 5.4
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/foreign_keys_spec.rb:19
      hash: 6600667839
      method_name: describe#describe#it#should not add an index on the foreign key when :exclude_index is true
      simple_method_name: describe#describe#it#should not add an index on the foreign key when :exclude_index is true
  - :details: 
      :flog: complexity is 5.4
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/foreign_keys_spec.rb:41
      hash: -7656557017
      method_name: describe#describe#it#removes the index on the foreign key
      simple_method_name: describe#describe#it#removes the index on the foreign key
  - :details: 
      :flog: complexity is 5.4
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::context::it
      file_path: ./spec/schema_methods_spec.rb:8
      hash: -8068931673
      method_name: describe#describe#context#it#creates table in passed schema
      simple_method_name: describe#describe#context#it#creates table in passed schema
  - :details: 
      :flog: complexity is 5.4
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/foreign_keys_spec.rb:47
      hash: 7411004571
      method_name: describe#describe#it#should not remove the index when :exclude_index is true
      simple_method_name: describe#describe#it#should not remove the index when :exclude_index is true
  - :details: 
      :flog: complexity is 5.4
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/foreign_keys_spec.rb:7
      hash: 4998723108
      method_name: describe#describe#it#adds foreign key
      simple_method_name: describe#describe#it#adds foreign key
  - :details: 
      :flog: complexity is 5.4
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/foreign_keys_spec.rb:35
      hash: -8085915044
      method_name: describe#describe#it#removes foreign key
      simple_method_name: describe#describe#it#removes foreign key
  - :details: 
      :flog: average complexity is 5.3
    :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:113
      hash: -5842563190
      method_name: ForeignerMethods#remove_foreign_key
      simple_method_name: "#remove_foreign_key"
  - :details: 
      :flog: complexity is 5.1
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: CreateCitiesTable
      file_path: ./spec/dummy/db/migrate/20120209094937_create_cities_table.rb
      hash: 607152622
      method_name: CreateCitiesTable#change
      simple_method_name: "#change"
  - :details: 
      :flog: complexity is 4.4
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: Tools
      file_path: ./lib/pg_power/tools.rb
      hash: 4893414886
      method_name: Tools#schemas
      simple_method_name: "#schemas"
  - :details: 
      :flog: complexity is 4.6
    :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb:13
      hash: -849416536
      method_name: SchemaMethods#drop_table_with_schema_option
      simple_method_name: "#drop_table_with_schema_option"
  - :details: 
      :flog: complexity is 4.0
      :reek: found 2 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: DemographyPopulationStatisctics
      file_path: ./spec/dummy/db/migrate/20120301153650_demography_population_statisctics.rb
      hash: 2018789403
      method_name: DemographyPopulationStatisctics#change
      simple_method_name: "#change"
  - :details: 
      :flog: complexity is 4.4
    :location: !ruby/object:MetricFu::Location 
      class_name: Explorer
      file_path: 
      hash: -2211015647
      method_name: Explorer#none
      simple_method_name: "#none"
  - :details: 
      :flog: complexity is 4.4
    :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: 
      hash: -1451209667
      method_name: SchemaMethods#none
      simple_method_name: "#none"
  - :details: 
      :flog: complexity is 4.4
    :location: !ruby/object:MetricFu::Location 
      class_name: AddForeignKeys
      file_path: ./spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb:2
      hash: 121714432
      method_name: AddForeignKeys#change
      simple_method_name: "#change"
  - :details: 
      :flog: complexity is 4.4
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:59
      hash: 7377605102
      method_name: describe#context#it#dumps foreign keys from non-public schemas
      simple_method_name: describe#context#it#dumps foreign keys from non-public schemas
  - :details: 
      :flog: complexity is 4.3
    :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/schema_dumper/schema_methods.rb:31
      hash: -5375656879
      method_name: SchemaMethods#non_public_schema_tables
      simple_method_name: "#non_public_schema_tables"
  - :details: 
      :flog: complexity is 4.2
    :location: !ruby/object:MetricFu::Location 
      class_name: Explorer
      file_path: ./spec/support/explorer.rb:57
      hash: -1223250625
      method_name: Explorer#index_exists?
      simple_method_name: "#index_exists?"
  - :details: 
      :flog: complexity is 3.7
      :reek: found 2 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: -1936605105
      method_name: CommentMethods#invert_set_column_comment
      simple_method_name: "#invert_set_column_comment"
  - :details: 
      :flog: complexity is 4.0
    :location: !ruby/object:MetricFu::Location 
      class_name: create_table#demography
      file_path: ./spec/dummy/db/schema.rb:73
      hash: 257529365
      method_name: create_table#demography.population_statistics
      simple_method_name: .population_statistics
  - :details: 
      :flog: complexity is 4.0
    :location: !ruby/object:MetricFu::Location 
      class_name: create_table#demography
      file_path: ./spec/dummy/db/schema.rb:45
      hash: 1439152203
      method_name: create_table#demography.cities
      simple_method_name: .cities
  - :details: 
      :flog: complexity is 3.6
    :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/schema_dumper/schema_methods.rb:7
      hash: -3401872091
      method_name: SchemaMethods#tables_with_schemas
      simple_method_name: "#tables_with_schemas"
  - :details: 
      :flog: complexity is 3.3
    :location: !ruby/object:MetricFu::Location 
      class_name: CreateDemographySchema
      file_path: ./spec/dummy/db/migrate/20120106163711_create_demography_schema.rb:2
      hash: 7810549038
      method_name: CreateDemographySchema#change
      simple_method_name: "#change"
  - :details: 
      :flog: complexity is 3.3
    :location: !ruby/object:MetricFu::Location 
      class_name: Migration
      file_path: 
      hash: -179079084
      method_name: Migration#none
      simple_method_name: "#none"
  - :details: 
      :flog: complexity is 2.9
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: Tools
      file_path: ./lib/pg_power/tools.rb
      hash: 4520978563
      method_name: Tools#create_schema
      simple_method_name: "#create_schema"
  - :details: 
      :flog: complexity is 2.9
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: Tools
      file_path: ./lib/pg_power/tools.rb
      hash: 6061634306
      method_name: Tools#drop_schema
      simple_method_name: "#drop_schema"
  - :details: 
      :flog: complexity is 2.8
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: CreateDemographyNationalities
      file_path: ./spec/dummy/db/migrate/20120301152819_create_demography_nationalities.rb
      hash: 5371131666
      method_name: CreateDemographyNationalities#change
      simple_method_name: "#change"
  - :details: 
      :flog: complexity is 2.8
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:69
      hash: -7310559135
      method_name: describe#context#it#dumps table comments from non-public schemas
      simple_method_name: describe#context#it#dumps table comments from non-public schemas
  - :details: 
      :flog: complexity is 2.8
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:26
      hash: -8397095814
      method_name: describe#context#it#dumps tables
      simple_method_name: describe#context#it#dumps tables
  - :details: 
      :flog: complexity is 2.8
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:77
      hash: 6498778243
      method_name: describe#context#it#dumps column comments from non-public schemas
      simple_method_name: describe#context#it#dumps column comments from non-public schemas
  - :details: 
      :flog: complexity is 2.8
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:30
      hash: -7440313205
      method_name: describe#context#it#dumps tables from non-public schemas
      simple_method_name: describe#context#it#dumps tables from non-public schemas
  - :details: 
      :flog: complexity is 2.8
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:73
      hash: -7038312900
      method_name: describe#context#it#dumps column comments
      simple_method_name: describe#context#it#dumps column comments
  - :details: 
      :flog: complexity is 2.8
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:65
      hash: 8365315962
      method_name: describe#context#it#dumps table comments
      simple_method_name: describe#context#it#dumps table comments
  - :details: 
      :flog: complexity is 2.8
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:48
      hash: -6446874704
      method_name: describe#context#it#dumps indexes from non-public schemas
      simple_method_name: describe#context#it#dumps indexes from non-public schemas
  - :details: 
      :flog: complexity is 2.8
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:20
      hash: -7780598301
      method_name: describe#context#it#dumps schemas in alphabetical order
      simple_method_name: describe#context#it#dumps schemas in alphabetical order
  - :details: 
      :flog: complexity is 2.8
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:54
      hash: -7888571802
      method_name: describe#context#it#dumps foreign keys
      simple_method_name: describe#context#it#dumps foreign keys
  - :details: 
      :flog: complexity is 2.7
    :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/schema_dumper/schema_methods.rb:41
      hash: -5829390160
      method_name: SchemaMethods#get_non_public_schema_table_names
      simple_method_name: "#get_non_public_schema_table_names"
  - :details: 
      :flog: complexity is 2.4
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::context
      file_path: ./spec/schema_methods_spec.rb:18
      hash: -7055983302
      method_name: describe#describe#context#with :schema option
      simple_method_name: describe#describe#context#with :schema option
  - :details: 
      :flog: complexity is 2.4
    :location: !ruby/object:MetricFu::Location 
      class_name: RemoveForeignKeys
      file_path: ./spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb:2
      hash: -7347646772
      method_name: RemoveForeignKeys#up
      simple_method_name: "#up"
  - :details: 
      :flog: complexity is 2.4
    :location: !ruby/object:MetricFu::Location 
      class_name: RemoveCommentsOnCountriesTable
      file_path: ./spec/dummy/db/migrate/20120207103858_remove_comments_on_countries_table.rb:2
      hash: 6642709114
      method_name: RemoveCommentsOnCountriesTable#up
      simple_method_name: "#up"
  - :details: 
      :flog: complexity is 2.4
    :location: !ruby/object:MetricFu::Location 
      class_name: RemoveForeignKeys
      file_path: ./spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb:7
      hash: -7751830197
      method_name: RemoveForeignKeys#down
      simple_method_name: "#down"
  - :details: 
      :flog: average complexity is 2.4
    :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:28
      hash: 1773378520
      method_name: CommentMethods#set_column_comments
      simple_method_name: "#set_column_comments"
  - :details: 
      :flog: average complexity is 2.4
    :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: 
      hash: -2784274828
      method_name: ForeignerMethods#none
      simple_method_name: "#none"
  - :details: 
      :flog: complexity is 2.2
    :location: !ruby/object:MetricFu::Location 
      class_name: Tools
      file_path: 
      hash: -3010251807
      method_name: Tools#none
      simple_method_name: "#none"
  - :details: 
      :flog: complexity is 2.2
    :location: !ruby/object:MetricFu::Location 
      class_name: AddDemographyCitizensActiveColumn
      file_path: ./spec/dummy/db/migrate/20120224204546_add_demography_citizens_active_column.rb:2
      hash: -4176373909
      method_name: AddDemographyCitizensActiveColumn#change
      simple_method_name: "#change"
  - :details: 
      :flog: average complexity is 2.1
    :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:44
      hash: 837650606
      method_name: CommentMethods#remove_column_comment
      simple_method_name: "#remove_column_comment"
  - :details: 
      :flog: average complexity is 2.1
    :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:20
      hash: 1045016484
      method_name: CommentMethods#set_column_comment
      simple_method_name: "#set_column_comment"
  - :details: 
      :flog: complexity is 2.0
    :location: !ruby/object:MetricFu::Location 
      class_name: IndexDefinition
      file_path: 
      hash: 1851560578
      method_name: IndexDefinition#none
      simple_method_name: "#none"
  - :details: 
      :flog: complexity is 2.0
    :location: !ruby/object:MetricFu::Location 
      class_name: ForeignKeyDefinition
      file_path: 
      hash: 2531047846
      method_name: ForeignKeyDefinition#none
      simple_method_name: "#none"
  - :details: 
      :flog: complexity is 1.7
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: 1904173021
      method_name: CommentMethods#invert_set_table_comment
      simple_method_name: "#invert_set_table_comment"
  - :details: 
      :flog: complexity is 1.8
    :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:55
      hash: -2497622866
      method_name: ForeignerMethods#drop_table
      simple_method_name: "#drop_table"
  - :details: 
      :flog: average complexity is 1.8
    :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:50
      hash: -2331140119
      method_name: CommentMethods#remove_column_comments
      simple_method_name: "#remove_column_comments"
  - :details: 
      :flog: complexity is 1.8
    :location: !ruby/object:MetricFu::Location 
      class_name: Explorer
      file_path: ./spec/support/explorer.rb:84
      hash: -1792354099
      method_name: Explorer#connection
      simple_method_name: "#connection"
  - :details: 
      :flog: complexity is 1.7
    :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb:16
      hash: -2703816883
      method_name: ForeignerMethods#foreign_key
      simple_method_name: "#foreign_key"
  - :details: 
      :flog: average complexity is 1.7
    :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:11
      hash: -874559789
      method_name: CommentMethods#set_table_comment
      simple_method_name: "#set_table_comment"
  - :details: 
      :flog: average complexity is 1.7
    :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:36
      hash: 143474308
      method_name: CommentMethods#remove_table_comment
      simple_method_name: "#remove_table_comment"
  - :details: 
      :flog: complexity is 1.2
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/migration/command_recorder/schema_methods.rb
      hash: 1606537451
      method_name: SchemaMethods#invert_create_schema
      simple_method_name: "#invert_create_schema"
  - :details: 
      :flog: complexity is 1.2
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/schema_dumper/schema_methods.rb
      hash: 3919603721
      method_name: SchemaMethods#schema
      simple_method_name: "#schema"
  - :details: 
      :flog: complexity is 1.2
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/migration/command_recorder/schema_methods.rb
      hash: 1072472675
      method_name: SchemaMethods#invert_drop_schema
      simple_method_name: "#invert_drop_schema"
  - :details: 
      :flog: complexity is 1.3
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::context
      file_path: ./spec/active_record/schema_dumper_spec.rb:31
      hash: -7076168524
      method_name: describe#context#Tables
      simple_method_name: describe#context#Tables
  - :details: 
      :flog: complexity is 1.3
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::context
      file_path: ./spec/active_record/schema_dumper_spec.rb:49
      hash: -6707523728
      method_name: describe#context#Indexes
      simple_method_name: describe#context#Indexes
  - :details: 
      :flog: complexity is 1.3
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::context
      file_path: ./spec/active_record/schema_dumper_spec.rb:78
      hash: 6567974436
      method_name: describe#context#Comments
      simple_method_name: describe#context#Comments
  - :details: 
      :flog: complexity is 1.3
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::context
      file_path: ./spec/active_record/schema_dumper_spec.rb:60
      hash: 6916497647
      method_name: describe#context#Foreign keys
      simple_method_name: describe#context#Foreign keys
  - :details: 
      :flog: complexity is 1.3
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::context
      file_path: ./spec/active_record/schema_dumper_spec.rb:21
      hash: 7777360863
      method_name: describe#context#Schemas
      simple_method_name: describe#context#Schemas
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/schema_methods_spec.rb:10
      hash: 6414358279
      method_name: describe#describe##create_table
      simple_method_name: describe#describe##create_table
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/schema_methods_spec.rb:19
      hash: -6201524914
      method_name: describe#describe##drop_table
      simple_method_name: describe#describe##drop_table
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/comment_methods_spec.rb:65
      hash: 8434242054
      method_name: describe#describe##remove_column_comments
      simple_method_name: describe#describe##remove_column_comments
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/comment_methods_spec.rb:39
      hash: 8545474468
      method_name: describe#describe##set_column_comments
      simple_method_name: describe#describe##set_column_comments
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/comment_methods_spec.rb:27
      hash: -6487632924
      method_name: describe#describe##set_column_comment
      simple_method_name: describe#describe##set_column_comment
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/comment_methods_spec.rb:58
      hash: 6469794219
      method_name: describe#describe##remove_column_comment
      simple_method_name: describe#describe##remove_column_comment
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: describe#
      file_path: ./spec/active_record/schema_dumper_spec.rb:80
      hash: -2793221365
      method_name: describe#.dump
      simple_method_name: .dump
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/comment_methods_spec.rb:51
      hash: 7169397492
      method_name: describe#describe##remove_table_comment
      simple_method_name: describe#describe##remove_table_comment
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/comment_methods_spec.rb:15
      hash: 6882786684
      method_name: describe#describe##set_table_comment
      simple_method_name: describe#describe##set_table_comment
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: RemoveCommentOnPetsTable
      file_path: ./spec/dummy/db/migrate/20120207112916_remove_comment_on_pets_table.rb:2
      hash: -1797254254
      method_name: RemoveCommentOnPetsTable#up
      simple_method_name: "#up"
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: RemoveSomeCommentsOnCitizens
      file_path: ./spec/dummy/db/migrate/20120208114020_remove_some_comments_on_citizens.rb:6
      hash: -103347343
      method_name: RemoveSomeCommentsOnCitizens#down
      simple_method_name: "#down"
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: RemoveCommentOnPetsTable
      file_path: ./spec/dummy/db/migrate/20120207112916_remove_comment_on_pets_table.rb:6
      hash: -1889624327
      method_name: RemoveCommentOnPetsTable#down
      simple_method_name: "#down"
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: RemoveSomeCommentsOnCitizens
      file_path: ./spec/dummy/db/migrate/20120208114020_remove_some_comments_on_citizens.rb:2
      hash: 1592244113
      method_name: RemoveSomeCommentsOnCitizens#up
      simple_method_name: "#up"
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/indexes_spec.rb:77
      hash: -4977560899
      method_name: describe#describe##index_exists
      simple_method_name: describe#describe##index_exists
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: RemoveCommentsOnCountriesTable
      file_path: ./spec/dummy/db/migrate/20120207103858_remove_comments_on_countries_table.rb:7
      hash: -8312226681
      method_name: RemoveCommentsOnCountriesTable#down
      simple_method_name: "#down"
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/indexes_spec.rb:12
      hash: 4903891740
      method_name: describe#describe##add_index
      simple_method_name: describe#describe##add_index
  - :details: 
      :flog: average complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb:6
      hash: 1317480110
      method_name: SchemaMethods#create_schema
      simple_method_name: "#create_schema"
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: IndexMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb:18
      hash: 859774186
      method_name: IndexMethods#index_name
      simple_method_name: "#index_name"
  - :details: 
      :flog: average complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb:12
      hash: 5027014029
      method_name: SchemaMethods#drop_schema
      simple_method_name: "#drop_schema"
  - :details: 
      :flog: complexity is 1.1
    :location: !ruby/object:MetricFu::Location 
      class_name: describe
      file_path: ./spec/comment_methods_spec.rb:67
      hash: -5524658416
      method_name: describe#Comment methods
      simple_method_name: "#Comment methods"
  - :details: 
      :flog: complexity is 1.1
    :location: !ruby/object:MetricFu::Location 
      class_name: describe
      file_path: ./spec/schema_methods_spec.rb:20
      hash: -7582028324
      method_name: describe#Schema methods
      simple_method_name: "#Schema methods"
  - :details: 
      :flog: complexity is 1.1
    :location: !ruby/object:MetricFu::Location 
      class_name: RemoveDemographyNationalities
      file_path: ./spec/dummy/db/migrate/20120301171826_remove_demography_nationalities.rb:2
      hash: -7018490478
      method_name: RemoveDemographyNationalities#change
      simple_method_name: "#change"
  - :details: 
      :flog: complexity is 1.1
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/foreign_keys_spec.rb:28
      hash: 6888993810
      method_name: describe#describe##add_foreign_key
      simple_method_name: describe#describe##add_foreign_key
  - :details: 
      :flog: complexity is 1.1
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/foreign_keys_spec.rb:56
      hash: -7711852009
      method_name: describe#describe##remove_foreign_key
      simple_method_name: describe#describe##remove_foreign_key
  - :details: 
      :flog: complexity is 1.1
    :location: !ruby/object:MetricFu::Location 
      class_name: describe
      file_path: ./spec/indexes_spec.rb:78
      hash: 7746368794
      method_name: describe#Indexes
      simple_method_name: "#Indexes"
  - :details: 
      :flog: complexity is 1.1
    :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: 
      hash: 1877657835
      method_name: CommentMethods#none
      simple_method_name: "#none"
  - :details: 
      :flog: complexity is 1.1
    :location: !ruby/object:MetricFu::Location 
      class_name: SchemaStatements
      file_path: 
      hash: 1540468909
      method_name: SchemaStatements#none
      simple_method_name: "#none"
  - :details: 
      :flog: complexity is 1.0
    :location: !ruby/object:MetricFu::Location 
      class_name: ApplicationController
      file_path: 
      hash: -1314361703
      method_name: ApplicationController#none
      simple_method_name: "#none"
  - :details: 
      :flog: complexity is 1.0
    :location: !ruby/object:MetricFu::Location 
      class_name: User
      file_path: 
      hash: -690318290
      method_name: User#none
      simple_method_name: "#none"
  - :details: 
      :flog: complexity is 1.0
    :location: !ruby/object:MetricFu::Location 
      class_name: Country
      file_path: 
      hash: -2347870914
      method_name: Country#none
      simple_method_name: "#none"
  - :details: 
      :flog: complexity is 1.0
    :location: !ruby/object:MetricFu::Location 
      class_name: describe
      file_path: ./spec/foreign_keys_spec.rb:57
      hash: -4590524063
      method_name: describe#Foreign keys
      simple_method_name: "#Foreign keys"
  - :details: 
      :flog: complexity is 1.0
    :location: !ruby/object:MetricFu::Location 
      class_name: Citizen
      file_path: 
      hash: -905638117
      method_name: Citizen#none
      simple_method_name: "#none"
  - :details: 
      :rcov: uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)
      file_path: lib/pg_power/schema_dumper/schema_methods.rb
      hash: -3152215565
      method_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)#schema
      simple_method_name: "#schema"
  - :details: 
      :rcov: uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)
      file_path: lib/pg_power/schema_dumper/schema_methods.rb
      hash: 2546560244
      method_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)#schemas
      simple_method_name: "#schemas"
  - :details: 
      :rcov: uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :IndexMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
      hash: 5567781558
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :IndexMethods)#index_name
      simple_method_name: "#index_name"
  - :details: 
      :rcov: uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb
      hash: 3485757470
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)#remove_foreign_key
      simple_method_name: "#remove_foreign_key"
  - :details: 
      :rcov: uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb
      hash: 6728762182
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#remove_table_comment
      simple_method_name: "#remove_table_comment"
  - :details: 
      :rcov: uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb
      hash: 7460672418
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#set_table_comment
      simple_method_name: "#set_table_comment"
  - :details: 
      :rcov: uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb
      hash: -7373176528
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#remove_column_comments
      simple_method_name: "#remove_column_comments"
  - :details: 
      :rcov: uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: PgPower
      file_path: lib/pg_power/tools.rb
      hash: 7382932565
      method_name: PgPower#schemas
      simple_method_name: "#schemas"
  - :details: 
      :rcov: uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)
      file_path: lib/pg_power/schema_dumper/schema_methods.rb
      hash: 4168536864
      method_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)#non_public_schema_tables
      simple_method_name: "#non_public_schema_tables"
  - :details: 
      :rcov: uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)
      file_path: lib/pg_power/schema_dumper/schema_methods.rb
      hash: -3443660513
      method_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)#tables_with_schemas
      simple_method_name: "#tables_with_schemas"
  - :details: 
      :rcov: uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)
      file_path: lib/pg_power/schema_dumper/schema_methods.rb
      hash: 3006709500
      method_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)#get_non_public_schema_table_names
      simple_method_name: "#get_non_public_schema_table_names"
  - :details: 
      :rcov: uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :CommentMethods)
      file_path: lib/pg_power/schema_dumper/comment_methods.rb
      hash: 3962480297
      method_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :CommentMethods)#dump_comments
      simple_method_name: "#dump_comments"
  - :details: 
      :rcov: uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb
      hash: -6457025781
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#set_column_comments
      simple_method_name: "#set_column_comments"
  - :details: 
      :rcov: uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb
      hash: 7679415147
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#set_column_comment
      simple_method_name: "#set_column_comment"
  - :details: 
      :rcov: uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb
      hash: -3474113583
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)#add_foreign_key
      simple_method_name: "#add_foreign_key"
  - :details: 
      :rcov: uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :CommentMethods)
      file_path: lib/pg_power/schema_dumper/comment_methods.rb
      hash: -2592798888
      method_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :CommentMethods)#tables_with_comments
      simple_method_name: "#tables_with_comments"
  - :details: 
      :rcov: uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb
      hash: -7194437355
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#remove_column_comment
      simple_method_name: "#remove_column_comment"
  - :details: 
      :rcov: uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: 7284635604
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#comments
      simple_method_name: "#comments"
  - :details: 
      :rcov: uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: ActiveRecord
      file_path: lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
      hash: 6758501769
      method_name: ActiveRecord#add_index
      simple_method_name: "#add_index"
  - :details: 
      :rcov: uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :IndexMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
      hash: 5040830375
      method_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :IndexMethods)#supports_partial_index?
      simple_method_name: "#supports_partial_index?"
  - :details: 
      :rcov: uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: ActiveRecord
      file_path: lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
      hash: 6492681327
      method_name: ActiveRecord#index_exists?
      simple_method_name: "#index_exists?"
  :classes: 
  - :details: 
      :flog: complexity is 145.1
    :location: !ruby/object:MetricFu::Location 
      class_name: main
      file_path: 
      hash: 587704432
      method_name: 
  - :details: 
      :rcov: average uncovered code is 80.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :SchemaMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb
      hash: 1544175204
      method_name: 
  - :details: 
      :rcov: average uncovered code is 75.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :ForeignerMethods)
      file_path: lib/pg_power/migration/command_recorder/foreigner_methods.rb
      hash: 2619444002
      method_name: 
  - :details: 
      :rcov: average uncovered code is 74.1%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :ForeignerMethods)
      file_path: lib/pg_power/connection_adapters/table/foreigner_methods.rb
      hash: 6849437042
      method_name: 
  - :details: 
      :rcov: average uncovered code is 70.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)
      file_path: lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: 8219657776
      method_name: 
  - :details: 
      :rcov: average uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)
      file_path: lib/pg_power/migration/command_recorder/schema_methods.rb
      hash: 4717210652
      method_name: 
  - :details: 
      :rcov: average uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :SchemaMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb
      hash: 210372400
      method_name: 
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :IndexMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/index_methods.rb
      hash: -4830656505
      method_name: 
  - :details: 
      :rcov: average uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/table/comment_methods.rb
      hash: -846998571
      method_name: 
  - :details: 
      :rcov: average uncovered code is 65.8%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: -6645991523
      method_name: 
  - :details: 
      :flog: complexity is 8.4
      :rcov: average uncovered code is 50.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: PgPower
      file_path: 
      hash: 2753114738
      method_name: 
  - :details: 
      :flog: complexity is 54.5
    :location: !ruby/object:MetricFu::Location 
      class_name: initializer
      file_path: ./lib/pg_power/engine.rb:43
      hash: 1259172744
      method_name: 
  - :details: 
      :flog: average complexity is 29.7
      :rcov: uncovered code is 13.9%
      :reek: found 4 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: PostgreSQLAdapter
      file_path: ./lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb
      hash: 2566930602
      method_name: 
  - :details: 
      :flog: average complexity is 39.3
      :rcov: uncovered code is 0.0%
      :reek: found 5 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: SchemaDumper
      file_path: ./lib/core_ext/active_record/schema_dumper.rb
      hash: 18331392
      method_name: 
  - :details: 
      :rcov: average uncovered code is 33.3%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb
      hash: 2313064538
      method_name: 
  - :details: 
      :rcov: average uncovered code is 29.6%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :IndexMethods)
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
      hash: 4639831042
      method_name: 
  - :details: 
      :flog: average complexity is 25.7
      :reek: found 10 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: SchemaStatements
      file_path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
      hash: 5867516984
      method_name: 
  - :details: 
      :rcov: average uncovered code is 23.3%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :ForeignerMethods)
      file_path: lib/pg_power/schema_dumper/foreigner_methods.rb
      hash: -5741296235
      method_name: 
  - :details: 
      :flog: complexity is 21.3
    :location: !ruby/object:MetricFu::Location 
      class_name: AbstractAdapter
      file_path: 
      hash: -2822468933
      method_name: 
  - :details: 
      :flog: complexity is 13.6
      :reek: found 4 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: CreateDemographyCitizens
      file_path: ./spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb
      hash: 3636245690
      method_name: 
  - :details: 
      :flog: average complexity is 13.1
      :reek: found 30 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: ForeignerMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      hash: 3292508028
      method_name: 
  - :details: 
      :flog: complexity is 13.3
    :location: !ruby/object:MetricFu::Location 
      class_name: Table
      file_path: 
      hash: -4144225829
      method_name: 
  - :details: 
      :flog: complexity is 12.1
    :location: !ruby/object:MetricFu::Location 
      class_name: CommandRecorder
      file_path: 
      hash: -2117086201
      method_name: 
  - :details: 
      :flog: complexity is 11.2
      :reek: found 4 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: CreatePets
      file_path: ./spec/dummy/db/migrate/20120105112744_create_pets.rb
      hash: 1601683610
      method_name: 
  - :details: 
      :flog: complexity is 10.8
      :reek: found 3 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: CreateUsers
      file_path: ./spec/dummy/db/migrate/20120106163544_create_users.rb
      hash: 868128940
      method_name: 
  - :details: 
      :rcov: average uncovered code is 11.1%
    :location: !ruby/object:MetricFu::Location 
      class_name: ActiveRecord
      file_path: lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
      hash: -7353645975
      method_name: 
  - :details: 
      :flog: complexity is 10.2
    :location: !ruby/object:MetricFu::Location 
      class_name: IndexExistsError when the index already exists
      file_path: ./spec/foreign_keys_spec.rb:27
      hash: -7032117983
      method_name: 
  - :details: 
      :rcov: average uncovered code is 9.5%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)
      file_path: lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb
      hash: 6921594760
      method_name: 
  - :details: 
      :flog: complexity is 8.4
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: Application
      file_path: ./spec/dummy/config/application.rb
      hash: 2502941620
      method_name: 
  - :details: 
      :flog: average complexity is 8.4
    :location: !ruby/object:MetricFu::Location 
      class_name: create_table
      file_path: ./spec/dummy/db/schema.rb:26
      hash: 3836263680
      method_name: 
  - :details: 
      :flog: complexity is 7.4
      :reek: found 3 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: CreateDemographyCountries
      file_path: ./spec/dummy/db/migrate/20120106163810_create_demography_countries.rb
      hash: 2284406362
      method_name: 
  - :details: 
      :flog: complexity is 7.7
    :location: !ruby/object:MetricFu::Location 
      class_name: ConnectionAdapters
      file_path: 
      hash: 1742876752
      method_name: 
  - :details: 
      :flog: complexity is 7.6
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::before
      file_path: ./spec/active_record/schema_dumper_spec.rb:6
      hash: 4756858034
      method_name: 
  - :details: 
      :flog: average complexity is 6.9
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::it
      file_path: ./spec/comment_methods_spec.rb:38
      hash: -6981206889
      method_name: 
  - :details: 
      :flog: average complexity is 6.9
    :location: !ruby/object:MetricFu::Location 
      class_name: create_table#demography
      file_path: ./spec/dummy/db/schema.rb:73
      hash: 756355584
      method_name: 
  - :details: 
      :flog: average complexity is 6.1
      :reek: found 2 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: Explorer
      file_path: ./spec/support/explorer.rb
      hash: 871961190
      method_name: 
  - :details: 
      :flog: complexity is 5.1
      :reek: found 2 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: CreateCitiesTable
      file_path: ./spec/dummy/db/migrate/20120209094937_create_cities_table.rb
      hash: 1696587220
      method_name: 
  - :details: 
      :flog: average complexity is 5.4
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::context::it
      file_path: ./spec/schema_methods_spec.rb:17
      hash: 5875991702
      method_name: 
  - :details: 
      :flog: complexity is 4.4
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: AddForeignKeys
      file_path: ./spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb
      hash: 3833959248
      method_name: 
  - :details: 
      :flog: complexity is 4.0
      :reek: found 3 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: DemographyPopulationStatisctics
      file_path: ./spec/dummy/db/migrate/20120301153650_demography_population_statisctics.rb
      hash: 69028650
      method_name: 
  - :details: 
      :flog: average complexity is 3.5
      :reek: found 9 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: CommentMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: 6046587800
      method_name: 
  - :details: 
      :flog: average complexity is 3.5
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: IndexMethods
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
      hash: 2401652532
      method_name: 
  - :details: 
      :flog: average complexity is 3.1
      :reek: found 3 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: Tools
      file_path: ./lib/pg_power/tools.rb
      hash: 6036799726
      method_name: 
  - :details: 
      :flog: average complexity is 3.6
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::context::it
      file_path: ./spec/active_record/schema_dumper_spec.rb:20
      hash: -8462267735
      method_name: 
  - :details: 
      :flog: complexity is 3.3
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: CreateDemographySchema
      file_path: ./spec/dummy/db/migrate/20120106163711_create_demography_schema.rb
      hash: -5962748021
      method_name: 
  - :details: 
      :flog: average complexity is 2.9
      :reek: found 3 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: SchemaMethods
      file_path: ./lib/pg_power/migration/command_recorder/schema_methods.rb
      hash: -503779705
      method_name: 
  - :details: 
      :flog: complexity is 2.8
      :reek: found 2 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: CreateDemographyNationalities
      file_path: ./spec/dummy/db/migrate/20120301152819_create_demography_nationalities.rb
      hash: -4930286917
      method_name: 
  - :details: 
      :flog: complexity is 3.3
    :location: !ruby/object:MetricFu::Location 
      class_name: Migration
      file_path: 
      hash: 1594279150
      method_name: 
  - :details: 
      :flog: average complexity is 2.4
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: RemoveForeignKeys
      file_path: ./spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb
      hash: 7171499512
      method_name: 
  - :details: 
      :flog: complexity is 2.2
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: AddDemographyCitizensActiveColumn
      file_path: ./spec/dummy/db/migrate/20120224204546_add_demography_citizens_active_column.rb
      hash: 2141277994
      method_name: 
  - :details: 
      :flog: complexity is 2.4
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe::context
      file_path: ./spec/schema_methods_spec.rb:18
      hash: -7628887907
      method_name: 
  - :details: 
      :flog: complexity is 2.0
    :location: !ruby/object:MetricFu::Location 
      class_name: IndexDefinition
      file_path: 
      hash: -13346665
      method_name: 
  - :details: 
      :flog: complexity is 2.0
    :location: !ruby/object:MetricFu::Location 
      class_name: ForeignKeyDefinition
      file_path: 
      hash: -2304481651
      method_name: 
  - :details: 
      :flog: average complexity is 1.8
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: RemoveCommentsOnCountriesTable
      file_path: ./spec/dummy/db/migrate/20120207103858_remove_comments_on_countries_table.rb
      hash: -8329892775
      method_name: 
  - :details: 
      :flog: complexity is 1.1
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: RemoveDemographyNationalities
      file_path: ./spec/dummy/db/migrate/20120301171826_remove_demography_nationalities.rb
      hash: -102830167
      method_name: 
  - :details: 
      :flog: complexity is 1.0
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: ApplicationController
      file_path: ./spec/dummy/app/controllers/application_controller.rb
      hash: 1509025822
      method_name: 
  - :details: 
      :flog: average complexity is 1.3
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::context
      file_path: ./spec/active_record/schema_dumper_spec.rb:60
      hash: 6618371402
      method_name: 
  - :details: 
      :flog: average complexity is 1.2
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: RemoveSomeCommentsOnCitizens
      file_path: ./spec/dummy/db/migrate/20120208114020_remove_some_comments_on_citizens.rb
      hash: 7045601370
      method_name: 
  - :details: 
      :flog: complexity is 1.0
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: User
      file_path: ./spec/dummy/app/models/user.rb
      hash: 6865496236
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: describe#
      file_path: ./spec/active_record/schema_dumper_spec.rb:80
      hash: 2751182416
      method_name: 
  - :details: 
      :flog: average complexity is 1.2
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: RemoveCommentOnPetsTable
      file_path: ./spec/dummy/db/migrate/20120207112916_remove_comment_on_pets_table.rb
      hash: 181674926
      method_name: 
  - :details: 
      :flog: average complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: describe::describe#
      file_path: ./spec/indexes_spec.rb:12
      hash: -5852206143
      method_name: 
  - :details: 
      :flog: complexity is 1.0
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: Citizen
      file_path: ./spec/dummy/app/models/demography/citizen.rb
      hash: -1497628321
      method_name: 
  - :details: 
      :flog: complexity is 1.0
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: Country
      file_path: ./spec/dummy/app/models/demography/country.rb
      hash: -4253997423
      method_name: 
  - :details: 
      :flog: average complexity is 1.1
    :location: !ruby/object:MetricFu::Location 
      class_name: describe
      file_path: ./spec/foreign_keys_spec.rb:57
      hash: -5128546449
      method_name: 
  - :details: 
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: IndexExistsError
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      hash: -3142690405
      method_name: 
  - :details: 
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: Engine
      file_path: ./lib/pg_power/engine.rb
      hash: -6302911413
      method_name: 
  - :details: 
      :rcov: average uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)
      file_path: lib/pg_power/schema_dumper/schema_methods.rb
      hash: 3066091406
      method_name: 
  - :details: 
      :rcov: average uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :CommentMethods)
      file_path: lib/pg_power/schema_dumper/comment_methods.rb
      hash: 3914625940
      method_name: 
  :files: 
  - :details: 
      :flog: complexity is 88.0
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/foreigner_methods.rb:27
      hash: 963596872
      method_name: 
  - :details: 
      :rcov: average uncovered code is 80.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb
      hash: -3507173949
      method_name: 
  - :details: 
      :rcov: average uncovered code is 75.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/migration/command_recorder/foreigner_methods.rb
      hash: 3132081208
      method_name: 
  - :details: 
      :rcov: average uncovered code is 74.1%
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/table/foreigner_methods.rb
      hash: -6624471545
      method_name: 
  - :details: 
      :rcov: average uncovered code is 70.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: 4463144548
      method_name: 
  - :details: 
      :rcov: average uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb
      hash: -2541099917
      method_name: 
  - :details: 
      :rcov: uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/abstract_adapter/index_methods.rb
      hash: 8027143612
      method_name: 
  - :details: 
      :rcov: average uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/migration/command_recorder/schema_methods.rb
      hash: 7427081752
      method_name: 
  - :details: 
      :rcov: average uncovered code is 66.7%
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/table/comment_methods.rb
      hash: 2624639392
      method_name: 
  - :details: 
      :rcov: average uncovered code is 65.8%
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: 5990013240
      method_name: 
  - :details: 
      :flog: complexity is 63.3
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb:28
      hash: -4506881849
      method_name: 
  - :details: 
      :flog: complexity is 59.3
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/core_ext/active_record/schema_dumper.rb:15
      hash: 7299384208
      method_name: 
  - :details: 
      :flog: complexity is 54.5
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/engine.rb:43
      hash: 3100792020
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 3 times)
      :rcov: average uncovered code is 50.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/tools.rb
      hash: 5253635132
      method_name: 
  - :details: 
      :flog: complexity is 41.9
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb:27
      hash: -377009849
      method_name: 
  - :details: 
      :rcov: average uncovered code is 33.3%
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb
      hash: -1489140057
      method_name: 
  - :details: 
      :rcov: average uncovered code is 29.6%
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
      hash: -4666224105
      method_name: 
  - :details: 
      :flog: complexity is 29.5
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb:71
      hash: -3206884153
      method_name: 
  - :details: 
      :flog: complexity is 26.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:90
      hash: 2750820556
      method_name: 
  - :details: 
      :flog: complexity is 24.0
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/foreigner_methods.rb:5
      hash: -20980613
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 4 times)
      :rcov: average uncovered code is 23.3%
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/schema_dumper/foreigner_methods.rb
      hash: 4436607380
      method_name: 
  - :details: 
      :flog: complexity is 21.9
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:16
      hash: 670648524
      method_name: 
  - :details: 
      :flog: complexity is 19.3
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:75
      hash: 2230895820
      method_name: 
  - :details: 
      :flog: complexity is 16.3
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/comment_methods.rb:18
      hash: -2895737245
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 5 times)
      :rcov: uncovered code is 13.9%
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb
      hash: 173172280
      method_name: 
  - :details: 
      :flog: complexity is 14.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb:40
      hash: 1315726324
      method_name: 
  - :details: 
      :flog: complexity is 13.6
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb:2
      hash: 3555510808
      method_name: 
  - :details: 
      :flog: complexity is 13.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:113
      hash: 8124662124
      method_name: 
  - :details: 
      :flog: complexity is 13.0
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/schema.rb:59
      hash: 3153718332
      method_name: 
  - :details: 
      :flog: complexity is 12.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:122
      hash: 8384675180
      method_name: 
  - :details: 
      :flog: complexity is 11.6
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/foreigner_methods.rb:15
      hash: -4000530849
      method_name: 
  - :details: 
      :flog: complexity is 11.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120105112744_create_pets.rb:2
      hash: -7506879105
      method_name: 
  - :details: 
      :flog: complexity is 11.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/comment_methods.rb:5
      hash: -1933980041
      method_name: 
  - :details: 
      :rcov: average uncovered code is 11.1%
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
      hash: 7083564840
      method_name: 
  - :details: 
      :flog: complexity is 10.9
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:38
      hash: 5504868240
      method_name: 
  - :details: 
      :flog: complexity is 10.9
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:33
      hash: 5504699280
      method_name: 
  - :details: 
      :flog: complexity is 10.9
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:62
      hash: 2443466960
      method_name: 
  - :details: 
      :flog: complexity is 10.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120106163544_create_users.rb:2
      hash: -6025862169
      method_name: 
  - :details: 
      :flog: complexity is 10.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb:27
      hash: -5729591665
      method_name: 
  - :details: 
      :flog: complexity is 10.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb:55
      hash: -4949518705
      method_name: 
  - :details: 
      :flog: complexity is 10.0
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:57
      hash: 6024928144
      method_name: 
  - :details: 
      :flog: complexity is 9.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:64
      hash: 6284873616
      method_name: 
  - :details: 
      :rcov: average uncovered code is 9.5%
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb
      hash: -5220691149
      method_name: 
  - :details: 
      :flog: complexity is 9.1
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/schema.rb:26
      hash: 2373476412
      method_name: 
  - :details: 
      :flog: complexity is 8.9
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb:13
      hash: -4767097657
      method_name: 
  - :details: 
      :flog: complexity is 8.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:48
      hash: -3113417041
      method_name: 
  - :details: 
      :flog: complexity is 8.0
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/support/explorer.rb:40
      hash: 3184603304
      method_name: 
  - :details: 
      :flog: complexity is 8.0
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/support/explorer.rb:22
      hash: 2664577192
      method_name: 
  - :details: 
      :flog: complexity is 8.0
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/support/explorer.rb:6
      hash: -5049950693
      method_name: 
  - :details: 
      :flog: complexity is 8.0
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/support/explorer.rb:61
      hash: 3704730792
      method_name: 
  - :details: 
      :flog: complexity is 7.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/schema.rb:38
      hash: 2633590844
      method_name: 
  - :details: 
      :flog: complexity is 7.6
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:6
      hash: 6403395784
      method_name: 
  - :details: 
      :flog: complexity is 7.6
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:51
      hash: -7973148637
      method_name: 
  - :details: 
      :flog: complexity is 7.6
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:75
      hash: -7452919773
      method_name: 
  - :details: 
      :flog: complexity is 7.6
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:57
      hash: -7972945885
      method_name: 
  - :details: 
      :flog: complexity is 7.6
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:63
      hash: -7713034205
      method_name: 
  - :details: 
      :flog: complexity is 7.6
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:69
      hash: -7712831453
      method_name: 
  - :details: 
      :flog: complexity is 7.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:43
      hash: -5268655885
      method_name: 
  - :details: 
      :flog: complexity is 7.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120106163810_create_demography_countries.rb:2
      hash: 3638655692
      method_name: 
  - :details: 
      :flog: complexity is 7.1
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:11
      hash: 8166533152
      method_name: 
  - :details: 
      :flog: complexity is 6.9
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/schema_methods.rb:14
      hash: 4915890996
      method_name: 
  - :details: 
      :flog: complexity is 6.6
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/support/explorer.rb:77
      hash: 3964980392
      method_name: 
  - :details: 
      :flog: complexity is 6.5
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/schema.rb:68
      hash: 3413731388
      method_name: 
  - :details: 
      :flog: complexity is 6.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:134
      hash: -8535079569
      method_name: 
  - :details: 
      :flog: complexity is 6.3
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:35
      hash: -8493107165
      method_name: 
  - :details: 
      :flog: complexity is 6.3
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:40
      hash: -8233229277
      method_name: 
  - :details: 
      :flog: complexity is 6.3
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:45
      hash: -8233060317
      method_name: 
  - :details: 
      :flog: complexity is 6.3
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:30
      hash: -8493276125
      method_name: 
  - :details: 
      :flog: complexity is 5.9
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:17
      hash: -6048661261
      method_name: 
  - :details: 
      :flog: complexity is 5.9
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:14
      hash: 4984639376
      method_name: 
  - :details: 
      :flog: complexity is 5.9
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:26
      hash: 5244753808
      method_name: 
  - :details: 
      :flog: complexity is 5.9
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:21
      hash: 5244584848
      method_name: 
  - :details: 
      :flog: complexity is 5.9
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:9
      hash: 4440854220
      method_name: 
  - :details: 
      :flog: complexity is 5.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:25
      hash: 8426715168
      method_name: 
  - :details: 
      :flog: complexity is 5.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:21
      hash: 8426580000
      method_name: 
  - :details: 
      :flog: complexity is 5.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:17
      hash: 8166735904
      method_name: 
  - :details: 
      :flog: complexity is 5.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb:32
      hash: -1784791345
      method_name: 
  - :details: 
      :flog: complexity is 5.6
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:50
      hash: 6024691600
      method_name: 
  - :details: 
      :flog: complexity is 5.6
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:46
      hash: 5764847504
      method_name: 
  - :details: 
      :flog: complexity is 5.5
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:150
      hash: -8015121041
      method_name: 
  - :details: 
      :flog: complexity is 5.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb:6
      hash: 2207515404
      method_name: 
  - :details: 
      :flog: complexity is 5.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb:41
      hash: -5209700721
      method_name: 
  - :details: 
      :flog: complexity is 5.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/schema_methods_spec.rb:8
      hash: 6074922136
      method_name: 
  - :details: 
      :flog: complexity is 5.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/schema_methods_spec.rb:17
      hash: -8430618057
      method_name: 
  - :details: 
      :flog: complexity is 5.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb:19
      hash: -5989570929
      method_name: 
  - :details: 
      :flog: complexity is 5.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb:47
      hash: -5209497969
      method_name: 
  - :details: 
      :flog: complexity is 5.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb:13
      hash: -5989773681
      method_name: 
  - :details: 
      :flog: complexity is 5.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb:7
      hash: 7682531180
      method_name: 
  - :details: 
      :flog: complexity is 5.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb:35
      hash: -5469612401
      method_name: 
  - :details: 
      :flog: complexity is 5.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:140
      hash: -8275167889
      method_name: 
  - :details: 
      :flog: complexity is 5.1
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120209094937_create_cities_table.rb:2
      hash: 5364527040
      method_name: 
  - :details: 
      :flog: complexity is 4.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:28
      hash: 1403482320
      method_name: 
  - :details: 
      :flog: complexity is 4.6
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb:13
      hash: 1862307352
      method_name: 
  - :details: 
      :flog: complexity is 4.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:59
      hash: -5008406285
      method_name: 
  - :details: 
      :flog: complexity is 4.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb:2
      hash: -1842470121
      method_name: 
  - :details: 
      :flog: complexity is 4.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/tools.rb:24
      hash: 3378858160
      method_name: 
  - :details: 
      :flog: complexity is 4.3
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/schema_methods.rb:31
      hash: 5435883316
      method_name: 
  - :details: 
      :flog: complexity is 4.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/support/explorer.rb:57
      hash: 3444886696
      method_name: 
  - :details: 
      :flog: complexity is 4.0
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120301153650_demography_population_statisctics.rb:2
      hash: 6926633332
      method_name: 
  - :details: 
      :flog: complexity is 4.0
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/schema.rb:45
      hash: 2893536316
      method_name: 
  - :details: 
      :flog: complexity is 4.0
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/schema.rb:73
      hash: 3673609276
      method_name: 
  - :details: 
      :flog: complexity is 3.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:44
      hash: 1923440848
      method_name: 
  - :details: 
      :flog: complexity is 3.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:20
      hash: 1403211984
      method_name: 
  - :details: 
      :flog: complexity is 3.7
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:41
      hash: -3113653585
      method_name: 
  - :details: 
      :flog: complexity is 3.6
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/schema_methods.rb:7
      hash: 4030294908
      method_name: 
  - :details: 
      :flog: complexity is 3.3
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120106163711_create_demography_schema.rb:2
      hash: -4545350413
      method_name: 
  - :details: 
      :flog: complexity is 3.1
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:50
      hash: 2183352528
      method_name: 
  - :details: 
      :flog: complexity is 2.9
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/tools.rb:18
      hash: 3118946480
      method_name: 
  - :details: 
      :flog: complexity is 2.9
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/tools.rb:12
      hash: 3118743728
      method_name: 
  - :details: 
      :flog: complexity is 2.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120301152819_create_demography_nationalities.rb:2
      hash: -4575341281
      method_name: 
  - :details: 
      :flog: complexity is 2.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:65
      hash: -4748494605
      method_name: 
  - :details: 
      :flog: complexity is 2.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:30
      hash: -5528804109
      method_name: 
  - :details: 
      :flog: complexity is 2.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:48
      hash: -5268486925
      method_name: 
  - :details: 
      :flog: complexity is 2.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:20
      hash: -5788850957
      method_name: 
  - :details: 
      :flog: complexity is 2.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:54
      hash: -5008575245
      method_name: 
  - :details: 
      :flog: complexity is 2.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:26
      hash: -5788648205
      method_name: 
  - :details: 
      :flog: complexity is 2.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:77
      hash: -4488380173
      method_name: 
  - :details: 
      :flog: complexity is 2.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:73
      hash: -4488515341
      method_name: 
  - :details: 
      :flog: complexity is 2.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:69
      hash: -4748359437
      method_name: 
  - :details: 
      :flog: complexity is 2.7
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/schema_methods.rb:41
      hash: 5695930164
      method_name: 
  - :details: 
      :flog: complexity is 2.7
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:11
      hash: 1143198928
      method_name: 
  - :details: 
      :flog: complexity is 2.7
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb:36
      hash: 1663461584
      method_name: 
  - :details: 
      :flog: complexity is 2.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/schema_methods_spec.rb:18
      hash: -8430584265
      method_name: 
  - :details: 
      :flog: complexity is 2.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120207103858_remove_comments_on_countries_table.rb:2
      hash: -6684522077
      method_name: 
  - :details: 
      :flog: complexity is 2.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb:7
      hash: -7605639381
      method_name: 
  - :details: 
      :flog: complexity is 2.4
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb:2
      hash: -7605808341
      method_name: 
  - :details: 
      :flay: found 2 code duplications
      :roodi: found 3 design problems
      :reek: found 17 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      hash: 1374327300
      method_name: 
  - :details: 
      :flog: complexity is 2.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120224204546_add_demography_citizens_active_column.rb:2
      hash: 2835109880
      method_name: 
  - :details: 
      :flog: complexity is 1.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb:55
      hash: 1710802124
      method_name: 
  - :details: 
      :flog: complexity is 1.8
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/support/explorer.rb:84
      hash: 4224925864
      method_name: 
  - :details: 
      :flog: complexity is 1.7
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:35
      hash: -3373565265
      method_name: 
  - :details: 
      :flog: complexity is 1.7
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb:16
      hash: 535788532
      method_name: 
  - :details: 
      :roodi: found 2 design problems
      :reek: found 5 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/core_ext/active_record/schema_dumper.rb
      hash: -793464885
      method_name: 
  - :details: 
      :flay: found 1 code duplications
      :roodi: found 2 design problems
      :reek: found 9 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/foreigner_methods.rb
      hash: -1558023021
      method_name: 
  - :details: 
      :flay: found 3 code duplications
      :reek: found 2 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/support/explorer.rb
      hash: -4026614529
      method_name: 
  - :details: 
      :flog: complexity is 1.3
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:60
      hash: -4748663565
      method_name: 
  - :details: 
      :flog: complexity is 1.3
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:31
      hash: -5528770317
      method_name: 
  - :details: 
      :flog: complexity is 1.3
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:21
      hash: -5788817165
      method_name: 
  - :details: 
      :flog: complexity is 1.3
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:49
      hash: -5268453133
      method_name: 
  - :details: 
      :flog: complexity is 1.3
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:78
      hash: -4488346381
      method_name: 
  - :details: 
      :roodi: found 2 design problems
      :reek: found 10 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
      hash: -4926173029
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:15
      hash: 4984673168
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:58
      hash: 6024961936
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/active_record/schema_dumper_spec.rb:80
      hash: -4228569869
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/schema_methods_spec.rb:19
      hash: -8430550473
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:51
      hash: 6024725392
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:65
      hash: 6284907408
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/schema_methods_spec.rb:10
      hash: -8430854601
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/schema_methods.rb:25
      hash: 5175971636
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:39
      hash: 5504902032
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:27
      hash: 5244787600
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120208114020_remove_some_comments_on_citizens.rb:6
      hash: 2240683100
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120207112916_remove_comment_on_pets_table.rb:2
      hash: -416179689
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120208114020_remove_some_comments_on_citizens.rb:2
      hash: 2240547932
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120207112916_remove_comment_on_pets_table.rb:6
      hash: -416044521
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120207103858_remove_comments_on_countries_table.rb:7
      hash: -6684353117
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:77
      hash: -7452852189
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:12
      hash: 8166566944
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb:18
      hash: -2304682289
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:46
      hash: -4653875497
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:18
      hash: -5433948457
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:15
      hash: -3893658961
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb:6
      hash: 1201623664
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:20
      hash: -3633781073
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/schema_methods.rb:10
      hash: -379505897
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:25
      hash: -3633612113
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:9
      hash: -1669900593
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/foreigner_methods.rb:5
      hash: 3765891488
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb:35
      hash: 1055848436
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb:12
      hash: -4774187573
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:37
      hash: -4913888553
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/schema_methods.rb:15
      hash: -379336937
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/schema_methods.rb:20
      hash: -119459049
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:30
      hash: -3373734225
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/foreigner_methods.rb:10
      hash: -4000699809
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:10
      hash: -3893827921
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/schema_methods.rb:5
      hash: 3798919936
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:55
      hash: -4393862441
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb:5
      hash: 43434452
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/table/comment_methods.rb:27
      hash: -5173935401
      method_name: 
  - :details: 
      :flog: complexity is 1.2
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb:48
      hash: 5133513632
      method_name: 
  - :details: 
      :flog: complexity is 1.1
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb:67
      hash: 6284974992
      method_name: 
  - :details: 
      :flog: complexity is 1.1
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/schema_methods_spec.rb:20
      hash: -8170807753
      method_name: 
  - :details: 
      :flog: complexity is 1.1
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb:78
      hash: -7452818397
      method_name: 
  - :details: 
      :flog: complexity is 1.1
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120301171826_remove_demography_nationalities.rb:2
      hash: 8275070064
      method_name: 
  - :details: 
      :flog: complexity is 1.1
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb:28
      hash: -5729557873
      method_name: 
  - :details: 
      :flog: complexity is 1.1
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb:56
      hash: -4949484913
      method_name: 
  - :details: 
      :flay: found 1 code duplications
      :reek: found 3 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/tools.rb
      hash: 8139107956
      method_name: 
  - :details: 
      :flog: complexity is 1.0
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb:57
      hash: -4949451121
      method_name: 
  - :details: 
      :flay: found 4 code duplications
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/comment_methods_spec.rb
      hash: -5423736257
      method_name: 
  - :details: 
      :reek: found 5 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/foreigner_methods.rb
      hash: -4953761841
      method_name: 
  - :details: 
      :flay: found 1 code duplications
      :reek: found 2 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/schema_methods.rb
      hash: -1539567809
      method_name: 
  - :details: 
      :reek: found 5 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb
      hash: 1172979640
      method_name: 
  - :details: 
      :roodi: found 1 design problems
      :reek: found 4 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb
      hash: 1793256808
      method_name: 
  - :details: 
      :reek: found 4 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb
      hash: -2586980449
      method_name: 
  - :details: 
      :reek: found 4 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120105112744_create_pets.rb
      hash: -1475460077
      method_name: 
  - :details: 
      :flay: found 2 code duplications
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/indexes_spec.rb
      hash: 616049992
      method_name: 
  - :details: 
      :reek: found 3 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120301153650_demography_population_statisctics.rb
      hash: -2216829985
      method_name: 
  - :details: 
      :reek: found 3 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/comment_methods.rb
      hash: 8430338800
      method_name: 
  - :details: 
      :flay: found 2 code duplications
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/schema.rb
      hash: -4945970869
      method_name: 
  - :details: 
      :reek: found 3 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120106163544_create_users.rb
      hash: 624676948
      method_name: 
  - :details: 
      :reek: found 3 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120106163810_create_demography_countries.rb
      hash: 1175773192
      method_name: 
  - :details: 
      :flay: found 2 code duplications
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/foreign_keys_spec.rb
      hash: -2879490993
      method_name: 
  - :details: 
      :reek: found 2 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120209094937_create_cities_table.rb
      hash: 4204526388
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 3 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/dummy/db/migrate/20120106163831_create_demography_countries.rb
      hash: 5271742080
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 5 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/migration/command_recorder.rb
      hash: 4748136104
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 5 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/support/explorer.rb
      hash: -2221732797
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 3 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/abstract_adapter.rb
      hash: 4112975680
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 3 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: README.rdoc
      hash: -8004452773
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 3 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/abstract/schema_definitions.rb
      hash: -7839350289
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 14 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/dummy/db/schema.rb
      hash: 77203992
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 6 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/comment_methods_spec.rb
      hash: 6027133436
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 3 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/dummy/db/migrate/20120106163544_create_users.rb
      hash: -54944765
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 9 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: Gemfile
      hash: -8510903773
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 9 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/active_record/schema_dumper_spec.rb
      hash: -4825658461
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 10 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/engine.rb
      hash: 7319850156
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 5 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb
      hash: -2757627713
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 7 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/schema_dumper.rb
      hash: -2943676081
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 8 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: README.markdown
      hash: 7552863020
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 4 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/support/pg_comment_getter.rb
      hash: -2468413149
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 5 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/foreign_keys_spec.rb
      hash: 7874997504
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 4 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: pg_power.gemspec
      hash: -6944620277
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 3 times)
      :rcov: average uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/schema_dumper/schema_methods.rb
      hash: 3290102136
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 3 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/dummy/config/database.yml
      hash: -8524581465
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 8 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: Gemfile.lock
      hash: -6383367717
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 3 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/dummy/log/development.log
      hash: 5697787360
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 3 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/version.rb
      hash: -2058106589
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 6 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/postgresql_adapter.rb
      hash: 6631283892
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 3 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/dummy/db/migrate/20120105112744_create_pets.rb
      hash: 5610960816
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 3 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: MIT-LICENSE
      hash: -7895978149
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 7 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: .gitignore
      hash: -5828540197
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 10 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      hash: -1169820593
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 3 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/dummy/db/migrate/20120209094937_create_cities_table.rb
      hash: -1242141161
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 3 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb
      hash: 5282770716
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 7 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power.rb
      hash: 3947978016
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 5 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: Rakefile
      hash: -4987115061
      method_name: 
  - :details: 
      :churn: detected high level of churn (changed 3 times)
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/connection_adapters/abstract/schema_statements.rb
      hash: 1737959388
      method_name: 
  - :details: 
      :reek: found 2 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120301152819_create_demography_nationalities.rb
      hash: -6866741193
      method_name: 
  - :details: 
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120207103858_remove_comments_on_countries_table.rb
      hash: 7255375316
      method_name: 
  - :details: 
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/app/models/demography/citizen.rb
      hash: 86258656
      method_name: 
  - :details: 
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
      hash: 1136289648
      method_name: 
  - :details: 
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb
      hash: 6680134192
      method_name: 
  - :details: 
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120106163711_create_demography_schema.rb
      hash: 8017267052
      method_name: 
  - :details: 
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/app/controllers/application_controller.rb
      hash: -670341769
      method_name: 
  - :details: 
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb
      hash: 3171079652
      method_name: 
  - :details: 
      :flay: found 1 code duplications
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/engine.rb
      hash: 5047453584
      method_name: 
  - :details: 
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120301171826_remove_demography_nationalities.rb
      hash: 846398748
      method_name: 
  - :details: 
      :flay: found 1 code duplications
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
      hash: -5467196089
      method_name: 
  - :details: 
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/schema_dumper/schema_methods.rb
      hash: -3547401381
      method_name: 
  - :details: 
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/app/models/user.rb
      hash: -7964454565
      method_name: 
  - :details: 
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/app/models/demography/country.rb
      hash: 541059952
      method_name: 
  - :details: 
      :roodi: found 1 design problems
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb
      hash: -375875669
      method_name: 
  - :details: 
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120207112916_remove_comment_on_pets_table.rb
      hash: 79558332
      method_name: 
  - :details: 
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/config/application.rb
      hash: -1970609289
      method_name: 
  - :details: 
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120208114020_remove_some_comments_on_citizens.rb
      hash: 5369688172
      method_name: 
  - :details: 
      :reek: found 1 code smells
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: ./spec/dummy/db/migrate/20120224204546_add_demography_citizens_active_column.rb
      hash: 1098461552
      method_name: 
  - :details: 
      :rcov: uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/core_ext/active_record/schema_dumper.rb
      hash: -2337217773
      method_name: 
  - :details: 
      :rcov: average uncovered code is 0.0%
    :location: !ruby/object:MetricFu::Location 
      class_name: 
      file_path: lib/pg_power/schema_dumper/comment_methods.rb
      hash: 4180924348
      method_name: 
:roodi: 
  :total: 
  - Found 11 errors.
  :problems: 
  - :problem: Case statement is missing an else clause.
    :line: "44"
    :file: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
  - :problem: Block cyclomatic complexity is 5.  It should be 4 or less.
    :line: "17"
    :file: ./lib/core_ext/active_record/schema_dumper.rb
  - :problem: Block cyclomatic complexity is 5.  It should be 4 or less.
    :line: "41"
    :file: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
  - :problem: Block cyclomatic complexity is 5.  It should be 4 or less.
    :line: "11"
    :file: ./lib/pg_power/schema_dumper/foreigner_methods.rb
  - :problem: Method "index_exists?" has 36 lines.  It should have 20 or less.
    :line: "28"
    :file: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
  - :problem: Method "add_index_options" has 22 lines.  It should have 20 or less.
    :line: "71"
    :file: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
  - :problem: Method "indexes" has 41 lines.  It should have 20 or less.
    :line: "27"
    :file: ./lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb
  - :problem: Method "indexes" has 22 lines.  It should have 20 or less.
    :line: "15"
    :file: ./lib/core_ext/active_record/schema_dumper.rb
  - :problem: Method "foreign_keys" has 35 lines.  It should have 20 or less.
    :line: "16"
    :file: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
  - :problem: Method "foreign_keys" has 28 lines.  It should have 20 or less.
    :line: "27"
    :file: ./lib/pg_power/schema_dumper/foreigner_methods.rb
  - :problem: Found = in conditional.  It should probably be an ==
    :line: "43"
    :file: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb
:churn: 
  :changed_files: 
  - spec/comment_methods_spec.rb
  - lib/pg_power/schema_dumper/foreigner_methods.rb
  - spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb
  - spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb
  - /dev/null
  - spec/foreign_keys_spec.rb
  - lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
  - lib/pg_power/connection_adapters/postgresql_adapter.rb
  - spec/support/explorer.rb
  - lib/pg_power/version.rb
  - spec/active_record/schema_dumper_spec.rb
  - spec/dummy/db/migrate/20120105112744_create_pets.rb
  - lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
  - README.markdown
  - spec/dummy/db/schema.rb
  - spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb
  - Gemfile.lock
  :changed_classes: 
  - &id005 
    file: spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb
    klass: RemoveForeignKeys
  - &id003 
    file: spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb
    klass: AddForeignKeys
  - &id002 
    file: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
    klass: IndexExistsError
  - &id001 
    file: spec/dummy/db/migrate/20120105112744_create_pets.rb
    klass: CreatePets
  - &id004 
    file: spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb
    klass: CreateDemographyCitizens
  :changes: 
  - :times_changed: 14
    :file_path: spec/dummy/db/schema.rb
  - :times_changed: 10
    :file_path: lib/pg_power/engine.rb
  - :times_changed: 10
    :file_path: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
  - :times_changed: 9
    :file_path: spec/active_record/schema_dumper_spec.rb
  - :times_changed: 9
    :file_path: Gemfile
  - :times_changed: 8
    :file_path: README.markdown
  - :times_changed: 8
    :file_path: Gemfile.lock
  - :times_changed: 7
    :file_path: .gitignore
  - :times_changed: 7
    :file_path: lib/pg_power/schema_dumper.rb
  - :times_changed: 7
    :file_path: lib/pg_power.rb
  - :times_changed: 6
    :file_path: spec/comment_methods_spec.rb
  - :times_changed: 6
    :file_path: lib/pg_power/connection_adapters/postgresql_adapter.rb
  - :times_changed: 5
    :file_path: spec/support/explorer.rb
  - :times_changed: 5
    :file_path: spec/foreign_keys_spec.rb
  - :times_changed: 5
    :file_path: spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb
  - :times_changed: 5
    :file_path: lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb
  - :times_changed: 5
    :file_path: lib/pg_power/migration/command_recorder.rb
  - :times_changed: 5
    :file_path: Rakefile
  - :times_changed: 4
    :file_path: spec/support/pg_comment_getter.rb
  - :times_changed: 4
    :file_path: lib/pg_power/schema_dumper/foreigner_methods.rb
  - :times_changed: 4
    :file_path: pg_power.gemspec
  - :times_changed: 3
    :file_path: lib/pg_power/schema_dumper/schema_methods.rb
  - :times_changed: 3
    :file_path: spec/dummy/db/migrate/20120106163831_create_demography_countries.rb
  - :times_changed: 3
    :file_path: spec/dummy/db/migrate/20120106163544_create_users.rb
  - :times_changed: 3
    :file_path: lib/pg_power/connection_adapters/abstract_adapter.rb
  - :times_changed: 3
    :file_path: lib/pg_power/connection_adapters/abstract/schema_definitions.rb
  - :times_changed: 3
    :file_path: MIT-LICENSE
  - :times_changed: 3
    :file_path: lib/pg_power/version.rb
  - :times_changed: 3
    :file_path: spec/dummy/log/development.log
  - :times_changed: 3
    :file_path: lib/pg_power/tools.rb
  - :times_changed: 3
    :file_path: spec/dummy/db/migrate/20120209094937_create_cities_table.rb
  - :times_changed: 3
    :file_path: README.rdoc
  - :times_changed: 3
    :file_path: spec/dummy/db/migrate/20120105112744_create_pets.rb
  - :times_changed: 3
    :file_path: spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb
  - :times_changed: 3
    :file_path: spec/dummy/config/database.yml
  - :times_changed: 3
    :file_path: lib/pg_power/connection_adapters/abstract/schema_statements.rb
  :class_churn: 
  - klass: *id001
    times_changed: 1
  - klass: *id002
    times_changed: 1
  - klass: *id003
    times_changed: 1
  - klass: *id004
    times_changed: 1
  - klass: *id005
    times_changed: 1
  :method_churn: 
  - method: &id021 
      file: spec/dummy/db/migrate/20120105112744_create_pets.rb
      method: CreatePets#change
      klass: CreatePets
    times_changed: 1
  - method: &id011 
      file: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      method: IndexExistsError#foreign_key_name
      klass: IndexExistsError
    times_changed: 1
  - method: &id020 
      file: spec/support/explorer.rb
      method: "#has_foreign_key?"
      klass: ""
    times_changed: 1
  - method: &id015 
      file: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      method: IndexExistsError#add_foreign_key
      klass: IndexExistsError
    times_changed: 1
  - method: &id022 
      file: spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb
      method: CreateDemographyCitizens#change
      klass: CreateDemographyCitizens
    times_changed: 1
  - method: &id019 
      file: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      method: IndexExistsError#supports_foreign_keys?
      klass: IndexExistsError
    times_changed: 1
  - method: &id010 
      file: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      method: IndexExistsError#dependency_sql
      klass: IndexExistsError
    times_changed: 1
  - method: &id018 
      file: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      method: IndexExistsError#remove_foreign_key
      klass: IndexExistsError
    times_changed: 1
  - method: &id016 
      file: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      method: IndexExistsError#foreign_keys
      klass: IndexExistsError
    times_changed: 1
  - method: &id012 
      file: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      method: IndexExistsError#remove_foreign_key_sql
      klass: IndexExistsError
    times_changed: 1
  - method: &id014 
      file: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      method: IndexExistsError#foreign_key_column_id_from_table_name
      klass: IndexExistsError
    times_changed: 1
  - method: &id007 
      file: spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb
      method: RemoveForeignKeys#down
      klass: RemoveForeignKeys
    times_changed: 1
  - method: &id006 
      file: lib/pg_power/schema_dumper/foreigner_methods.rb
      method: "#foreign_keys"
      klass: ""
    times_changed: 1
  - method: &id009 
      file: spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb
      method: AddForeignKeys#change
      klass: AddForeignKeys
    times_changed: 1
  - method: &id008 
      file: spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb
      method: RemoveForeignKeys#up
      klass: RemoveForeignKeys
    times_changed: 1
  - method: &id017 
      file: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      method: IndexExistsError#add_foreign_key_sql
      klass: IndexExistsError
    times_changed: 1
  - method: &id013 
      file: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
      method: IndexExistsError#drop_table
      klass: IndexExistsError
    times_changed: 1
  :changed_methods: 
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
:saikuro: 
  :methods: 
  - :lines: 37
    :complexity: 10
    :name: ActiveRecord::ConnectionAdapters::SchemaStatements#index_exists?
  - :lines: 23
    :complexity: 8
    :name: ActiveRecord::ConnectionAdapters::SchemaStatements#add_index_options
  - :lines: 17
    :complexity: 6
    :name: PgPower#tables_with_foreign_keys
  - :lines: 29
    :complexity: 6
    :name: PgPower#foreign_keys
  - :lines: 17
    :complexity: 6
    :name: PgPower::ConnectionAdapters#foreign_keys
  - :lines: 23
    :complexity: 6
    :name: ActiveRecord::SchemaDumper#indexes
  - :lines: 16
    :complexity: 4
    :name: PgPower#dump_comments
  - :lines: 7
    :complexity: 4
    :name: PgPower::ConnectionAdapters#dependency_sql
  - :lines: 23
    :complexity: 4
    :name: ActiveRecord::ConnectionAdapters::PostgreSQLAdapter#indexes
  - :lines: 6
    :complexity: 3
    :name: PgPower::ConnectionAdapters#remove_foreign_key
  - :lines: 12
    :complexity: 3
    :name: PgPower::ConnectionAdapters#add_foreign_key
  - :lines: 13
    :complexity: 3
    :name: PgPower#invert_add_foreign_key
  - :lines: 13
    :complexity: 3
    :name: PgPower::ConnectionAdapters#add_foreign_key_sql
  - :lines: 7
    :complexity: 2
    :name: CreateCitiesTable#change
  - :lines: 4
    :complexity: 2
    :name: CreateDemographyNationalities#change
  - :lines: 13
    :complexity: 2
    :name: CreatePets#change
  - :lines: 4
    :complexity: 2
    :name: PgPower#remove_column_comments
  - :lines: 18
    :complexity: 2
    :name: CreateUsers#change
  - :lines: 8
    :complexity: 2
    :name: PgPower#comments
  - :lines: 3
    :complexity: 2
    :name: PgPower#invert_set_column_comments
  - :lines: 13
    :complexity: 2
    :name: CreateDemographyCountries#change
  - :lines: 21
    :complexity: 2
    :name: CreateDemographyCitizens#change
  - :lines: 5
    :complexity: 2
    :name: DemographyPopulationStatisctics#change
  - :lines: 7
    :complexity: 2
    :name: PgPower#schemas
  - :lines: 4
    :complexity: 2
    :name: PgPower#non_public_schema_tables
  - :lines: 9
    :complexity: 2
    :name: PgPower#tables_with_comments
  - :lines: 4
    :complexity: 2
    :name: PgPower#drop_table_with_schema_option
  - :lines: 4
    :complexity: 2
    :name: PgPower#create_table_with_schema_option
  - :lines: 4
    :complexity: 2
    :name: PgPower#set_column_comments
  - :lines: 7
    :complexity: 2
    :name: PgPower::ConnectionAdapters#foreign_key_name
  - :lines: 9
    :complexity: 2
    :name: PgPower::ConnectionAdapters#remove_foreign_key_sql
  - :lines: 2
    :complexity: 2
    :name: PgPower::ConnectionAdapters#drop_table
  - :lines: 9
    :complexity: 2
    :name: PgPower#index_name_for_remove
  - :lines: 9
    :complexity: 2
    :name: PgPower#references_with_foreign_keys
  - :lines: 2
    :complexity: 1
    :name: PgPower#set_column_comments
  - :lines: 2
    :complexity: 1
    :name: PgPower#drop_schema
  - :lines: 2
    :complexity: 1
    :name: PgPower#create_schema
  - :lines: 2
    :complexity: 1
    :name: PgPower#invert_drop_schema
  - :lines: 2
    :complexity: 1
    :name: PgPower#remove_foreign_key
  - :lines: 2
    :complexity: 1
    :name: PgPower#foreign_key
  - :lines: 2
    :complexity: 1
    :name: PgPower#supports_foreign_keys?
  - :lines: 2
    :complexity: 1
    :name: PgPower#index_name
  - :lines: 2
    :complexity: 1
    :name: PgPower#supports_partial_index?
  - :lines: 1
    :complexity: 1
    :name: PgPower#add_foreign_key
  - :lines: 2
    :complexity: 1
    :name: PgPower#remove_foreign_key
  - :lines: 2
    :complexity: 1
    :name: PgPower#add_foreign_key
  - :lines: 1
    :complexity: 1
    :name: PgPower#remove_foreign_key
  - :lines: 2
    :complexity: 1
    :name: PgPower#foreign_keys
  - :lines: 3
    :complexity: 1
    :name: PgPower::Tools#create_schema
  - :lines: 2
    :complexity: 1
    :name: PgPower#remove_column_comments
  - :lines: 2
    :complexity: 1
    :name: PgPower#remove_column_comment
  - :lines: 2
    :complexity: 1
    :name: PgPower#set_column_comments
  - :lines: 2
    :complexity: 1
    :name: PgPower#set_column_comment
  - :lines: 2
    :complexity: 1
    :name: PgPower#remove_table_comment
  - :lines: 2
    :complexity: 1
    :name: PgPower#set_table_comment
  - :lines: 3
    :complexity: 1
    :name: PgPower#get_non_public_schema_table_names
  - :lines: 3
    :complexity: 1
    :name: PgPower::Tools#drop_schema
  - :lines: 2
    :complexity: 1
    :name: PgPower#schema
  - :lines: 3
    :complexity: 1
    :name: PgPower::Tools#schemas
  - :lines: 4
    :complexity: 1
    :name: PgPower#tables_with_schemas
  - :lines: 2
    :complexity: 1
    :name: PgPower#remove_column_comments
  - :lines: 2
    :complexity: 1
    :name: PgPower#remove_column_comment
  - :lines: 2
    :complexity: 1
    :name: PgPower#remove_table_comment
  - :lines: 2
    :complexity: 1
    :name: PgPower#set_column_comments
  - :lines: 2
    :complexity: 1
    :name: PgPower#set_column_comment
  - :lines: 2
    :complexity: 1
    :name: PgPower#set_table_comment
  - :lines: 2
    :complexity: 1
    :name: PgPower#supports_comments?
  - :lines: 2
    :complexity: 1
    :name: PgPower#connection
  - :lines: 4
    :complexity: 1
    :name: PgPower#to_schema_and_table
  - :lines: 3
    :complexity: 1
    :name: PgPower#table_exists?
  - :lines: 2
    :complexity: 1
    :name: PgPower#index_exists?
  - :lines: 4
    :complexity: 1
    :name: PgPower#has_foreign_key?
  - :lines: 4
    :complexity: 1
    :name: PgPower#get_column_comment
  - :lines: 4
    :complexity: 1
    :name: PgPower#get_table_comment
  - :lines: 3
    :complexity: 1
    :name: RemoveCommentsOnCountriesTable#up
  - :lines: 4
    :complexity: 1
    :name: PgPower#invert_set_column_comment
  - :lines: 3
    :complexity: 1
    :name: PgPower#invert_set_table_comment
  - :lines: 2
    :complexity: 1
    :name: PgPower#remove_column_comments
  - :lines: 2
    :complexity: 1
    :name: PgPower#remove_column_comment
  - :lines: 2
    :complexity: 1
    :name: PgPower#invert_create_schema
  - :lines: 2
    :complexity: 1
    :name: PgPower#set_column_comment
  - :lines: 2
    :complexity: 1
    :name: PgPower#remove_table_comment
  - :lines: 2
    :complexity: 1
    :name: PgPower#set_table_comment
  - :lines: 2
    :complexity: 1
    :name: RemoveCommentsOnCountriesTable#down
  - :lines: 2
    :complexity: 1
    :name: RemoveCommentOnPetsTable#up
  - :lines: 3
    :complexity: 1
    :name: PgPower#remove_column_comment
  - :lines: 3
    :complexity: 1
    :name: PgPower#remove_table_comment
  - :lines: 2
    :complexity: 1
    :name: RemoveCommentOnPetsTable#down
  - :lines: 3
    :complexity: 1
    :name: PgPower#set_column_comment
  - :lines: 3
    :complexity: 1
    :name: PgPower#set_table_comment
  - :lines: 2
    :complexity: 1
    :name: PgPower#supports_comments?
  - :lines: 2
    :complexity: 1
    :name: PgPower#create_schema
  - :lines: 2
    :complexity: 1
    :name: PgPower#drop_schema
  - :lines: 3
    :complexity: 1
    :name: RemoveForeignKeys#up
  - :lines: 3
    :complexity: 1
    :name: RemoveForeignKeys#down
  - :lines: 3
    :complexity: 1
    :name: ActiveRecord::ConnectionAdapters::SchemaStatements#add_index
  - :lines: 2
    :complexity: 1
    :name: RemoveSomeCommentsOnCitizens#up
  - :lines: 4
    :complexity: 1
    :name: RemoveSomeCommentsOnCitizens#down
  - :lines: 2
    :complexity: 1
    :name: PgPower::ConnectionAdapters#foreign_key_column_id_from_table_name
  - :lines: 4
    :complexity: 1
    :name: AddDemographyCitizensActiveColumn#change
  - :lines: 2
    :complexity: 1
    :name: Demography#self.table_name_prefix
  - :lines: 2
    :complexity: 1
    :name: PgPower#supports_partial_index?
  - :lines: 4
    :complexity: 1
    :name: CreateDemographySchema#change
  - :lines: 8
    :complexity: 1
    :name: AddForeignKeys#change
  - :lines: 2
    :complexity: 1
    :name: RemoveDemographyNationalities#change
  - :lines: 2
    :complexity: 1
    :name: PgPower::ConnectionAdapters#supports_foreign_keys?
  :classes: 
  - :lines: 132
    :complexity: 27
    :defs: 
    - :lines: 2
      :complexity: 1
      :name: PgPower::ConnectionAdapters#supports_foreign_keys?
    - :lines: 17
      :complexity: 6
      :name: PgPower::ConnectionAdapters#foreign_keys
    - :lines: 2
      :complexity: 2
      :name: PgPower::ConnectionAdapters#drop_table
    - :lines: 12
      :complexity: 3
      :name: PgPower::ConnectionAdapters#add_foreign_key
    - :lines: 13
      :complexity: 3
      :name: PgPower::ConnectionAdapters#add_foreign_key_sql
    - :lines: 6
      :complexity: 3
      :name: PgPower::ConnectionAdapters#remove_foreign_key
    - :lines: 9
      :complexity: 2
      :name: PgPower::ConnectionAdapters#remove_foreign_key_sql
    - :lines: 2
      :complexity: 1
      :name: PgPower::ConnectionAdapters#foreign_key_column_id_from_table_name
    - :lines: 7
      :complexity: 2
      :name: PgPower::ConnectionAdapters#foreign_key_name
    - :lines: 7
      :complexity: 4
      :name: PgPower::ConnectionAdapters#dependency_sql
    :name: PgPower::ConnectionAdapters
  - :lines: 78
    :complexity: 20
    :name: ""
  - :lines: 94
    :complexity: 19
    :defs: 
    - :lines: 3
      :complexity: 1
      :name: ActiveRecord::ConnectionAdapters::SchemaStatements#add_index
    - :lines: 37
      :complexity: 10
      :name: ActiveRecord::ConnectionAdapters::SchemaStatements#index_exists?
    - :lines: 23
      :complexity: 8
      :name: ActiveRecord::ConnectionAdapters::SchemaStatements#add_index_options
    :name: ActiveRecord::ConnectionAdapters::SchemaStatements
  - :lines: 64
    :complexity: 17
    :name: ""
  - :lines: 75
    :complexity: 16
    :name: ""
  - :lines: 56
    :complexity: 13
    :name: ""
  - :lines: 55
    :complexity: 12
    :defs: 
    - :lines: 17
      :complexity: 6
      :name: PgPower#tables_with_foreign_keys
    - :lines: 29
      :complexity: 6
      :name: PgPower#foreign_keys
    :name: PgPower
  - :lines: 68
    :complexity: 11
    :defs: 
    - :lines: 2
      :complexity: 1
      :name: PgPower#supports_comments?
    - :lines: 3
      :complexity: 1
      :name: PgPower#set_table_comment
    - :lines: 3
      :complexity: 1
      :name: PgPower#set_column_comment
    - :lines: 4
      :complexity: 2
      :name: PgPower#set_column_comments
    - :lines: 3
      :complexity: 1
      :name: PgPower#remove_table_comment
    - :lines: 3
      :complexity: 1
      :name: PgPower#remove_column_comment
    - :lines: 4
      :complexity: 2
      :name: PgPower#remove_column_comments
    - :lines: 8
      :complexity: 2
      :name: PgPower#comments
    :name: PgPower
  - :lines: 42
    :complexity: 10
    :name: PgPower::Engine
  - :lines: 49
    :complexity: 10
    :defs: 
    - :lines: 2
      :complexity: 1
      :name: PgPower#set_table_comment
    - :lines: 2
      :complexity: 1
      :name: PgPower#remove_table_comment
    - :lines: 2
      :complexity: 1
      :name: PgPower#set_column_comment
    - :lines: 2
      :complexity: 1
      :name: PgPower#set_column_comments
    - :lines: 2
      :complexity: 1
      :name: PgPower#remove_column_comment
    - :lines: 2
      :complexity: 1
      :name: PgPower#remove_column_comments
    - :lines: 3
      :complexity: 1
      :name: PgPower#invert_set_table_comment
    - :lines: 4
      :complexity: 1
      :name: PgPower#invert_set_column_comment
    - :lines: 3
      :complexity: 2
      :name: PgPower#invert_set_column_comments
    :name: PgPower
  - :lines: 80
    :complexity: 7
    :name: ""
  - :lines: 44
    :complexity: 7
    :defs: 
    - :lines: 4
      :complexity: 1
      :name: PgPower#get_table_comment
    - :lines: 4
      :complexity: 1
      :name: PgPower#get_column_comment
    - :lines: 4
      :complexity: 1
      :name: PgPower#has_foreign_key?
    - :lines: 2
      :complexity: 1
      :name: PgPower#index_exists?
    - :lines: 3
      :complexity: 1
      :name: PgPower#table_exists?
    - :lines: 4
      :complexity: 1
      :name: PgPower#to_schema_and_table
    - :lines: 2
      :complexity: 1
      :name: PgPower#connection
    :name: PgPower
  - :lines: 43
    :complexity: 7
    :defs: 
    - :lines: 4
      :complexity: 1
      :name: PgPower#tables_with_schemas
    - :lines: 7
      :complexity: 2
      :name: PgPower#schemas
    - :lines: 2
      :complexity: 1
      :name: PgPower#schema
    - :lines: 4
      :complexity: 2
      :name: PgPower#non_public_schema_tables
    - :lines: 3
      :complexity: 1
      :name: PgPower#get_non_public_schema_table_names
    :name: PgPower
  - :lines: 17
    :complexity: 7
    :name: ""
  - :lines: 59
    :complexity: 7
    :defs: 
    - :lines: 2
      :complexity: 1
      :name: PgPower#supports_comments?
    - :lines: 2
      :complexity: 1
      :name: PgPower#set_table_comment
    - :lines: 2
      :complexity: 1
      :name: PgPower#set_column_comment
    - :lines: 2
      :complexity: 1
      :name: PgPower#set_column_comments
    - :lines: 2
      :complexity: 1
      :name: PgPower#remove_table_comment
    - :lines: 2
      :complexity: 1
      :name: PgPower#remove_column_comment
    - :lines: 2
      :complexity: 1
      :name: PgPower#remove_column_comments
    :name: PgPower
  - :lines: 34
    :complexity: 6
    :defs: 
    - :lines: 23
      :complexity: 6
      :name: ActiveRecord::SchemaDumper#indexes
    :name: ActiveRecord::SchemaDumper
  - :lines: 34
    :complexity: 6
    :defs: 
    - :lines: 9
      :complexity: 2
      :name: PgPower#tables_with_comments
    - :lines: 16
      :complexity: 4
      :name: PgPower#dump_comments
    :name: PgPower
  - :lines: 55
    :complexity: 6
    :defs: 
    - :lines: 2
      :complexity: 1
      :name: PgPower#set_table_comment
    - :lines: 2
      :complexity: 1
      :name: PgPower#remove_table_comment
    - :lines: 2
      :complexity: 1
      :name: PgPower#set_column_comment
    - :lines: 2
      :complexity: 1
      :name: PgPower#set_column_comments
    - :lines: 2
      :complexity: 1
      :name: PgPower#remove_column_comment
    - :lines: 2
      :complexity: 1
      :name: PgPower#remove_column_comments
    :name: PgPower
  - :lines: 26
    :complexity: 5
    :defs: 
    - :lines: 2
      :complexity: 1
      :name: PgPower#add_foreign_key
    - :lines: 2
      :complexity: 1
      :name: PgPower#remove_foreign_key
    - :lines: 13
      :complexity: 3
      :name: PgPower#invert_add_foreign_key
    :name: PgPower
  - :lines: 15
    :complexity: 4
    :defs: 
    - :lines: 4
      :complexity: 2
      :name: PgPower#create_table_with_schema_option
    - :lines: 4
      :complexity: 2
      :name: PgPower#drop_table_with_schema_option
    :name: PgPower
  - :lines: 39
    :complexity: 4
    :defs: 
    - :lines: 2
      :complexity: 1
      :name: PgPower#supports_partial_index?
    - :lines: 2
      :complexity: 1
      :name: PgPower#index_name
    - :lines: 9
      :complexity: 2
      :name: PgPower#index_name_for_remove
    :name: PgPower
  - :lines: 47
    :complexity: 4
    :defs: 
    - :lines: 2
      :complexity: 1
      :name: PgPower#foreign_key
    - :lines: 2
      :complexity: 1
      :name: PgPower#remove_foreign_key
    - :lines: 9
      :complexity: 2
      :name: PgPower#references_with_foreign_keys
    :name: PgPower
  - :lines: 20
    :complexity: 4
    :defs: 
    - :lines: 2
      :complexity: 1
      :name: PgPower#create_schema
    - :lines: 2
      :complexity: 1
      :name: PgPower#drop_schema
    - :lines: 2
      :complexity: 1
      :name: PgPower#invert_create_schema
    - :lines: 2
      :complexity: 1
      :name: PgPower#invert_drop_schema
    :name: PgPower
  - :lines: 64
    :complexity: 4
    :defs: 
    - :lines: 2
      :complexity: 1
      :name: PgPower#supports_foreign_keys?
    - :lines: 1
      :complexity: 1
      :name: PgPower#add_foreign_key
    - :lines: 1
      :complexity: 1
      :name: PgPower#remove_foreign_key
    - :lines: 2
      :complexity: 1
      :name: PgPower#foreign_keys
    :name: PgPower
  - :lines: 46
    :complexity: 4
    :defs: 
    - :lines: 23
      :complexity: 4
      :name: ActiveRecord::ConnectionAdapters::PostgreSQLAdapter#indexes
    :name: ActiveRecord::ConnectionAdapters::PostgreSQLAdapter
  - :lines: 21
    :complexity: 3
    :defs: 
    - :lines: 3
      :complexity: 1
      :name: PgPower::Tools#create_schema
    - :lines: 3
      :complexity: 1
      :name: PgPower::Tools#drop_schema
    - :lines: 3
      :complexity: 1
      :name: PgPower::Tools#schemas
    :name: PgPower::Tools
  - :lines: 9
    :complexity: 2
    :defs: 
    - :lines: 7
      :complexity: 2
      :name: CreateCitiesTable#change
    :name: CreateCitiesTable
  - :lines: 15
    :complexity: 2
    :defs: 
    - :lines: 13
      :complexity: 2
      :name: CreatePets#change
    :name: CreatePets
  - :lines: 6
    :complexity: 2
    :defs: 
    - :lines: 4
      :complexity: 2
      :name: CreateDemographyNationalities#change
    :name: CreateDemographyNationalities
  - :lines: 8
    :complexity: 2
    :defs: 
    - :lines: 2
      :complexity: 1
      :name: RemoveCommentOnPetsTable#up
    - :lines: 2
      :complexity: 1
      :name: RemoveCommentOnPetsTable#down
    :name: RemoveCommentOnPetsTable
  - :lines: 20
    :complexity: 2
    :defs: 
    - :lines: 18
      :complexity: 2
      :name: CreateUsers#change
    :name: CreateUsers
  - :lines: 12
    :complexity: 2
    :defs: 
    - :lines: 2
      :complexity: 1
      :name: PgPower#create_schema
    - :lines: 2
      :complexity: 1
      :name: PgPower#drop_schema
    :name: PgPower
  - :lines: 10
    :complexity: 2
    :defs: 
    - :lines: 3
      :complexity: 1
      :name: RemoveForeignKeys#up
    - :lines: 3
      :complexity: 1
      :name: RemoveForeignKeys#down
    :name: RemoveForeignKeys
  - :lines: 7
    :complexity: 2
    :defs: 
    - :lines: 5
      :complexity: 2
      :name: DemographyPopulationStatisctics#change
    :name: DemographyPopulationStatisctics
  - :lines: 10
    :complexity: 2
    :defs: 
    - :lines: 2
      :complexity: 1
      :name: RemoveSomeCommentsOnCitizens#up
    - :lines: 4
      :complexity: 1
      :name: RemoveSomeCommentsOnCitizens#down
    :name: RemoveSomeCommentsOnCitizens
  - :lines: 9
    :complexity: 2
    :defs: 
    - :lines: 3
      :complexity: 1
      :name: RemoveCommentsOnCountriesTable#up
    - :lines: 2
      :complexity: 1
      :name: RemoveCommentsOnCountriesTable#down
    :name: RemoveCommentsOnCountriesTable
  - :lines: 23
    :complexity: 2
    :defs: 
    - :lines: 21
      :complexity: 2
      :name: CreateDemographyCitizens#change
    :name: CreateDemographyCitizens
  - :lines: 15
    :complexity: 2
    :defs: 
    - :lines: 13
      :complexity: 2
      :name: CreateDemographyCountries#change
    :name: CreateDemographyCountries
  - :lines: 29
    :complexity: 1
    :name: ""
  - :lines: 14
    :complexity: 1
    :name: PgPower
  - :lines: 17
    :complexity: 1
    :name: PgPower
  - :lines: 4
    :complexity: 1
    :defs: 
    - :lines: 2
      :complexity: 1
      :name: Demography#self.table_name_prefix
    :name: Demography
  - :lines: 18
    :complexity: 1
    :name: PgPower
  - :lines: 59
    :complexity: 1
    :name: ""
  - :lines: 6
    :complexity: 1
    :defs: 
    - :lines: 4
      :complexity: 1
      :name: AddDemographyCitizensActiveColumn#change
    :name: AddDemographyCitizensActiveColumn
  - :lines: 5
    :complexity: 1
    :name: ""
  - :lines: 4
    :complexity: 1
    :name: ""
  - :lines: 38
    :complexity: 1
    :name: ""
  - :lines: 4
    :complexity: 1
    :defs: 
    - :lines: 2
      :complexity: 1
      :name: PgPower#supports_partial_index?
    :name: PgPower
  - :lines: 2
    :complexity: 1
    :name: ""
  - :lines: 57
    :complexity: 1
    :name: ""
  - :lines: 6
    :complexity: 1
    :defs: 
    - :lines: 4
      :complexity: 1
      :name: CreateDemographySchema#change
    :name: CreateDemographySchema
  - :lines: 10
    :complexity: 1
    :defs: 
    - :lines: 8
      :complexity: 1
      :name: AddForeignKeys#change
    :name: AddForeignKeys
  - :lines: 4
    :complexity: 1
    :defs: 
    - :lines: 2
      :complexity: 1
      :name: RemoveDemographyNationalities#change
    :name: RemoveDemographyNationalities
  - :lines: 8
    :complexity: 0
    :name: PgPower
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 8
    :complexity: 0
    :name: PgPower
  - :lines: 3
    :complexity: 0
    :name: PgPower
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 3
    :complexity: 0
    :name: PgPower
  - :lines: 5
    :complexity: 0
    :name: ActiveRecord::ConnectionAdapters
  - :lines: 2
    :complexity: 0
    :name: ActiveRecord
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 8
    :complexity: 0
    :name: PgPower
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 2
    :complexity: 0
    :name: ApplicationController
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 13
    :complexity: 0
    :name: PgPower
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 1
    :complexity: 0
    :name: ApplicationHelper
  - :lines: 5
    :complexity: 0
    :name: ActiveRecord
  - :lines: 2
    :complexity: 0
    :name: Demography
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 2
    :complexity: 0
    :name: Demography
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 2
    :complexity: 0
    :name: User
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 4
    :complexity: 0
    :name: PgPower
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 1
    :complexity: 0
    :name: PgPower::IndexDefinition
  - :lines: 3
    :complexity: 0
    :name: PgPower
  - :lines: 1
    :complexity: 0
    :name: PgPower::ForeignKeyDefinition
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 2
    :complexity: 0
    :name: Dummy
  - :lines: 3
    :complexity: 0
    :name: PgPower
  - :lines: 34
    :complexity: 0
    :name: Dummy::Application
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 10
    :complexity: 0
    :name: PgPower
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 2
    :complexity: 0
    :name: ActiveRecord::ConnectionAdapters
  - :lines: 2
    :complexity: 0
    :name: ActiveRecord
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 1
    :complexity: 0
    :name: ""
  - :lines: 1
    :complexity: 0
    :name: PgPower::IndexExistsError
  - :lines: 7
    :complexity: 0
    :name: PgPower
  :files: 
  - :classes: 
    - :methods: []

      :lines: 7
      :complexity: 0
      :class_name: PgPower
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: PgPower::IndexExistsError
    - :methods: 
      - :lines: 17
        :complexity: 6
        :name: PgPower::ConnectionAdapters#foreign_keys
      - :lines: 7
        :complexity: 4
        :name: PgPower::ConnectionAdapters#dependency_sql
      - :lines: 6
        :complexity: 3
        :name: PgPower::ConnectionAdapters#remove_foreign_key
      - :lines: 12
        :complexity: 3
        :name: PgPower::ConnectionAdapters#add_foreign_key
      - :lines: 13
        :complexity: 3
        :name: PgPower::ConnectionAdapters#add_foreign_key_sql
      - :lines: 9
        :complexity: 2
        :name: PgPower::ConnectionAdapters#remove_foreign_key_sql
      - :lines: 2
        :complexity: 2
        :name: PgPower::ConnectionAdapters#drop_table
      - :lines: 7
        :complexity: 2
        :name: PgPower::ConnectionAdapters#foreign_key_name
      - :lines: 2
        :complexity: 1
        :name: PgPower::ConnectionAdapters#foreign_key_column_id_from_table_name
      - :lines: 2
        :complexity: 1
        :name: PgPower::ConnectionAdapters#supports_foreign_keys?
      :lines: 132
      :complexity: 27
      :class_name: PgPower::ConnectionAdapters
    :filename: lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
  - :classes: 
    - :methods: []

      :lines: 78
      :complexity: 20
      :class_name: ""
    :filename: spec/active_record/schema_dumper_spec.rb
  - :classes: 
    - :methods: []

      :lines: 2
      :complexity: 0
      :class_name: ActiveRecord
    - :methods: []

      :lines: 2
      :complexity: 0
      :class_name: ActiveRecord::ConnectionAdapters
    - :methods: 
      - :lines: 37
        :complexity: 10
        :name: ActiveRecord::ConnectionAdapters::SchemaStatements#index_exists?
      - :lines: 23
        :complexity: 8
        :name: ActiveRecord::ConnectionAdapters::SchemaStatements#add_index_options
      - :lines: 3
        :complexity: 1
        :name: ActiveRecord::ConnectionAdapters::SchemaStatements#add_index
      :lines: 94
      :complexity: 19
      :class_name: ActiveRecord::ConnectionAdapters::SchemaStatements
    :filename: lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
  - :classes: 
    - :methods: []

      :lines: 64
      :complexity: 17
      :class_name: ""
    :filename: spec/comment_methods_spec.rb
  - :classes: 
    - :methods: []

      :lines: 75
      :complexity: 16
      :class_name: ""
    :filename: spec/indexes_spec.rb
  - :classes: 
    - :methods: []

      :lines: 56
      :complexity: 13
      :class_name: ""
    :filename: spec/foreign_keys_spec.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: 
      - :lines: 29
        :complexity: 6
        :name: PgPower#foreign_keys
      - :lines: 17
        :complexity: 6
        :name: PgPower#tables_with_foreign_keys
      :lines: 55
      :complexity: 12
      :class_name: PgPower
    :filename: lib/pg_power/schema_dumper/foreigner_methods.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: 
      - :lines: 8
        :complexity: 2
        :name: PgPower#comments
      - :lines: 4
        :complexity: 2
        :name: PgPower#remove_column_comments
      - :lines: 4
        :complexity: 2
        :name: PgPower#set_column_comments
      - :lines: 3
        :complexity: 1
        :name: PgPower#remove_table_comment
      - :lines: 3
        :complexity: 1
        :name: PgPower#remove_column_comment
      - :lines: 3
        :complexity: 1
        :name: PgPower#set_column_comment
      - :lines: 3
        :complexity: 1
        :name: PgPower#set_table_comment
      - :lines: 2
        :complexity: 1
        :name: PgPower#supports_comments?
      :lines: 68
      :complexity: 11
      :class_name: PgPower
    :filename: lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
  - :classes: 
    - :methods: []

      :lines: 3
      :complexity: 0
      :class_name: PgPower
    - :methods: []

      :lines: 42
      :complexity: 10
      :class_name: PgPower::Engine
    :filename: lib/pg_power/engine.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: 
      - :lines: 3
        :complexity: 2
        :name: PgPower#invert_set_column_comments
      - :lines: 2
        :complexity: 1
        :name: PgPower#remove_column_comment
      - :lines: 3
        :complexity: 1
        :name: PgPower#invert_set_table_comment
      - :lines: 2
        :complexity: 1
        :name: PgPower#remove_column_comments
      - :lines: 4
        :complexity: 1
        :name: PgPower#invert_set_column_comment
      - :lines: 2
        :complexity: 1
        :name: PgPower#set_column_comments
      - :lines: 2
        :complexity: 1
        :name: PgPower#set_column_comment
      - :lines: 2
        :complexity: 1
        :name: PgPower#remove_table_comment
      - :lines: 2
        :complexity: 1
        :name: PgPower#set_table_comment
      :lines: 49
      :complexity: 10
      :class_name: PgPower
    :filename: lib/pg_power/migration/command_recorder/comment_methods.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: 
      - :lines: 2
        :complexity: 1
        :name: PgPower#connection
      - :lines: 4
        :complexity: 1
        :name: PgPower#to_schema_and_table
      - :lines: 3
        :complexity: 1
        :name: PgPower#table_exists?
      - :lines: 2
        :complexity: 1
        :name: PgPower#index_exists?
      - :lines: 4
        :complexity: 1
        :name: PgPower#has_foreign_key?
      - :lines: 4
        :complexity: 1
        :name: PgPower#get_column_comment
      - :lines: 4
        :complexity: 1
        :name: PgPower#get_table_comment
      :lines: 44
      :complexity: 7
      :class_name: PgPower
    :filename: spec/support/explorer.rb
  - :classes: 
    - :methods: []

      :lines: 80
      :complexity: 7
      :class_name: ""
    :filename: spec/dummy/db/schema.rb
  - :classes: 
    - :methods: []

      :lines: 17
      :complexity: 7
      :class_name: ""
    :filename: spec/schema_methods_spec.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: 
      - :lines: 2
        :complexity: 1
        :name: PgPower#remove_column_comments
      - :lines: 2
        :complexity: 1
        :name: PgPower#remove_column_comment
      - :lines: 2
        :complexity: 1
        :name: PgPower#remove_table_comment
      - :lines: 2
        :complexity: 1
        :name: PgPower#set_column_comments
      - :lines: 2
        :complexity: 1
        :name: PgPower#set_column_comment
      - :lines: 2
        :complexity: 1
        :name: PgPower#set_table_comment
      - :lines: 2
        :complexity: 1
        :name: PgPower#supports_comments?
      :lines: 59
      :complexity: 7
      :class_name: PgPower
    :filename: lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: 
      - :lines: 7
        :complexity: 2
        :name: PgPower#schemas
      - :lines: 4
        :complexity: 2
        :name: PgPower#non_public_schema_tables
      - :lines: 2
        :complexity: 1
        :name: PgPower#schema
      - :lines: 3
        :complexity: 1
        :name: PgPower#get_non_public_schema_table_names
      - :lines: 4
        :complexity: 1
        :name: PgPower#tables_with_schemas
      :lines: 43
      :complexity: 7
      :class_name: PgPower
    :filename: lib/pg_power/schema_dumper/schema_methods.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: 
      - :lines: 2
        :complexity: 1
        :name: PgPower#remove_column_comments
      - :lines: 2
        :complexity: 1
        :name: PgPower#remove_column_comment
      - :lines: 2
        :complexity: 1
        :name: PgPower#set_column_comments
      - :lines: 2
        :complexity: 1
        :name: PgPower#set_column_comment
      - :lines: 2
        :complexity: 1
        :name: PgPower#remove_table_comment
      - :lines: 2
        :complexity: 1
        :name: PgPower#set_table_comment
      :lines: 55
      :complexity: 6
      :class_name: PgPower
    :filename: lib/pg_power/connection_adapters/table/comment_methods.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: 
      - :lines: 16
        :complexity: 4
        :name: PgPower#dump_comments
      - :lines: 9
        :complexity: 2
        :name: PgPower#tables_with_comments
      :lines: 34
      :complexity: 6
      :class_name: PgPower
    :filename: lib/pg_power/schema_dumper/comment_methods.rb
  - :classes: 
    - :methods: []

      :lines: 5
      :complexity: 0
      :class_name: ActiveRecord
    - :methods: 
      - :lines: 23
        :complexity: 6
        :name: ActiveRecord::SchemaDumper#indexes
      :lines: 34
      :complexity: 6
      :class_name: ActiveRecord::SchemaDumper
    :filename: lib/core_ext/active_record/schema_dumper.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: 
      - :lines: 13
        :complexity: 3
        :name: PgPower#invert_add_foreign_key
      - :lines: 2
        :complexity: 1
        :name: PgPower#remove_foreign_key
      - :lines: 2
        :complexity: 1
        :name: PgPower#add_foreign_key
      :lines: 26
      :complexity: 5
      :class_name: PgPower
    :filename: lib/pg_power/migration/command_recorder/foreigner_methods.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: 
      - :lines: 9
        :complexity: 2
        :name: PgPower#index_name_for_remove
      - :lines: 2
        :complexity: 1
        :name: PgPower#index_name
      - :lines: 2
        :complexity: 1
        :name: PgPower#supports_partial_index?
      :lines: 39
      :complexity: 4
      :class_name: PgPower
    :filename: lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: 
      - :lines: 9
        :complexity: 2
        :name: PgPower#references_with_foreign_keys
      - :lines: 2
        :complexity: 1
        :name: PgPower#remove_foreign_key
      - :lines: 2
        :complexity: 1
        :name: PgPower#foreign_key
      :lines: 47
      :complexity: 4
      :class_name: PgPower
    :filename: lib/pg_power/connection_adapters/table/foreigner_methods.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: 
      - :lines: 2
        :complexity: 1
        :name: PgPower#invert_drop_schema
      - :lines: 2
        :complexity: 1
        :name: PgPower#invert_create_schema
      - :lines: 2
        :complexity: 1
        :name: PgPower#drop_schema
      - :lines: 2
        :complexity: 1
        :name: PgPower#create_schema
      :lines: 20
      :complexity: 4
      :class_name: PgPower
    :filename: lib/pg_power/migration/command_recorder/schema_methods.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: 
      - :lines: 2
        :complexity: 1
        :name: PgPower#foreign_keys
      - :lines: 1
        :complexity: 1
        :name: PgPower#remove_foreign_key
      - :lines: 1
        :complexity: 1
        :name: PgPower#add_foreign_key
      - :lines: 2
        :complexity: 1
        :name: PgPower#supports_foreign_keys?
      :lines: 64
      :complexity: 4
      :class_name: PgPower
    :filename: lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb
  - :classes: 
    - :methods: []

      :lines: 2
      :complexity: 0
      :class_name: ActiveRecord
    - :methods: []

      :lines: 5
      :complexity: 0
      :class_name: ActiveRecord::ConnectionAdapters
    - :methods: 
      - :lines: 23
        :complexity: 4
        :name: ActiveRecord::ConnectionAdapters::PostgreSQLAdapter#indexes
      :lines: 46
      :complexity: 4
      :class_name: ActiveRecord::ConnectionAdapters::PostgreSQLAdapter
    :filename: lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: 
      - :lines: 4
        :complexity: 2
        :name: PgPower#drop_table_with_schema_option
      - :lines: 4
        :complexity: 2
        :name: PgPower#create_table_with_schema_option
      :lines: 15
      :complexity: 4
      :class_name: PgPower
    :filename: lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb
  - :classes: 
    - :methods: []

      :lines: 8
      :complexity: 0
      :class_name: PgPower
    - :methods: 
      - :lines: 3
        :complexity: 1
        :name: PgPower::Tools#schemas
      - :lines: 3
        :complexity: 1
        :name: PgPower::Tools#drop_schema
      - :lines: 3
        :complexity: 1
        :name: PgPower::Tools#create_schema
      :lines: 21
      :complexity: 3
      :class_name: PgPower::Tools
    :filename: lib/pg_power/tools.rb
  - :classes: 
    - :methods: 
      - :lines: 5
        :complexity: 2
        :name: DemographyPopulationStatisctics#change
      :lines: 7
      :complexity: 2
      :class_name: DemographyPopulationStatisctics
    :filename: spec/dummy/db/migrate/20120301153650_demography_population_statisctics.rb
  - :classes: 
    - :methods: 
      - :lines: 21
        :complexity: 2
        :name: CreateDemographyCitizens#change
      :lines: 23
      :complexity: 2
      :class_name: CreateDemographyCitizens
    :filename: spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb
  - :classes: 
    - :methods: 
      - :lines: 13
        :complexity: 2
        :name: CreateDemographyCountries#change
      :lines: 15
      :complexity: 2
      :class_name: CreateDemographyCountries
    :filename: spec/dummy/db/migrate/20120106163810_create_demography_countries.rb
  - :classes: 
    - :methods: 
      - :lines: 2
        :complexity: 1
        :name: RemoveCommentsOnCountriesTable#down
      - :lines: 3
        :complexity: 1
        :name: RemoveCommentsOnCountriesTable#up
      :lines: 9
      :complexity: 2
      :class_name: RemoveCommentsOnCountriesTable
    :filename: spec/dummy/db/migrate/20120207103858_remove_comments_on_countries_table.rb
  - :classes: 
    - :methods: 
      - :lines: 18
        :complexity: 2
        :name: CreateUsers#change
      :lines: 20
      :complexity: 2
      :class_name: CreateUsers
    :filename: spec/dummy/db/migrate/20120106163544_create_users.rb
  - :classes: 
    - :methods: 
      - :lines: 7
        :complexity: 2
        :name: CreateCitiesTable#change
      :lines: 9
      :complexity: 2
      :class_name: CreateCitiesTable
    :filename: spec/dummy/db/migrate/20120209094937_create_cities_table.rb
  - :classes: 
    - :methods: 
      - :lines: 13
        :complexity: 2
        :name: CreatePets#change
      :lines: 15
      :complexity: 2
      :class_name: CreatePets
    :filename: spec/dummy/db/migrate/20120105112744_create_pets.rb
  - :classes: 
    - :methods: 
      - :lines: 4
        :complexity: 2
        :name: CreateDemographyNationalities#change
      :lines: 6
      :complexity: 2
      :class_name: CreateDemographyNationalities
    :filename: spec/dummy/db/migrate/20120301152819_create_demography_nationalities.rb
  - :classes: 
    - :methods: 
      - :lines: 2
        :complexity: 1
        :name: RemoveCommentOnPetsTable#down
      - :lines: 2
        :complexity: 1
        :name: RemoveCommentOnPetsTable#up
      :lines: 8
      :complexity: 2
      :class_name: RemoveCommentOnPetsTable
    :filename: spec/dummy/db/migrate/20120207112916_remove_comment_on_pets_table.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: 
      - :lines: 2
        :complexity: 1
        :name: PgPower#drop_schema
      - :lines: 2
        :complexity: 1
        :name: PgPower#create_schema
      :lines: 12
      :complexity: 2
      :class_name: PgPower
    :filename: lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb
  - :classes: 
    - :methods: 
      - :lines: 3
        :complexity: 1
        :name: RemoveForeignKeys#down
      - :lines: 3
        :complexity: 1
        :name: RemoveForeignKeys#up
      :lines: 10
      :complexity: 2
      :class_name: RemoveForeignKeys
    :filename: spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb
  - :classes: 
    - :methods: 
      - :lines: 4
        :complexity: 1
        :name: RemoveSomeCommentsOnCitizens#down
      - :lines: 2
        :complexity: 1
        :name: RemoveSomeCommentsOnCitizens#up
      :lines: 10
      :complexity: 2
      :class_name: RemoveSomeCommentsOnCitizens
    :filename: spec/dummy/db/migrate/20120208114020_remove_some_comments_on_citizens.rb
  - :classes: 
    - :methods: []

      :lines: 4
      :complexity: 1
      :class_name: ""
    :filename: spec/dummy/config/boot.rb
  - :classes: 
    - :methods: []

      :lines: 5
      :complexity: 1
      :class_name: ""
    :filename: spec/spec_helper.rb
  - :classes: 
    - :methods: 
      - :lines: 4
        :complexity: 1
        :name: AddDemographyCitizensActiveColumn#change
      :lines: 6
      :complexity: 1
      :class_name: AddDemographyCitizensActiveColumn
    :filename: spec/dummy/db/migrate/20120224204546_add_demography_citizens_active_column.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: []

      :lines: 18
      :complexity: 1
      :class_name: PgPower
    :filename: lib/pg_power/connection_adapters/abstract_adapter.rb
  - :classes: 
    - :methods: 
      - :lines: 2
        :complexity: 1
        :name: Demography#self.table_name_prefix
      :lines: 4
      :complexity: 1
      :class_name: Demography
    :filename: spec/dummy/app/models/demography.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: []

      :lines: 14
      :complexity: 1
      :class_name: PgPower
    :filename: lib/pg_power/connection_adapters/table.rb
  - :classes: 
    - :methods: []

      :lines: 29
      :complexity: 1
      :class_name: ""
    :filename: spec/dummy/config/environments/development.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: []

      :lines: 17
      :complexity: 1
      :class_name: PgPower
    :filename: lib/pg_power/schema_dumper.rb
  - :classes: 
    - :methods: []

      :lines: 59
      :complexity: 1
      :class_name: ""
    :filename: spec/dummy/config/environments/production.rb
  - :classes: 
    - :methods: []

      :lines: 38
      :complexity: 1
      :class_name: ""
    :filename: spec/dummy/config/environments/test.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: 
      - :lines: 2
        :complexity: 1
        :name: PgPower#supports_partial_index?
      :lines: 4
      :complexity: 1
      :class_name: PgPower
    :filename: lib/pg_power/connection_adapters/abstract_adapter/index_methods.rb
  - :classes: 
    - :methods: []

      :lines: 2
      :complexity: 1
      :class_name: ""
    :filename: spec/dummy/config/initializers/wrap_parameters.rb
  - :classes: 
    - :methods: []

      :lines: 57
      :complexity: 1
      :class_name: ""
    :filename: spec/dummy/config/routes.rb
  - :classes: 
    - :methods: 
      - :lines: 4
        :complexity: 1
        :name: CreateDemographySchema#change
      :lines: 6
      :complexity: 1
      :class_name: CreateDemographySchema
    :filename: spec/dummy/db/migrate/20120106163711_create_demography_schema.rb
  - :classes: 
    - :methods: 
      - :lines: 8
        :complexity: 1
        :name: AddForeignKeys#change
      :lines: 10
      :complexity: 1
      :class_name: AddForeignKeys
    :filename: spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb
  - :classes: 
    - :methods: 
      - :lines: 2
        :complexity: 1
        :name: RemoveDemographyNationalities#change
      :lines: 4
      :complexity: 1
      :class_name: RemoveDemographyNationalities
    :filename: spec/dummy/db/migrate/20120301171826_remove_demography_nationalities.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    :filename: spec/dummy/config/initializers/backtrace_silencers.rb
  - :classes: 
    - :methods: []

      :lines: 3
      :complexity: 0
      :class_name: PgPower
    :filename: lib/pg_power/migration.rb
  - :classes: 
    - :methods: []

      :lines: 3
      :complexity: 0
      :class_name: PgPower
    :filename: lib/pg_power/version.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: []

      :lines: 8
      :complexity: 0
      :class_name: PgPower
    :filename: lib/pg_power.rb
  - :classes: 
    - :methods: []

      :lines: 2
      :complexity: 0
      :class_name: ApplicationController
    :filename: spec/dummy/app/controllers/application_controller.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: []

      :lines: 13
      :complexity: 0
      :class_name: PgPower
    :filename: lib/pg_power/connection_adapters/postgresql_adapter.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ApplicationHelper
    :filename: spec/dummy/app/helpers/application_helper.rb
  - :classes: 
    - :methods: []

      :lines: 2
      :complexity: 0
      :class_name: Demography
    :filename: spec/dummy/app/models/demography/citizen.rb
  - :classes: 
    - :methods: []

      :lines: 2
      :complexity: 0
      :class_name: Demography
    :filename: spec/dummy/app/models/demography/country.rb
  - :classes: 
    - :methods: []

      :lines: 2
      :complexity: 0
      :class_name: User
    :filename: spec/dummy/app/models/user.rb
  - :classes: 
    - :methods: []

      :lines: 4
      :complexity: 0
      :class_name: PgPower
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: PgPower::IndexDefinition
    :filename: lib/pg_power/connection_adapters/index_definition.rb
  - :classes: 
    - :methods: []

      :lines: 3
      :complexity: 0
      :class_name: PgPower
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: PgPower::ForeignKeyDefinition
    :filename: lib/pg_power/connection_adapters/foreign_key_definition.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: []

      :lines: 2
      :complexity: 0
      :class_name: Dummy
    - :methods: []

      :lines: 34
      :complexity: 0
      :class_name: Dummy::Application
    :filename: spec/dummy/config/application.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    :filename: spec/dummy/config/environment.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    - :methods: []

      :lines: 10
      :complexity: 0
      :class_name: PgPower
    :filename: lib/pg_power/migration/command_recorder.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    :filename: spec/dummy/config/initializers/inflections.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    :filename: spec/dummy/config/initializers/mime_types.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    :filename: spec/dummy/config/initializers/secret_token.rb
  - :classes: 
    - :methods: []

      :lines: 1
      :complexity: 0
      :class_name: ""
    :filename: spec/dummy/config/initializers/session_store.rb
  - :classes: 
    - :methods: []

      :lines: 8
      :complexity: 0
      :class_name: PgPower
    :filename: lib/pg_power/connection_adapters.rb
:rcov: 
  lib/pg_power/version.rb: 
    :methods: {}

    :percent_run: 100
    :lines: 
    - :was_run: true
      :content: module PgPower
    - :was_run: true
      :content: "  # Version of pg_power gem."
    - :was_run: true
      :content: "  VERSION = \"0.1.3\""
    - :was_run: true
      :content: end
  lib/pg_power/connection_adapters/table.rb: 
    :methods: {}

    :percent_run: 100
    :lines: 
    - :was_run: true
      :content: "# Provides methods to extend {ActiveRecord::ConnectionAdapters::Table}"
    - :was_run: true
      :content: "# to support pg_power features."
    - :was_run: true
      :content: module PgPower::ConnectionAdapters::Table
    - :was_run: true
      :content: "  extend ActiveSupport::Autoload"
    - :was_run: true
      :content: "  extend ActiveSupport::Concern"
    - :was_run: true
      :content: "  autoload :CommentMethods"
    - :was_run: true
      :content: "  autoload :ForeignerMethods"
    - :was_run: true
      :content: "  include CommentMethods"
    - :was_run: true
      :content: "  include ForeignerMethods"
    - :was_run: true
      :content: "  included do"
    - :was_run: true
      :content: "    alias_method_chain :references, :foreign_keys"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: end
  lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :SchemaMethods)#drop_schema: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :SchemaMethods)#create_schema: 66.6666666666667
    :percent_run: 64
    :lines: 
    - :was_run: true
      :content: "# Provides methods to extend {ActiveRecord::ConnectionAdapters::PostgreSQLAdapter}"
    - :was_run: true
      :content: "# to support schemas feature."
    - :was_run: true
      :content: module PgPower::ConnectionAdapters::PostgreSQLAdapter::SchemaMethods
    - :was_run: true
      :content: "  # Creates new schema in DB."
    - :was_run: true
      :content: "  # @param [String] schema_name"
    - :was_run: true
      :content: "  def create_schema(schema_name)"
    - :was_run: false
      :content: "    ::PgPower::Tools.create_schema(schema_name)"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # Drops schema in DB."
    - :was_run: true
      :content: "  # @param [String] schema_name"
    - :was_run: true
      :content: "  def drop_schema(schema_name)"
    - :was_run: false
      :content: "    ::PgPower::Tools.drop_schema(schema_name)"
    - :was_run: false
      :content: "  end"
    - :was_run: false
      :content: end
  lib/pg_power/tools.rb: 
    :methods: 
      PgPower#create_schema: 75.0
      PgPower#schemas: 0.0
      PgPower#drop_schema: 75.0
    :percent_run: 77
    :lines: 
    - :was_run: true
      :content: module PgPower
    - :was_run: true
      :content: "  # Provides utility methods to work with PostgreSQL databases."
    - :was_run: true
      :content: "  # Usage:"
    - :was_run: true
      :content: "  #   PgPower::Tools.create_schema \"services\"  # => create new PG schema \"services\""
    - :was_run: true
      :content: "  #   PgPower::Tools.create_schema \"nets\""
    - :was_run: true
      :content: "  #   PgPower::Tools.drop_schema \"services\"    # => remove the schema"
    - :was_run: true
      :content: "  #   PgPower::Tools.schemas                   # => [\"public\", \"information_schema\", \"nets\"]"
    - :was_run: true
      :content: "  module Tools"
    - :was_run: true
      :content: "    extend self"
    - :was_run: true
      :content: "    # Creates PostgreSQL schema"
    - :was_run: true
      :content: "    def create_schema(schema_name)"
    - :was_run: false
      :content: "      sql = %{CREATE SCHEMA \"#{schema_name}\"}"
    - :was_run: false
      :content: "      ActiveRecord::Base.connection.execute sql"
    - :was_run: false
      :content: "    end"
    - :was_run: true
      :content: "    # Drops PostgreSQL schema"
    - :was_run: true
      :content: "    def drop_schema(schema_name)"
    - :was_run: false
      :content: "      sql = %{DROP SCHEMA \"#{schema_name}\"}"
    - :was_run: false
      :content: "      ActiveRecord::Base.connection.execute sql"
    - :was_run: false
      :content: "    end"
    - :was_run: true
      :content: "    # Returns an array of existing schemas."
    - :was_run: true
      :content: "    def schemas"
    - :was_run: true
      :content: "      sql = \"SELECT nspname FROM pg_namespace WHERE nspname !~ '^pg_.*' order by nspname\""
    - :was_run: true
      :content: "      ActiveRecord::Base.connection.query(sql).flatten"
    - :was_run: true
      :content: "    end"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: end
  lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#set_column_comments: 0.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#set_column_comment: 0.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#supports_comments?: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#remove_column_comment: 0.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#remove_table_comment: 0.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#remove_column_comments: 0.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :CommentMethods)#set_table_comment: 0.0
    :percent_run: 96
    :lines: 
    - :was_run: true
      :content: "# Extends {ActiveRecord::ConnectionAdapters::AbstractAdapter} with"
    - :was_run: true
      :content: "# empty methods for comments feature."
    - :was_run: true
      :content: module PgPower::ConnectionAdapters::AbstractAdapter::CommentMethods
    - :was_run: true
      :content: "  def supports_comments?"
    - :was_run: false
      :content: "    false"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # Sets a comment on the given table."
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  # ===== Example"
    - :was_run: true
      :content: "  # ====== Creating a comment on phone_numbers table"
    - :was_run: true
      :content: "  #  set_table_comment :phone_numbers, 'This table stores phone numbers that conform to the North American Numbering Plan.'"
    - :was_run: true
      :content: "  def set_table_comment(table_name, comment)"
    - :was_run: true
      :content: "    # Does nothing"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: "  # Sets a comment on a given column of a given table."
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  # ===== Example"
    - :was_run: true
      :content: "  # ====== Creating a comment on npa column of table phone_numbers"
    - :was_run: true
      :content: "  #  set_column_comment :phone_numbers, :npa, 'Numbering Plan Area Code - Allowed ranges: [2-9] for first digit, [0-9] for second and third digit.'"
    - :was_run: true
      :content: "  def set_column_comment(table_name, column_name, comment)"
    - :was_run: true
      :content: "    # Does nothing"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: "  # Sets comments on multiple columns.  'comments' is a hash of column_name => comment pairs."
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  # ===== Example"
    - :was_run: true
      :content: "  # ====== Setting comments on the columns of the phone_numbers table"
    - :was_run: true
      :content: "  #  set_column_comments :phone_numbers, :npa => 'Numbering Plan Area Code - Allowed ranges: [2-9] for first digit, [0-9] for second and third digit.',"
    - :was_run: true
      :content: "  #                                      :nxx => 'Central Office Number'"
    - :was_run: true
      :content: "  def set_column_comments(table_name, comments)"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: "  # Removes any comment from the given table."
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  # ===== Example"
    - :was_run: true
      :content: "  # ====== Removing comment from phone numbers table"
    - :was_run: true
      :content: "  #  remove_table_comment :phone_numbers"
    - :was_run: true
      :content: "  def remove_table_comment(table_name)"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: "  # Removes any comment from the given column of a given table."
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  # ===== Example"
    - :was_run: true
      :content: "  # ====== Removing comment from the npa column of table phone_numbers"
    - :was_run: true
      :content: "  #  remove_column_comment :phone_numbers, :npa"
    - :was_run: true
      :content: "  def remove_column_comment(table_name, column_name)"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: "  # Removes any comment from the given columns of a given table."
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  # ===== Example"
    - :was_run: true
      :content: "  # ====== Removing comment from the npa and nxx columns of table phone_numbers"
    - :was_run: true
      :content: "  #  remove_column_comments :phone_numbers, :npa, :nxx"
    - :was_run: true
      :content: "  def remove_column_comments(table_name, *column_names)"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: end
  lib/pg_power/engine.rb: 
    :methods: {}

    :percent_run: 97
    :lines: 
    - :was_run: true
      :content: module PgPower
    - :was_run: true
      :content: "  # :nodoc"
    - :was_run: true
      :content: "  class Engine < Rails::Engine"
    - :was_run: true
      :content: "    initializer 'pg_power' do"
    - :was_run: true
      :content: "      ActiveSupport.on_load(:active_record) do"
    - :was_run: true
      :content: "        # load monkey patches"
    - :was_run: true
      :content: "        ['schema_dumper',"
    - :was_run: true
      :content: "         'connection_adapters/postgresql_adapter',"
    - :was_run: true
      :content: "         'connection_adapters/abstract/schema_statements'].each do |path|"
    - :was_run: true
      :content: "          require PgPower::Engine.root + 'lib/core_ext/active_record/' + path"
    - :was_run: true
      :content: "        end"
    - :was_run: true
      :content: "        ActiveRecord::SchemaDumper.class_eval do"
    - :was_run: true
      :content: "          include PgPower::SchemaDumper"
    - :was_run: true
      :content: "        end"
    - :was_run: true
      :content: "        if defined?(ActiveRecord::Migration::CommandRecorder)"
    - :was_run: true
      :content: "          ActiveRecord::Migration::CommandRecorder.class_eval do"
    - :was_run: true
      :content: "            include ::PgPower::Migration::CommandRecorder"
    - :was_run: true
      :content: "          end"
    - :was_run: true
      :content: "        end"
    - :was_run: true
      :content: "        ActiveRecord::ConnectionAdapters::Table.module_eval do"
    - :was_run: true
      :content: "          include PgPower::ConnectionAdapters::Table"
    - :was_run: true
      :content: "        end"
    - :was_run: true
      :content: "        ActiveRecord::ConnectionAdapters::AbstractAdapter.module_eval do"
    - :was_run: true
      :content: "          include PgPower::ConnectionAdapters::AbstractAdapter"
    - :was_run: true
      :content: "        end"
    - :was_run: true
      :content: "        if defined?(ActiveRecord::ConnectionAdapters::JdbcAdapter)"
    - :was_run: false
      :content: "          sql_adapter_class = ActiveRecord::ConnectionAdapters::JdbcAdapter"
    - :was_run: true
      :content: "        else"
    - :was_run: true
      :content: "          sql_adapter_class = ActiveRecord::ConnectionAdapters::PostgreSQLAdapter"
    - :was_run: true
      :content: "        end"
    - :was_run: true
      :content: "        sql_adapter_class.class_eval do"
    - :was_run: true
      :content: "          include PgPower::ConnectionAdapters::PostgreSQLAdapter"
    - :was_run: true
      :content: "        end"
    - :was_run: true
      :content: "      end"
    - :was_run: true
      :content: "    end"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: end
  lib/pg_power/schema_dumper/schema_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)#non_public_schema_tables: 0.0
      s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)#schema: 0.0
      s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)#tables_with_schemas: 0.0
      s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)#schemas: 0.0
      s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :SchemaMethods)#get_non_public_schema_table_names: 0.0
    :percent_run: 100
    :lines: 
    - :was_run: true
      :content: "# Extends ActiveRecord::SchemaDumper class to dump schemas other than \"public\""
    - :was_run: true
      :content: "# and tables from those schemas."
    - :was_run: true
      :content: module PgPower::SchemaDumper::SchemaMethods
    - :was_run: true
      :content: "  # * Dumps schemas."
    - :was_run: true
      :content: "  # * Dumps tables from public schema using native #tables method."
    - :was_run: true
      :content: "  # * Dumps tables from schemas other than public."
    - :was_run: true
      :content: "  def tables_with_schemas(stream)"
    - :was_run: true
      :content: "    schemas(stream)"
    - :was_run: true
      :content: "    tables_without_schemas(stream)"
    - :was_run: true
      :content: "    non_public_schema_tables(stream)"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: "  # Generates code to create schemas."
    - :was_run: true
      :content: "  def schemas(stream)"
    - :was_run: true
      :content: "    # Don't create \"public\" schema since it exists by default."
    - :was_run: true
      :content: "    schema_names = PgPower::Tools.schemas - [\"public\", \"information_schema\"]"
    - :was_run: true
      :content: "    schema_names.each do |schema_name|"
    - :was_run: true
      :content: "      schema(schema_name, stream)"
    - :was_run: true
      :content: "    end"
    - :was_run: true
      :content: "    stream << \"\\n\""
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: "  private :schemas"
    - :was_run: true
      :content: "  # Generates code to create schema."
    - :was_run: true
      :content: "  def schema(schema_name, stream)"
    - :was_run: true
      :content: "    stream << \"  create_schema \\\"#{schema_name}\\\"\\n\""
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: "  private :schema"
    - :was_run: true
      :content: "  # Dumps tables from schemas other than public"
    - :was_run: true
      :content: "  def non_public_schema_tables(stream)"
    - :was_run: true
      :content: "    get_non_public_schema_table_names.each do |name|"
    - :was_run: true
      :content: "      table(name, stream)"
    - :was_run: true
      :content: "    end"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: "  private :non_public_schema_tables"
    - :was_run: true
      :content: "  # Returns a sorted list of non-public schema tables"
    - :was_run: true
      :content: "  # Usage:"
    - :was_run: true
      :content: "  #   get_non_public_schema_table_names # => ['demography.cities','demography.countries','politics.members']"
    - :was_run: true
      :content: "  def get_non_public_schema_table_names"
    - :was_run: true
      :content: "    result = @connection.query(<<-SQL, 'SCHEMA')"
    - :was_run: true
      :content: "      SELECT schemaname || '.' || tablename"
    - :was_run: true
      :content: "      FROM pg_tables"
    - :was_run: true
      :content: "      WHERE schemaname NOT IN ('pg_catalog', 'information_schema', 'public')"
    - :was_run: true
      :content: "      ORDER BY schemaname, tablename"
    - :was_run: true
      :content: "    SQL"
    - :was_run: true
      :content: "    result.flatten"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: "  private :get_non_public_schema_table_names"
    - :was_run: true
      :content: end
  lib/core_ext/active_record/schema_dumper.rb: 
    :methods: 
      ActiveRecord::SchemaDumper#indexes: 0.0
    :percent_run: 100
    :lines: 
    - :was_run: true
      :content: "module ActiveRecord #:nodoc:"
    - :was_run: true
      :content: "  # Patched version:  3.1.3"
    - :was_run: true
      :content: "  # Patched methods::"
    - :was_run: true
      :content: "  #   * indexes"
    - :was_run: true
      :content: "  class SchemaDumper #:nodoc:"
    - :was_run: true
      :content: "    # Writes out index-related details to the schema stream"
    - :was_run: true
      :content: "    #"
    - :was_run: true
      :content: "    # == Patch reason:"
    - :was_run: true
      :content: "    # {ActiveRecord::SchemaDumper#indexes} does not support writing out"
    - :was_run: true
      :content: "    # details related to partial indexes."
    - :was_run: true
      :content: "    #"
    - :was_run: true
      :content: "    # == Patch:"
    - :was_run: true
      :content: "    # Append :where clause if there's a partial index"
    - :was_run: true
      :content: "    #"
    - :was_run: true
      :content: "    def indexes(table, stream)"
    - :was_run: true
      :content: "      if (indexes = @connection.indexes(table)).any?"
    - :was_run: true
      :content: "        add_index_statements = indexes.map do |index|"
    - :was_run: true
      :content: "          statement_parts = ["
    - :was_run: true
      :content: "            ('add_index ' + index.table.inspect),"
    - :was_run: true
      :content: "            index.columns.inspect,"
    - :was_run: true
      :content: "            (':name => ' + index.name.inspect),"
    - :was_run: true
      :content: "          ]"
    - :was_run: true
      :content: "          statement_parts << ':unique => true' if index.unique"
    - :was_run: true
      :content: "          index_lengths = (index.lengths || []).compact"
    - :was_run: true
      :content: "          statement_parts << (':length => ' + Hash[index.columns.zip(index.lengths)].inspect) unless index_lengths.empty?"
    - :was_run: true
      :content: "          # Patch"
    - :was_run: true
      :content: "          #  Append :where clause if a partial index"
    - :was_run: true
      :content: "          statement_parts << (':where => ' + index.where.inspect) if index.where"
    - :was_run: true
      :content: "          '  ' + statement_parts.join(', ')"
    - :was_run: true
      :content: "        end"
    - :was_run: true
      :content: "        stream.puts add_index_statements.sort.join(\"\\n\")"
    - :was_run: true
      :content: "        stream.puts"
    - :was_run: true
      :content: "      end"
    - :was_run: true
      :content: "    end"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: end
  lib/pg_power/connection_adapters/foreign_key_definition.rb: 
    :methods: {}

    :percent_run: 100
    :lines: 
    - :was_run: true
      :content: module PgPower::ConnectionAdapters
    - :was_run: true
      :content: "  # Structure to store information about foreign keys related to from_table."
    - :was_run: true
      :content: "  class ForeignKeyDefinition < Struct.new(:from_table, :to_table, :options)"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: end
  lib/pg_power/connection_adapters/postgresql_adapter.rb: 
    :methods: {}

    :percent_run: 100
    :lines: 
    - :was_run: true
      :content: "# Provides methods to extend {ActiveRecord::ConnectionAdapters::PostgreSQLAdapter}"
    - :was_run: true
      :content: "# to support pg_power features."
    - :was_run: true
      :content: module PgPower::ConnectionAdapters::PostgreSQLAdapter
    - :was_run: true
      :content: "  extend ActiveSupport::Autoload"
    - :was_run: true
      :content: "  extend ActiveSupport::Concern"
    - :was_run: true
      :content: "  autoload :SchemaMethods   , 'pg_power/connection_adapters/postgresql_adapter/schema_methods'"
    - :was_run: true
      :content: "  autoload :CommentMethods  , 'pg_power/connection_adapters/postgresql_adapter/comment_methods'"
    - :was_run: true
      :content: "  autoload :ForeignerMethods, 'pg_power/connection_adapters/postgresql_adapter/foreigner_methods'"
    - :was_run: true
      :content: "  autoload :IndexMethods    , 'pg_power/connection_adapters/postgresql_adapter/index_methods'"
    - :was_run: true
      :content: "  include SchemaMethods"
    - :was_run: true
      :content: "  include CommentMethods"
    - :was_run: true
      :content: "  include ForeignerMethods"
    - :was_run: true
      :content: "  include IndexMethods"
    - :was_run: true
      :content: end
  lib/pg_power/connection_adapters.rb: 
    :methods: {}

    :percent_run: 100
    :lines: 
    - :was_run: true
      :content: "module PgPower::ConnectionAdapters # :nodoc:"
    - :was_run: true
      :content: "  extend ActiveSupport::Autoload"
    - :was_run: true
      :content: "  autoload :AbstractAdapter"
    - :was_run: true
      :content: "  autoload :PostgreSQLAdapter, 'pg_power/connection_adapters/postgresql_adapter'"
    - :was_run: true
      :content: "  autoload :Table"
    - :was_run: true
      :content: "  autoload :ForeignKeyDefinition"
    - :was_run: true
      :content: "  autoload :IndexDefinition, 'pg_power/connection_adapters/index_definition'"
    - :was_run: true
      :content: end
  lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)#supports_foreign_keys?: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)#remove_foreign_key: 0.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)#add_foreign_key: 0.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :ForeignerMethods)#foreign_keys: 66.6666666666667
    :percent_run: 92
    :lines: 
    - :was_run: true
      :content: "# Extends {ActiveRecord::ConnectionAdapters::AbstractAdapter} with"
    - :was_run: true
      :content: "# empty methods for foreign keys feature."
    - :was_run: true
      :content: module PgPower::ConnectionAdapters::AbstractAdapter::ForeignerMethods
    - :was_run: true
      :content: "  def supports_foreign_keys?"
    - :was_run: false
      :content: "    false"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # Adds a new foreign key to the +from_table+, referencing the primary key of +to_table+"
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  # The foreign key will be named after the from and to tables unless you pass"
    - :was_run: true
      :content: "  # <tt>:name</tt> as an option."
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  # ===== Examples"
    - :was_run: true
      :content: "  # ====== Creating a foreign key"
    - :was_run: true
      :content: "  # add_foreign_key(:comments, :posts)"
    - :was_run: true
      :content: "  # generates"
    - :was_run: true
      :content: "  # ALTER TABLE `comments` ADD CONSTRAINT"
    - :was_run: true
      :content: "  # `comments_post_id_fk` FOREIGN KEY (`post_id`) REFERENCES `posts` (`id`)"
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  # ====== Creating a named foreign key"
    - :was_run: true
      :content: "  # add_foreign_key(:comments, :posts, :name => 'comments_belongs_to_posts')"
    - :was_run: true
      :content: "  # generates"
    - :was_run: true
      :content: "  # ALTER TABLE `comments` ADD CONSTRAINT"
    - :was_run: true
      :content: "  # `comments_belongs_to_posts` FOREIGN KEY (`post_id`) REFERENCES `posts` (`id`)"
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  # ====== Creating a cascading foreign_key on a custom column"
    - :was_run: true
      :content: "  # add_foreign_key(:people, :people, :column => 'best_friend_id', :dependent => :nullify)"
    - :was_run: true
      :content: "  # generates"
    - :was_run: true
      :content: "  # ALTER TABLE `people` ADD CONSTRAINT"
    - :was_run: true
      :content: "  # `people_best_friend_id_fk` FOREIGN KEY (`best_friend_id`) REFERENCES `people` (`id`)"
    - :was_run: true
      :content: "  # ON DELETE SET NULL"
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  # === Supported options"
    - :was_run: true
      :content: "  # [:column]"
    - :was_run: true
      :content: "  # Specify the column name on the from_table that references the to_table. By default this is guessed"
    - :was_run: true
      :content: "  # to be the singular name of the to_table with \"_id\" suffixed. So a to_table of :posts will use \"post_id\""
    - :was_run: true
      :content: "  # as the default <tt>:column</tt>."
    - :was_run: true
      :content: "  # [:primary_key]"
    - :was_run: true
      :content: "  # Specify the column name on the to_table that is referenced by this foreign key. By default this is"
    - :was_run: true
      :content: "  # assumed to be \"id\"."
    - :was_run: true
      :content: "  # [:name]"
    - :was_run: true
      :content: "  # Specify the name of the foreign key constraint. This defaults to use from_table and foreign key column."
    - :was_run: true
      :content: "  # [:dependent]"
    - :was_run: true
      :content: "  # If set to <tt>:delete</tt>, the associated records in from_table are deleted when records in to_table table are deleted."
    - :was_run: true
      :content: "  # If set to <tt>:nullify</tt>, the foreign key column is set to +NULL+."
    - :was_run: true
      :content: "  # [:options]"
    - :was_run: true
      :content: "  # Any extra options you want appended to the foreign key definition."
    - :was_run: true
      :content: "  def add_foreign_key(from_table, to_table, options = {})"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: "  # Remove the given foreign key from the table."
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  # ===== Examples"
    - :was_run: true
      :content: "  # ====== Remove the suppliers_company_id_fk in the suppliers table."
    - :was_run: true
      :content: "  # remove_foreign_key :suppliers, :companies"
    - :was_run: true
      :content: "  # ====== Remove the foreign key named accounts_branch_id_fk in the accounts table."
    - :was_run: true
      :content: "  # remove_foreign_key :accounts, :column => :branch_id"
    - :was_run: true
      :content: "  # ====== Remove the foreign key named party_foreign_key in the accounts table."
    - :was_run: true
      :content: "  # remove_foreign_key :accounts, :name => :party_foreign_key"
    - :was_run: true
      :content: "  def remove_foreign_key(from_table, options)"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: "  # Return the foreign keys for the schema_dumper"
    - :was_run: true
      :content: "  def foreign_keys(table_name)"
    - :was_run: false
      :content: "    []"
    - :was_run: false
      :content: "  end"
    - :was_run: false
      :content: end
  lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb: 
    :methods: 
      ActiveRecord::PostgreSQLAdapter#indexes: 13.8888888888889
    :percent_run: 92
    :lines: 
    - :was_run: true
      :content: "module ActiveRecord # :nodoc:"
    - :was_run: true
      :content: "  module ConnectionAdapters # :nodoc:"
    - :was_run: true
      :content: "    # Patched version:  3.1.3"
    - :was_run: true
      :content: "    # Patched methods::"
    - :was_run: true
      :content: "    #   * indexes"
    - :was_run: true
      :content: "    class PostgreSQLAdapter"
    - :was_run: true
      :content: "      # Returns an array of indexes for the given table."
    - :was_run: true
      :content: "      #"
    - :was_run: true
      :content: "      # == Patch 1 reason:"
    - :was_run: true
      :content: "      # Since {ActiveRecord::SchemaDumper#tables} is patched to process tables"
    - :was_run: true
      :content: "      # with a schema prefix, the {#indexes} method receives table_name as"
    - :was_run: true
      :content: "      # \"<schema>.<table>\". This patch allows it to handle table names with"
    - :was_run: true
      :content: "      # a schema prefix."
    - :was_run: true
      :content: "      #"
    - :was_run: true
      :content: "      # == Patch 1:"
    - :was_run: true
      :content: "      # Search using provided schema if table_name includes schema name."
    - :was_run: true
      :content: "      #"
    - :was_run: true
      :content: "      # == Patch 2 reason:"
    - :was_run: true
      :content: "      # {ActiveRecord::ConnectionAdapters::PostgreSQLAdapter#indexes} is patched"
    - :was_run: true
      :content: "      # to support partial indexes using :where clause."
    - :was_run: true
      :content: "      #"
    - :was_run: true
      :content: "      # == Patch 2:"
    - :was_run: true
      :content: "      # Search the postgres indexdef for the where clause and pass the output to"
    - :was_run: true
      :content: "      # the custom {PgPower::ConnectionAdapters::IndexDefinition}"
    - :was_run: true
      :content: "      #"
    - :was_run: true
      :content: "      def indexes(table_name, name = nil)"
    - :was_run: true
      :content: "        schema, table = extract_schema_and_table(table_name)"
    - :was_run: true
      :content: "        schemas = schema ? \"ARRAY['#{schema}']\" : 'current_schemas(false)'"
    - :was_run: true
      :content: "        result = query(<<-SQL, name)"
    - :was_run: true
      :content: "          SELECT distinct i.relname, d.indisunique, d.indkey,  pg_get_indexdef(d.indexrelid), t.oid"
    - :was_run: true
      :content: "          FROM pg_class t"
    - :was_run: true
      :content: "          INNER JOIN pg_index d ON t.oid = d.indrelid"
    - :was_run: true
      :content: "          INNER JOIN pg_class i ON d.indexrelid = i.oid"
    - :was_run: true
      :content: "          WHERE i.relkind = 'i'"
    - :was_run: true
      :content: "            AND d.indisprimary = 'f'"
    - :was_run: true
      :content: "            AND t.relname = '#{table}'"
    - :was_run: true
      :content: "            AND i.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (#{schemas}) )"
    - :was_run: true
      :content: "         ORDER BY i.relname"
    - :was_run: true
      :content: "        SQL"
    - :was_run: true
      :content: "        result.map do |row|"
    - :was_run: true
      :content: "          index_name = row[0]"
    - :was_run: true
      :content: "          unique = row[1] == 't'"
    - :was_run: true
      :content: "          indkey = row[2].split(\" \")"
    - :was_run: true
      :content: "          inddef = row[3]"
    - :was_run: true
      :content: "          oid = row[4]"
    - :was_run: true
      :content: "          columns = Hash[query(<<-SQL, \"Columns for index #{row[0]} on #{table_name}\")]"
    - :was_run: true
      :content: "          SELECT a.attnum, a.attname"
    - :was_run: true
      :content: "          FROM pg_attribute a"
    - :was_run: true
      :content: "          WHERE a.attrelid = #{oid}"
    - :was_run: true
      :content: "          AND a.attnum IN (#{indkey.join(\",\")})"
    - :was_run: true
      :content: "          SQL"
    - :was_run: true
      :content: "          column_names = columns.values_at(*indkey).compact"
    - :was_run: true
      :content: "          where = inddef.scan(/WHERE (.+)$/).flatten[0]"
    - :was_run: true
      :content: "          # TODO Update lengths once we merge in ActiveRecord code that supports it. -dresselm 20120305"
    - :was_run: true
      :content: "          lengths = []"
    - :was_run: true
      :content: "          column_names.empty? ? nil : PgPower::ConnectionAdapters::IndexDefinition.new(table_name, index_name, unique, column_names, lengths, where)"
    - :was_run: false
      :content: "        end.compact"
    - :was_run: false
      :content: "      end"
    - :was_run: false
      :content: "    end"
    - :was_run: false
      :content: "  end"
    - :was_run: false
      :content: end
  lib/pg_power/migration/command_recorder/schema_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)#invert_create_schema: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)#drop_schema: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)#create_schema: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :SchemaMethods)#invert_drop_schema: 66.6666666666667
    :percent_run: 55
    :lines: 
    - :was_run: true
      :content: "# Provides methods to extend {ActiveRecord::Migration::CommandRecorder} to"
    - :was_run: true
      :content: "# support multi schemas feature."
    - :was_run: true
      :content: module  PgPower::Migration::CommandRecorder::SchemaMethods
    - :was_run: true
      :content: "  # :nodoc:"
    - :was_run: true
      :content: "  def create_schema(*args)"
    - :was_run: false
      :content: "    record(:create_schema, args)"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # :nodoc:"
    - :was_run: true
      :content: "  def drop_schema(*args)"
    - :was_run: false
      :content: "    record(:drop_schema, args)"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # :nodoc:"
    - :was_run: true
      :content: "  def invert_create_schema(args)"
    - :was_run: false
      :content: "    [:drop_schema, [args.first]]"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # :nodoc:"
    - :was_run: true
      :content: "  def invert_drop_schema(args)"
    - :was_run: false
      :content: "    [:create_schema, [args.first]]"
    - :was_run: false
      :content: "  end"
    - :was_run: false
      :content: end
  lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#set_table_comment: 75.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#supports_comments?: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#remove_column_comments: 80.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#set_column_comment: 75.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#set_column_comments: 80.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#comments: 0.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#remove_table_comment: 75.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :CommentMethods)#remove_column_comment: 75.0
    :percent_run: 69
    :lines: 
    - :was_run: true
      :content: "# Provides methods to extend {ActiveRecord::ConnectionAdapters::PostgreSQLAdapter}"
    - :was_run: true
      :content: "# to support comments feature."
    - :was_run: true
      :content: module PgPower::ConnectionAdapters::PostgreSQLAdapter::CommentMethods
    - :was_run: true
      :content: "  def supports_comments?"
    - :was_run: false
      :content: "    true"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # Executes SQL to set comment on table"
    - :was_run: true
      :content: "  # @param [String, Symbol] table_name name of table to set a comment on"
    - :was_run: true
      :content: "  # @param [String] comment"
    - :was_run: true
      :content: "  def set_table_comment(table_name, comment)"
    - :was_run: false
      :content: "    sql = \"COMMENT ON TABLE #{quote_table_name(table_name)} IS $$#{comment}$$;\""
    - :was_run: false
      :content: "    execute sql"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # Executes SQL to set comment on column."
    - :was_run: true
      :content: "  # @param [String, Symbol] table_name"
    - :was_run: true
      :content: "  # @param [String, Symbol] column_name"
    - :was_run: true
      :content: "  # @param [String] comment"
    - :was_run: true
      :content: "  def set_column_comment(table_name, column_name, comment)"
    - :was_run: false
      :content: "    sql = \"COMMENT ON COLUMN #{quote_table_name(table_name)}.#{quote_column_name(column_name)} IS $$#{comment}$$;\""
    - :was_run: false
      :content: "    execute sql"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # Sets comments on columns of passed table."
    - :was_run: true
      :content: "  # @param [String, Symbol] table_name"
    - :was_run: true
      :content: "  # @param [Hash] comments every key is a column name and value is a comment."
    - :was_run: true
      :content: "  def set_column_comments(table_name, comments)"
    - :was_run: false
      :content: "    comments.each_pair do |column_name, comment|"
    - :was_run: false
      :content: "      set_column_comment table_name, column_name, comment"
    - :was_run: false
      :content: "    end"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # Executes SQL to remove comment on passed table."
    - :was_run: true
      :content: "  # @param [String, Symbol] table_name"
    - :was_run: true
      :content: "  def remove_table_comment(table_name)"
    - :was_run: false
      :content: "    sql = \"COMMENT ON TABLE #{quote_table_name(table_name)} IS NULL;\""
    - :was_run: false
      :content: "    execute sql"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # Executes SQL to remove comment on column."
    - :was_run: true
      :content: "  # @param [String, Symbol] table_name"
    - :was_run: true
      :content: "  # @param [String, Symbol] column_name"
    - :was_run: true
      :content: "  def remove_column_comment(table_name, column_name)"
    - :was_run: false
      :content: "    sql = \"COMMENT ON COLUMN #{quote_table_name(table_name)}.#{quote_column_name(column_name)} IS NULL;\""
    - :was_run: false
      :content: "    execute sql"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # Remove comments on passed table columns."
    - :was_run: true
      :content: "  def remove_column_comments(table_name, *column_names)"
    - :was_run: false
      :content: "    column_names.each do |column_name|"
    - :was_run: false
      :content: "      remove_column_comment table_name, column_name"
    - :was_run: false
      :content: "    end"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # Fetches all comments related to passed table."
    - :was_run: true
      :content: "  # I returns table comment and column comments as well."
    - :was_run: true
      :content: "  # ===Example"
    - :was_run: true
      :content: "  #   comments(\"users\") # => [[ \"\"    , \"Comment on table\"       ],"
    - :was_run: true
      :content: "  #                           [\"id\"   , \"Comment on id column\"   ],"
    - :was_run: true
      :content: "  #                           [\"email\", \"Comment on email column\"]]"
    - :was_run: true
      :content: "  def comments(table_name)"
    - :was_run: true
      :content: "    relation_name, schema_name = table_name.split(\".\", 2).reverse"
    - :was_run: true
      :content: "    schema_name ||= \"public\" "
    - :was_run: true
      :content: "    com = select_all <<-SQL"
    - :was_run: true
      :content: "      SELECT a.attname AS column_name, d.description AS comment"
    - :was_run: true
      :content: "      FROM pg_description d"
    - :was_run: true
      :content: "        JOIN pg_class c on c.oid = d.objoid"
    - :was_run: true
      :content: "        LEFT OUTER JOIN pg_attribute a ON c.oid = a.attrelid AND a.attnum = d.objsubid"
    - :was_run: true
      :content: "        JOIN pg_namespace ON c.relnamespace = pg_namespace.oid"
    - :was_run: true
      :content: "      WHERE c.relkind = 'r' AND c.relname = '#{relation_name}' AND"
    - :was_run: true
      :content: "        pg_namespace.nspname = '#{schema_name}'"
    - :was_run: true
      :content: "    SQL"
    - :was_run: true
      :content: "    com.map do |row|"
    - :was_run: true
      :content: "      [ row['column_name'], row['comment'] ]"
    - :was_run: true
      :content: "    end"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: end
  lib/pg_power/schema_dumper.rb: 
    :methods: {}

    :percent_run: 100
    :lines: 
    - :was_run: true
      :content: "# Provides methods to extend {ActiveRecord::SchemaDumper} to appropriately"
    - :was_run: true
      :content: "# build schema.rb file with schemas, foreign keys and comments on columns"
    - :was_run: true
      :content: "# and tables."
    - :was_run: true
      :content: module PgPower::SchemaDumper
    - :was_run: true
      :content: "  extend ActiveSupport::Autoload"
    - :was_run: true
      :content: "  extend ActiveSupport::Concern"
    - :was_run: true
      :content: "  autoload :CommentMethods"
    - :was_run: true
      :content: "  autoload :SchemaMethods"
    - :was_run: true
      :content: "  autoload :ForeignerMethods"
    - :was_run: true
      :content: "  include CommentMethods"
    - :was_run: true
      :content: "  include SchemaMethods"
    - :was_run: true
      :content: "  include ForeignerMethods"
    - :was_run: true
      :content: "  included do"
    - :was_run: true
      :content: "    alias_method_chain :tables, :schemas"
    - :was_run: true
      :content: "    alias_method_chain :tables, :comments"
    - :was_run: true
      :content: "    alias_method_chain :tables, :foreign_keys"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: end
  lib/pg_power/connection_adapters/abstract_adapter.rb: 
    :methods: {}

    :percent_run: 100
    :lines: 
    - :was_run: true
      :content: "# Extends {ActiveRecord::ConnectionAdapters::AbstractAdapter} class."
    - :was_run: true
      :content: module PgPower::ConnectionAdapters::AbstractAdapter
    - :was_run: true
      :content: "  extend ActiveSupport::Autoload"
    - :was_run: true
      :content: "  extend ActiveSupport::Concern"
    - :was_run: true
      :content: "  autoload :CommentMethods"
    - :was_run: true
      :content: "  autoload :ForeignerMethods"
    - :was_run: true
      :content: "  autoload :SchemaMethods"
    - :was_run: true
      :content: "  autoload :IndexMethods"
    - :was_run: true
      :content: "  include CommentMethods"
    - :was_run: true
      :content: "  include ForeignerMethods"
    - :was_run: true
      :content: "  include SchemaMethods"
    - :was_run: true
      :content: "  include IndexMethods"
    - :was_run: true
      :content: "  included do"
    - :was_run: true
      :content: "    alias_method_chain :create_table, :schema_option"
    - :was_run: true
      :content: "    alias_method_chain :drop_table  , :schema_option"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: end
  lib/pg_power/schema_dumper/comment_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :CommentMethods)#tables_with_comments: 0.0
      s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :CommentMethods)#dump_comments: 0.0
    :percent_run: 100
    :lines: 
    - :was_run: true
      :content: "# Extends ActiveRecord::SchemaDumper class to dump comments on tables and columns."
    - :was_run: true
      :content: module PgPower::SchemaDumper::CommentMethods
    - :was_run: true
      :content: "  # Hooks {ActiveRecord::SchemaDumper#table} method to dump comments on"
    - :was_run: true
      :content: "  # table and columns."
    - :was_run: true
      :content: "  def tables_with_comments(stream)"
    - :was_run: true
      :content: "    tables_without_comments(stream)"
    - :was_run: true
      :content: "    table_names = @connection.tables.sort"
    - :was_run: true
      :content: "    table_names += get_non_public_schema_table_names.sort"
    - :was_run: true
      :content: "    table_names.each do |table_name|"
    - :was_run: true
      :content: "      dump_comments(table_name, stream)"
    - :was_run: true
      :content: "    end"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: "  # Finds all comments related to passed table and writes appropriated"
    - :was_run: true
      :content: "  # statements to stream."
    - :was_run: true
      :content: "  def dump_comments(table_name, stream)"
    - :was_run: true
      :content: "    unless (comments = @connection.comments(table_name)).empty?"
    - :was_run: true
      :content: "      comment_statements = comments.map do |row|"
    - :was_run: true
      :content: "        column_name = row[0]"
    - :was_run: true
      :content: "        comment = row[1].gsub(/'/, \"\\\\\\\\'\")"
    - :was_run: true
      :content: "        if column_name"
    - :was_run: true
      :content: "          \"  set_column_comment '#{table_name}', '#{column_name}', '#{comment}'\""
    - :was_run: true
      :content: "        else"
    - :was_run: true
      :content: "          \"  set_table_comment '#{table_name}', '#{comment}'\""
    - :was_run: true
      :content: "        end"
    - :was_run: true
      :content: "      end"
    - :was_run: true
      :content: "      stream.puts comment_statements.join(\"\\n\")"
    - :was_run: true
      :content: "      stream.puts"
    - :was_run: true
      :content: "    end"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: "  private :dump_comments"
    - :was_run: true
      :content: end
  lib/pg_power/migration/command_recorder/foreigner_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :ForeignerMethods)#add_foreign_key: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :ForeignerMethods)#invert_add_foreign_key: 91.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :ForeignerMethods)#remove_foreign_key: 66.6666666666667
    :percent_run: 36
    :lines: 
    - :was_run: true
      :content: "# Provides methods to extend {ActiveRecord::Migration::CommandRecorder} to"
    - :was_run: true
      :content: "# support foreign keys feature."
    - :was_run: true
      :content: module PgPower::Migration::CommandRecorder::ForeignerMethods
    - :was_run: true
      :content: "  # :nodoc:"
    - :was_run: true
      :content: "  def add_foreign_key(*args)"
    - :was_run: false
      :content: "    record(:add_foreign_key, args)"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # :nodoc:"
    - :was_run: true
      :content: "  def remove_foreign_key(*args)"
    - :was_run: false
      :content: "    record(:remove_foreign_key, args)"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # :nodoc:"
    - :was_run: true
      :content: "  def invert_add_foreign_key(args)"
    - :was_run: false
      :content: "    from_table, to_table, add_options = *args"
    - :was_run: false
      :content: "    add_options ||= {}"
    - :was_run: false
      :content: "    if add_options[:name]"
    - :was_run: false
      :content: "      options = {:name => add_options[:name]}"
    - :was_run: false
      :content: "    elsif add_options[:column]"
    - :was_run: false
      :content: "      options = {:column => add_options[:column]}"
    - :was_run: false
      :content: "    else"
    - :was_run: false
      :content: "      options = to_table"
    - :was_run: false
      :content: "    end"
    - :was_run: false
      :content: "    [:remove_foreign_key, [from_table, options]]"
    - :was_run: false
      :content: "  end"
    - :was_run: false
      :content: end
  lib/pg_power.rb: 
    :methods: {}

    :percent_run: 100
    :lines: 
    - :was_run: true
      :content: require "pg_power/engine"
    - :was_run: true
      :content: "# Rails engine which allows to use some PostgreSQL features:"
    - :was_run: true
      :content: "# * Schemas."
    - :was_run: true
      :content: "# * Comments on columns and tables."
    - :was_run: true
      :content: "# * Foreign keys."
    - :was_run: true
      :content: "# * Partial indexes."
    - :was_run: true
      :content: module PgPower
    - :was_run: true
      :content: "  extend ActiveSupport::Autoload"
    - :was_run: true
      :content: "  autoload :Adapter"
    - :was_run: true
      :content: "  autoload :SchemaDumper"
    - :was_run: true
      :content: "  autoload :Tools"
    - :was_run: true
      :content: "  autoload :Migration"
    - :was_run: true
      :content: "  autoload :ConnectionAdapters"
    - :was_run: true
      :content: end
  lib/pg_power/schema_dumper/foreigner_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :ForeignerMethods)#tables_with_foreign_keys: 31.25
      s(:colon2, s(:colon2, s(:const, :PgPower), :SchemaDumper), :ForeignerMethods)#foreign_keys: 15.3846153846154
    :percent_run: 82
    :lines: 
    - :was_run: true
      :content: "# Provides methods to extend {ActiveRecord::SchemaDumper} to dump"
    - :was_run: true
      :content: "# foreign keys."
    - :was_run: true
      :content: module PgPower::SchemaDumper::ForeignerMethods
    - :was_run: true
      :content: "  # Hooks {ActiveRecord::SchemaDumper#table} method to dump foreign keys."
    - :was_run: true
      :content: "  def tables_with_foreign_keys(stream)"
    - :was_run: true
      :content: "    tables_without_foreign_keys(stream)"
    - :was_run: true
      :content: "    table_names = @connection.tables.sort"
    - :was_run: true
      :content: "    table_names += get_non_public_schema_table_names.sort"
    - :was_run: true
      :content: "    table_names.sort.each do |table|"
    - :was_run: true
      :content: "      next if ['schema_migrations', ignore_tables].flatten.any? do |ignored|"
    - :was_run: true
      :content: "        case ignored"
    - :was_run: true
      :content: "        when String; table == ignored"
    - :was_run: false
      :content: "        when Regexp; table =~ ignored"
    - :was_run: false
      :content: "        else"
    - :was_run: false
      :content: "          raise StandardError, 'ActiveRecord::SchemaDumper.ignore_tables accepts an array of String and / or Regexp values.'"
    - :was_run: false
      :content: "        end"
    - :was_run: false
      :content: "      end"
    - :was_run: true
      :content: "      foreign_keys(table, stream)"
    - :was_run: true
      :content: "    end"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: "  # Finds all foreign keys on passed table and writes appropriated"
    - :was_run: true
      :content: "  # statements to stream."
    - :was_run: true
      :content: "  def foreign_keys(table_name, stream)"
    - :was_run: true
      :content: "    if (foreign_keys = @connection.foreign_keys(table_name)).any?"
    - :was_run: true
      :content: "      add_foreign_key_statements = foreign_keys.map do |foreign_key|"
    - :was_run: true
      :content: "        statement_parts = [ ('add_foreign_key ' + foreign_key.from_table.inspect) ]"
    - :was_run: true
      :content: "        statement_parts << foreign_key.to_table.inspect"
    - :was_run: true
      :content: "        statement_parts << (':name => ' + foreign_key.options[:name].inspect)"
    - :was_run: true
      :content: "        if foreign_key.options[:column] != \"#{foreign_key.to_table.singularize}_id\""
    - :was_run: true
      :content: "          statement_parts << (':column => ' + foreign_key.options[:column].inspect)"
    - :was_run: true
      :content: "        end"
    - :was_run: true
      :content: "        if foreign_key.options[:primary_key] != 'id'"
    - :was_run: false
      :content: "          statement_parts << (':primary_key => ' + foreign_key.options[:primary_key].inspect)"
    - :was_run: false
      :content: "        end"
    - :was_run: true
      :content: "        if foreign_key.options[:dependent].present?"
    - :was_run: false
      :content: "          statement_parts << (':dependent => ' + foreign_key.options[:dependent].inspect)"
    - :was_run: false
      :content: "        end"
    - :was_run: true
      :content: "        # Always exclude the index"
    - :was_run: true
      :content: "        #  If an index was created in a migration, it will get dumped to the schema"
    - :was_run: true
      :content: "        #  separately from the foreign key.  This will raise an exception if"
    - :was_run: true
      :content: "        #  add_foreign_key is run without :exclude_index => true."
    - :was_run: true
      :content: "        statement_parts << (':exclude_index => true')"
    - :was_run: true
      :content: "        '  ' + statement_parts.join(', ')"
    - :was_run: true
      :content: "      end"
    - :was_run: true
      :content: "      stream.puts add_foreign_key_statements.sort.join(\"\\n\")"
    - :was_run: true
      :content: "      stream.puts"
    - :was_run: true
      :content: "    end"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: "  private :foreign_keys"
    - :was_run: true
      :content: end
  lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb: 
    :methods: 
      ActiveRecord#add_index_options: 33.3333333333333
      ActiveRecord#index_exists?: 0.0
      ActiveRecord#add_index: 0.0
    :percent_run: 92
    :lines: 
    - :was_run: true
      :content: module ActiveRecord
    - :was_run: true
      :content: "  module ConnectionAdapters # :nodoc:"
    - :was_run: true
      :content: "    module SchemaStatements # :nodoc:"
    - :was_run: true
      :content: "      # Adds a new index to the table.  +column_name+ can be a single Symbol, or"
    - :was_run: true
      :content: "      # an Array of Symbols."
    - :was_run: true
      :content: "      #"
    - :was_run: true
      :content: "      # ====== Creating a partial index"
    - :was_run: true
      :content: "      #  add_index(:accounts, [:branch_id, :party_id], :unique => true, :where => \"active\")"
    - :was_run: true
      :content: "      # generates"
    - :was_run: true
      :content: "      #  CREATE UNIQUE INDEX index_accounts_on_branch_id_and_party_id ON accounts(branch_id, party_id) WHERE active"
    - :was_run: true
      :content: "      #"
    - :was_run: true
      :content: "      def add_index(table_name, column_name, options = {})"
    - :was_run: true
      :content: "        index_name, index_type, index_columns, index_options = add_index_options(table_name, column_name, options)"
    - :was_run: true
      :content: "        execute \"CREATE #{index_type} INDEX #{quote_column_name(index_name)} ON #{quote_table_name(table_name)} (#{index_columns})#{index_options}\""
    - :was_run: true
      :content: "      end"
    - :was_run: true
      :content: "      # Checks to see if an index exists on a table for a given index definition."
    - :was_run: true
      :content: "      #"
    - :was_run: true
      :content: "      # === Examples"
    - :was_run: true
      :content: "      #  # Check that a partial index exists"
    - :was_run: true
      :content: "      #  index_exists?(:suppliers, :company_id, :where => 'active')"
    - :was_run: true
      :content: "      #"
    - :was_run: true
      :content: "      #  # GIVEN: \"index_suppliers_on_company_id\" UNIQUE, btree (company_id) WHERE active"
    - :was_run: true
      :content: "      #  index_exists?(:suppliers, :company_id, :unique => true, :where => 'active') => true"
    - :was_run: true
      :content: "      #  index_exists?(:suppliers, :company_id, :unique => true) => false"
    - :was_run: true
      :content: "      #"
    - :was_run: true
      :content: "      def index_exists?(table_name, column_name, options = {})"
    - :was_run: true
      :content: "        column_names = Array.wrap(column_name)"
    - :was_run: true
      :content: "        index_name = options.key?(:name) ? options[:name].to_s : index_name(table_name, :column => column_names)"
    - :was_run: true
      :content: "        # Always compare the index name"
    - :was_run: true
      :content: "        default_comparator = lambda { |index| index.name == index_name }"
    - :was_run: true
      :content: "        comparators = [default_comparator]"
    - :was_run: true
      :content: "        # Add a comparator for each index option that is part of the query"
    - :was_run: true
      :content: "        index_options = [:unique, :where]"
    - :was_run: true
      :content: "        index_options.each do |index_option|"
    - :was_run: true
      :content: "          comparators << if options.key?(index_option)"
    - :was_run: true
      :content: "            lambda do |index|"
    - :was_run: true
      :content: "              pg_where_clause = index.send(index_option)"
    - :was_run: true
      :content: "              # pg does nothing to boolean clauses, e.g. 'where active' => 'where active'"
    - :was_run: true
      :content: "              if pg_where_clause.is_a?(TrueClass) or pg_where_clause.is_a?(FalseClass)"
    - :was_run: true
      :content: "                pg_where_clause == options[index_option]"
    - :was_run: true
      :content: "              else"
    - :was_run: true
      :content: "                # pg adds parentheses around non-boolean clauses, e.g. 'where color IS NULL' => 'where (color is NULL)'"
    - :was_run: true
      :content: "                pg_where_clause.gsub!(/[()]/,'')"
    - :was_run: true
      :content: "                # pg casts string comparison ::text. e.g. \"where color = 'black'\" => \"where ((color)::text = 'black'::text)\""
    - :was_run: true
      :content: "                pg_where_clause.gsub!(/::text/,'')"
    - :was_run: true
      :content: "                # prevent case from impacting the comparison"
    - :was_run: true
      :content: "                pg_where_clause.downcase == options[index_option].downcase"
    - :was_run: true
      :content: "              end"
    - :was_run: true
      :content: "            end"
    - :was_run: true
      :content: "          else"
    - :was_run: true
      :content: "            # If the given index_option is not an argument to the index_exists? query,"
    - :was_run: true
      :content: "            # select only those pg indexes that do not have the component"
    - :was_run: true
      :content: "            lambda { |index| index.send(index_option).blank? }"
    - :was_run: true
      :content: "          end"
    - :was_run: true
      :content: "        end"
    - :was_run: true
      :content: "        # Search all indexes for any that match all comparators"
    - :was_run: true
      :content: "        indexes(table_name).any? do |index|"
    - :was_run: true
      :content: "          comparators.inject(true) { |ret, comparator| ret && comparator.call(index) }"
    - :was_run: true
      :content: "        end"
    - :was_run: true
      :content: "      end"
    - :was_run: true
      :content: "      # Returns options used to build out index SQL"
    - :was_run: true
      :content: "      #"
    - :was_run: true
      :content: "      # Added support for partial indexes implemented using the :where option"
    - :was_run: true
      :content: "      #"
    - :was_run: true
      :content: "      def add_index_options(table_name, column_name, options = {})"
    - :was_run: true
      :content: "        column_names = Array(column_name)"
    - :was_run: true
      :content: "        index_name   = index_name(table_name, :column => column_names)"
    - :was_run: true
      :content: "        if Hash === options # legacy support, since this param was a string"
    - :was_run: true
      :content: "          index_type = options[:unique] ? \"UNIQUE\" : \"\""
    - :was_run: true
      :content: "          index_name = options[:name].to_s if options.key?(:name)"
    - :was_run: true
      :content: "          if supports_partial_index?"
    - :was_run: true
      :content: "            index_options = options[:where] ? \" WHERE #{options[:where]}\" : \"\""
    - :was_run: true
      :content: "          end"
    - :was_run: false
      :content: "        else"
    - :was_run: false
      :content: "          index_type = options"
    - :was_run: false
      :content: "        end"
    - :was_run: true
      :content: "        if index_name.length > index_name_length"
    - :was_run: false
      :content: "          raise ArgumentError, \"Index name '#{index_name}' on table '#{table_name}' is too long; the limit is #{index_name_length} characters\""
    - :was_run: false
      :content: "        end"
    - :was_run: true
      :content: "        if index_name_exists?(table_name, index_name, false)"
    - :was_run: false
      :content: "          raise ArgumentError, \"Index name '#{index_name}' on table '#{table_name}' already exists\""
    - :was_run: false
      :content: "        end"
    - :was_run: true
      :content: "        index_columns = quoted_columns_for_index(column_names, options).join(\", \")"
    - :was_run: true
      :content: "        [index_name, index_type, index_columns, index_options]"
    - :was_run: true
      :content: "      end"
    - :was_run: true
      :content: "      protected :add_index_options"
    - :was_run: true
      :content: "    end"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: end
  lib/pg_power/connection_adapters/table/comment_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#set_column_comment: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#set_table_comment: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#set_column_comments: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#remove_column_comment: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#remove_table_comment: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :CommentMethods)#remove_column_comments: 66.6666666666667
    :percent_run: 75
    :lines: 
    - :was_run: true
      :content: "# Provides methods to extend {ActiveRecord::ConnectionAdapters::Table}"
    - :was_run: true
      :content: "# to support comments feature."
    - :was_run: true
      :content: module PgPower::ConnectionAdapters::Table::CommentMethods
    - :was_run: true
      :content: "  # Sets the comment on the table"
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  # ===== Example"
    - :was_run: true
      :content: "  # ====== Set comment on table"
    - :was_run: true
      :content: "  #   t.set_table_comment 'This table stores phone numbers that conform to the North American Numbering Plan.'"
    - :was_run: true
      :content: "  def set_table_comment(comment)"
    - :was_run: false
      :content: "    @base.set_table_comment(@table_name, comment)"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # Removes any comment from the table"
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  # ===== Example"
    - :was_run: true
      :content: "  # ====== Remove table comment"
    - :was_run: true
      :content: "  #   t.remove_table_comment"
    - :was_run: true
      :content: "  def remove_table_comment"
    - :was_run: false
      :content: "    @base.remove_table_comment(@table_name)"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # Sets the comment for a given column"
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  # ===== Example"
    - :was_run: true
      :content: "  # ====== Set comment on the npa column"
    - :was_run: true
      :content: "  #   t.set_column_comment :npa, 'Numbering Plan Area Code - Allowed ranges: [2-9] for first digit, [0-9] for second and third digit.'"
    - :was_run: true
      :content: "  def set_column_comment(column_name, comment)"
    - :was_run: false
      :content: "    @base.set_column_comment(@table_name, column_name, comment)"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # Sets comments on multiple columns.  'comments' is a hash of column_name => comment pairs."
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  # ===== Example"
    - :was_run: true
      :content: "  # ====== Setting comments on the columns of the phone_numbers table"
    - :was_run: true
      :content: "  #  t.set_column_comments :npa => 'Numbering Plan Area Code - Allowed ranges: [2-9] for first digit, [0-9] for second and third digit.',"
    - :was_run: true
      :content: "  #                        :nxx => 'Central Office Number'"
    - :was_run: true
      :content: "  def set_column_comments(comments)"
    - :was_run: false
      :content: "    @base.set_column_comments(@table_name, comments)"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # Removes any comment for a given column"
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  # ===== Example"
    - :was_run: true
      :content: "  # ====== Remove comment from the npa column"
    - :was_run: true
      :content: "  #   t.remove_column_comment :npa"
    - :was_run: true
      :content: "  def remove_column_comment(column_name)"
    - :was_run: false
      :content: "    @base.remove_column_comment(@table_name, column_name)"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # Removes any comments from the given columns"
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  # ===== Example"
    - :was_run: true
      :content: "  # ====== Remove comment from the npa and nxx columns"
    - :was_run: true
      :content: "  #   t.remove_column_comment :npa, :nxx"
    - :was_run: true
      :content: "  def remove_column_comments(*column_names)"
    - :was_run: false
      :content: "    @base.remove_column_comments(@table_name, *column_names)"
    - :was_run: false
      :content: "  end"
    - :was_run: false
      :content: end
  lib/pg_power/connection_adapters/index_definition.rb: 
    :methods: {}

    :percent_run: 100
    :lines: 
    - :was_run: true
      :content: module PgPower::ConnectionAdapters
    - :was_run: true
      :content: "  # Structure to store index parameters"
    - :was_run: true
      :content: "  # Overrides ActiveRecord::ConnectionAdapters::IndexDefinition with the additional :where parameter"
    - :was_run: true
      :content: "  class IndexDefinition < Struct.new(:table, :name, :unique, :columns, :lengths, :where)"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: end
  lib/pg_power/migration/command_recorder/comment_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#remove_column_comments: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#set_column_comments: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#invert_set_column_comments: 75.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#set_table_comment: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#set_column_comment: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#remove_table_comment: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#remove_column_comment: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#invert_set_table_comment: 75.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :Migration), :CommandRecorder), :CommentMethods)#invert_set_column_comment: 80.0
    :percent_run: 48
    :lines: 
    - :was_run: true
      :content: "# Provides methods to extend {ActiveRecord::Migration::CommandRecorder} to"
    - :was_run: true
      :content: "# support comments feature."
    - :was_run: true
      :content: module  PgPower::Migration::CommandRecorder::CommentMethods
    - :was_run: true
      :content: "  # :nodoc:"
    - :was_run: true
      :content: "  def set_table_comment(*args)"
    - :was_run: false
      :content: "    record(:set_table_comment, args)"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # :nodoc:"
    - :was_run: true
      :content: "  def remove_table_comment(*args)"
    - :was_run: false
      :content: "    record(:remove_table_comments, args)"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # :nodoc:"
    - :was_run: true
      :content: "  def set_column_comment(*args)"
    - :was_run: false
      :content: "    record(:set_column_comment, args)"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # :nodoc:"
    - :was_run: true
      :content: "  def set_column_comments(*args)"
    - :was_run: false
      :content: "    record(:set_column_comments, args)"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # :nodoc:"
    - :was_run: true
      :content: "  def remove_column_comment(*args)"
    - :was_run: false
      :content: "    record(:remove_column_comment, args)"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # :nodoc:"
    - :was_run: true
      :content: "  def remove_column_comments(*args)"
    - :was_run: false
      :content: "    record(:remove_column_comments, args)"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # :nodoc:"
    - :was_run: true
      :content: "  def invert_set_table_comment(args)"
    - :was_run: false
      :content: "    table_name = args.first"
    - :was_run: false
      :content: "    [:remove_table_comment, [table_name]]"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # :nodoc:"
    - :was_run: true
      :content: "  def invert_set_column_comment(args)"
    - :was_run: false
      :content: "    table_name = args[0]"
    - :was_run: false
      :content: "    column_name = args[1]"
    - :was_run: false
      :content: "    [:remove_column_comment, [table_name, column_name]]"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # :nodoc:"
    - :was_run: true
      :content: "  def invert_set_column_comments(args)"
    - :was_run: false
      :content: "    i_args = [args[0]] + args[1].collect{|name, value| name  }"
    - :was_run: false
      :content: "    [:remove_column_comments, i_args]"
    - :was_run: false
      :content: "  end"
    - :was_run: false
      :content: end
  lib/pg_power/connection_adapters/abstract_adapter/index_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :IndexMethods)#supports_partial_index?: 66.6666666666667
    :percent_run: 50
    :lines: 
    - :was_run: true
      :content: "# Extends {ActiveRecord::ConnectionAdapters::AbstractAdapter}"
    - :was_run: true
      :content: module PgPower::ConnectionAdapters::AbstractAdapter::IndexMethods
    - :was_run: true
      :content: "  def supports_partial_index?"
    - :was_run: false
      :content: "    false"
    - :was_run: false
      :content: "  end"
    - :was_run: false
      :content: end
  lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :IndexMethods)#index_name_for_remove: 88.8888888888889
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :IndexMethods)#index_name: 0.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :PostgreSQLAdapter), :IndexMethods)#supports_partial_index?: 0.0
    :percent_run: 77
    :lines: 
    - :was_run: true
      :content: "# Provides methods to extend {ActiveRecord::ConnectionAdapters::SchemaStatements}"
    - :was_run: true
      :content: "# to support index features."
    - :was_run: true
      :content: module PgPower::ConnectionAdapters::PostgreSQLAdapter::IndexMethods
    - :was_run: true
      :content: "  def supports_partial_index?"
    - :was_run: true
      :content: "    true"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: "  # Overrides ActiveRecord::ConnectionAdapters::SchemaStatements.index_name"
    - :was_run: true
      :content: "  # to support schema notation.  Converts dots in index name to underscores."
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  # === Example"
    - :was_run: true
      :content: "  #  add_index 'demography.citizens', :country_id"
    - :was_run: true
      :content: "  #  # produces"
    - :was_run: true
      :content: "  #  CREATE INDEX \"index_demography_citizens_on_country_id\" ON \"demography\".\"citizens\" (\"country_id\")"
    - :was_run: true
      :content: "  #  # instead of"
    - :was_run: true
      :content: "  #  CREATE INDEX \"index_demography.citizens_on_country_id\" ON \"demography\".\"citizens\" (\"country_id\")"
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  def index_name(table_name, options) #:nodoc:"
    - :was_run: true
      :content: "    super.gsub('.','_')"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: "  # Overrides ActiveRecord::ConnectionAdapters::SchemaStatements.index_name_for_remove"
    - :was_run: true
      :content: "  # to support schema notation. Prepends the schema name to the index name."
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  # === Example"
    - :was_run: true
      :content: "  #  drop_index 'demography.citizens', :country_id"
    - :was_run: true
      :content: "  #  # produces"
    - :was_run: true
      :content: "  #  DROP INDEX \"demography\".\"index_demography_citizens_on_country_id\""
    - :was_run: true
      :content: "  #  # instead of"
    - :was_run: true
      :content: "  #  DROP INDEX \"index_demography_citizens_on_country_id\""
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  def index_name_for_remove(table_name, options = {})"
    - :was_run: false
      :content: "    index_name = super"
    - :was_run: false
      :content: "    if table_name.include?('.') # schema notation"
    - :was_run: false
      :content: "      schema = table_name.split('.').first"
    - :was_run: false
      :content: "      \"#{schema}.#{index_name}\""
    - :was_run: false
      :content: "    else"
    - :was_run: false
      :content: "      index_name"
    - :was_run: false
      :content: "    end"
    - :was_run: false
      :content: "  end"
    - :was_run: false
      :content: end
  lib/pg_power/migration.rb: 
    :methods: {}

    :percent_run: 100
    :lines: 
    - :was_run: true
      :content: "module PgPower::Migration  # :nordoc:"
    - :was_run: true
      :content: "  extend ActiveSupport::Autoload"
    - :was_run: true
      :content: "  autoload :CommandRecorder"
    - :was_run: true
      :content: end
  lib/pg_power/migration/command_recorder.rb: 
    :methods: {}

    :percent_run: 100
    :lines: 
    - :was_run: true
      :content: "# Provides methods to extend {ActiveRecord::Migration::CommandRecorder} to "
    - :was_run: true
      :content: "# support pg_power features."
    - :was_run: true
      :content: module PgPower::Migration::CommandRecorder
    - :was_run: true
      :content: "  extend ActiveSupport::Autoload"
    - :was_run: true
      :content: "  autoload :SchemaMethods"
    - :was_run: true
      :content: "  autoload :CommentMethods"
    - :was_run: true
      :content: "  autoload :ForeignerMethods"
    - :was_run: true
      :content: "  include SchemaMethods"
    - :was_run: true
      :content: "  include CommentMethods"
    - :was_run: true
      :content: "  include ForeignerMethods"
    - :was_run: true
      :content: end
  :global_percent_run: 84.9
  lib/pg_power/connection_adapters/table/foreigner_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :ForeignerMethods)#foreign_key: 66.6666666666667
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :ForeignerMethods)#references_with_foreign_keys: 88.8888888888889
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :Table), :ForeignerMethods)#remove_foreign_key: 66.6666666666667
    :percent_run: 72
    :lines: 
    - :was_run: true
      :content: "# Provides methods to extend {ActiveRecord::ConnectionAdapters::Table}"
    - :was_run: true
      :content: "# to support foreign keys feature."
    - :was_run: true
      :content: module PgPower::ConnectionAdapters::Table::ForeignerMethods
    - :was_run: true
      :content: "  # Adds a new foreign key to the table. +to_table+ can be a single Symbol, or"
    - :was_run: true
      :content: "  # an Array of Symbols. See SchemaStatements#add_foreign_key"
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  # ===== Examples"
    - :was_run: true
      :content: "  # ====== Creating a simple foreign key"
    - :was_run: true
      :content: "  # t.foreign_key(:people)"
    - :was_run: true
      :content: "  # ====== Defining the column"
    - :was_run: true
      :content: "  # t.foreign_key(:people, :column => :sender_id)"
    - :was_run: true
      :content: "  # ====== Creating a named foreign key"
    - :was_run: true
      :content: "  # t.foreign_key(:people, :column => :sender_id, :name => 'sender_foreign_key')"
    - :was_run: true
      :content: "  # ====== Defining the column of the +to_table+."
    - :was_run: true
      :content: "  # t.foreign_key(:people, :column => :sender_id, :primary_key => :person_id)"
    - :was_run: true
      :content: "  def foreign_key(to_table, options = {})"
    - :was_run: false
      :content: "    @base.add_foreign_key(@table_name, to_table, options)"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # Remove the given foreign key from the table."
    - :was_run: true
      :content: "  #"
    - :was_run: true
      :content: "  # ===== Examples"
    - :was_run: true
      :content: "  # ====== Remove the suppliers_company_id_fk in the suppliers table."
    - :was_run: true
      :content: "  # change_table :suppliers do |t|"
    - :was_run: true
      :content: "  # t.remove_foreign_key :companies"
    - :was_run: true
      :content: "  # end"
    - :was_run: true
      :content: "  # ====== Remove the foreign key named accounts_branch_id_fk in the accounts table."
    - :was_run: true
      :content: "  # change_table :accounts do |t|"
    - :was_run: true
      :content: "  # t.remove_foreign_key :column => :branch_id"
    - :was_run: true
      :content: "  # end"
    - :was_run: true
      :content: "  # ====== Remove the foreign key named party_foreign_key in the accounts table."
    - :was_run: true
      :content: "  # change_table :accounts do |t|"
    - :was_run: true
      :content: "  # t.remove_index :name => :party_foreign_key"
    - :was_run: true
      :content: "  # end"
    - :was_run: true
      :content: "  def remove_foreign_key(options)"
    - :was_run: false
      :content: "    @base.remove_foreign_key(@table_name, options)"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # Deprecated"
    - :was_run: true
      :content: "  def references_with_foreign_keys(*args)"
    - :was_run: false
      :content: "    options = args.extract_options!"
    - :was_run: false
      :content: "    if fk_options = options.delete(:foreign_key)"
    - :was_run: false
      :content: "      p ActiveSupport::Deprecation.send(:deprecation_message, caller,"
    - :was_run: false
      :content: "        \":foreign_key in t.references is deprecated. \" \\"
    - :was_run: false
      :content: "        \"Use t.foreign_key instead\")"
    - :was_run: false
      :content: "    end"
    - :was_run: false
      :content: "    references_without_foreign_keys(*(args.dup << options))"
    - :was_run: false
      :content: "  end"
    - :was_run: false
      :content: end
  lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb: 
    :methods: 
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :SchemaMethods)#create_table_with_schema_option: 80.0
      s(:colon2, s(:colon2, s(:colon2, s(:const, :PgPower), :ConnectionAdapters), :AbstractAdapter), :SchemaMethods)#drop_table_with_schema_option: 80.0
    :percent_run: 44
    :lines: 
    - :was_run: true
      :content: "# Extends {ActiveRecord::ConnectionAdapters::AbstractAdapter} "
    - :was_run: true
      :content: "# with methods for multi schema support."
    - :was_run: true
      :content: module PgPower::ConnectionAdapters::AbstractAdapter::SchemaMethods
    - :was_run: true
      :content: "  # Provides :schema option to +create_table+ method."
    - :was_run: true
      :content: "  def create_table_with_schema_option(table_name, options = {}, &block)"
    - :was_run: false
      :content: "    schema_name = options.delete(:schema)"
    - :was_run: false
      :content: "    table_name  = \"#{schema_name}.#{table_name}\" if schema_name"
    - :was_run: false
      :content: "    create_table_without_schema_option(table_name, options, &block)"
    - :was_run: false
      :content: "  end"
    - :was_run: true
      :content: "  # Provides :schema option to +drop_table+ method."
    - :was_run: true
      :content: "  def drop_table_with_schema_option(table_name, options = {})"
    - :was_run: false
      :content: "    schema_name = options.delete(:schema)"
    - :was_run: false
      :content: "    table_name  = \"#{schema_name}.#{table_name}\" if schema_name"
    - :was_run: false
      :content: "    drop_table_without_schema_option(table_name, options)"
    - :was_run: false
      :content: "  end"
    - :was_run: false
      :content: end
  lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb: 
    :methods: {}

    :percent_run: 96
    :lines: 
    - :was_run: true
      :content: "module PgPower # :nodoc:"
    - :was_run: true
      :content: "  # Raised when an unexpected index exists"
    - :was_run: true
      :content: "  class IndexExistsError < StandardError"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: "  # Provides methods to extend {ActiveRecord::ConnectionAdapters::PostgreSQLAdapter}"
    - :was_run: true
      :content: "  # to support foreign keys feature."
    - :was_run: true
      :content: "  module ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods"
    - :was_run: true
      :content: "    def supports_foreign_keys?"
    - :was_run: false
      :content: "      true"
    - :was_run: false
      :content: "    end"
    - :was_run: true
      :content: "    # Fetches information about foreign keys related to passed table."
    - :was_run: true
      :content: "    # @param [String, Symbol] table_name name of table (e.g. \"users\", \"music.bands\")"
    - :was_run: true
      :content: "    # @return [Foreigner::ConnectionAdapters::ForeignKeyDefinition]"
    - :was_run: true
      :content: "    def foreign_keys(table_name)"
    - :was_run: true
      :content: "      relation, schema = table_name.to_s.split('.', 2).reverse"
    - :was_run: true
      :content: "      quoted_schema = schema ? \"'#{schema}'\" : \"ANY (current_schemas(false))\""
    - :was_run: true
      :content: "      fk_info = select_all <<-SQL"
    - :was_run: true
      :content: "        SELECT nsp.nspname || '.' || t2.relname AS to_table,"
    - :was_run: true
      :content: "               a1.attname    AS column     ,"
    - :was_run: true
      :content: "               a2.attname    AS primary_key,"
    - :was_run: true
      :content: "               c.conname     AS name       ,"
    - :was_run: true
      :content: "               c.confdeltype AS dependency"
    - :was_run: true
      :content: "        FROM pg_constraint c"
    - :was_run: true
      :content: "        JOIN pg_class t1 ON c.conrelid = t1.oid"
    - :was_run: true
      :content: "        JOIN pg_class t2 ON c.confrelid = t2.oid"
    - :was_run: true
      :content: "        JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid"
    - :was_run: true
      :content: "        JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid"
    - :was_run: true
      :content: "        JOIN pg_namespace t3 ON c.connamespace = t3.oid"
    - :was_run: true
      :content: "        JOIN pg_namespace nsp ON nsp.oid = t2.relnamespace"
    - :was_run: true
      :content: "        WHERE c.contype = 'f'"
    - :was_run: true
      :content: "        AND t1.relname = '#{relation}'"
    - :was_run: true
      :content: "        AND t3.nspname = #{quoted_schema}"
    - :was_run: true
      :content: "        ORDER BY c.conname"
    - :was_run: true
      :content: "      SQL"
    - :was_run: true
      :content: "      fk_info.map do |row|"
    - :was_run: true
      :content: "        options = {:column => row['column'], :name => row['name'], :primary_key => row['primary_key']}"
    - :was_run: true
      :content: "        options[:dependent] = case row['dependency']"
    - :was_run: true
      :content: "          when 'c' then :delete"
    - :was_run: true
      :content: "          when 'n' then :nullify"
    - :was_run: true
      :content: "          when 'r' then :restrict"
    - :was_run: true
      :content: "        end"
    - :was_run: true
      :content: "        PgPower::ConnectionAdapters::ForeignKeyDefinition.new(table_name, row['to_table'], options)"
    - :was_run: true
      :content: "      end"
    - :was_run: true
      :content: "    end"
    - :was_run: true
      :content: "    # Disables triggers and drops tables."
    - :was_run: true
      :content: "    def drop_table(*args)"
    - :was_run: false
      :content: "      disable_referential_integrity { super }"
    - :was_run: false
      :content: "    end"
    - :was_run: true
      :content: "    # Adds foreign key."
    - :was_run: true
      :content: "    #"
    - :was_run: true
      :content: "    # Ensures that an index is created for the foreign key, unless :exclude_index is true."
    - :was_run: true
      :content: "    #"
    - :was_run: true
      :content: "    # Raises a [PgPower::IndexExistsError] when :exclude_index is true, but the index already exists."
    - :was_run: true
      :content: "    #"
    - :was_run: true
      :content: "    # == Options:"
    - :was_run: true
      :content: "    # * :column"
    - :was_run: true
      :content: "    # * :primary_key"
    - :was_run: true
      :content: "    # * :dependent"
    - :was_run: true
      :content: "    # * :exclude_index [Boolean]"
    - :was_run: true
      :content: "    #"
    - :was_run: true
      :content: "    # @param [String, Symbol] from_table"
    - :was_run: true
      :content: "    # @param [String, Symbol] to_table"
    - :was_run: true
      :content: "    # @param [Hash] options"
    - :was_run: true
      :content: "    #"
    - :was_run: true
      :content: "    def add_foreign_key(from_table, to_table, options = {})"
    - :was_run: true
      :content: "      options[:column] ||= foreign_key_column_id_from_table_name(to_table)"
    - :was_run: true
      :content: "      options[:exclude_index] ||= false"
    - :was_run: true
      :content: "      if index_exists?(from_table, options[:column]) and !options[:exclude_index]"
    - :was_run: true
      :content: "        raise PgPower::IndexExistsError, \"The index, #{index_name(from_table, options[:column])}, already exists.  Use :exclude_index => true when adding the foreign key.\""
    - :was_run: true
      :content: "      end"
    - :was_run: true
      :content: "      sql = \"ALTER TABLE #{quote_table_name(from_table)} #{add_foreign_key_sql(from_table, to_table, options)}\""
    - :was_run: true
      :content: "      execute(sql)"
    - :was_run: true
      :content: "      add_index(from_table, options[:column]) unless options[:exclude_index]"
    - :was_run: true
      :content: "    end"
    - :was_run: true
      :content: "    # Returns chunk of SQL to add foreign key based on table names and options."
    - :was_run: true
      :content: "    def add_foreign_key_sql(from_table, to_table, options = {})"
    - :was_run: true
      :content: "      foreign_key_name = foreign_key_name(from_table, options[:column], options)"
    - :was_run: true
      :content: "      primary_key = options[:primary_key] || \"id\""
    - :was_run: true
      :content: "      dependency = dependency_sql(options[:dependent])"
    - :was_run: true
      :content: "      sql ="
    - :was_run: true
      :content: "        \"ADD CONSTRAINT #{quote_column_name(foreign_key_name)} \" +"
    - :was_run: true
      :content: "        \"FOREIGN KEY (#{quote_column_name(options[:column])}) \" +"
    - :was_run: true
      :content: "        \"REFERENCES #{quote_table_name(ActiveRecord::Migrator.proper_table_name(to_table))}(#{primary_key})\""
    - :was_run: true
      :content: "      sql << \" #{dependency}\" if dependency.present?"
    - :was_run: true
      :content: "      sql << \" #{options[:options]}\" if options[:options]"
    - :was_run: true
      :content: "      sql"
    - :was_run: true
      :content: "    end"
    - :was_run: true
      :content: "    #"
    - :was_run: true
      :content: "    # TODO Determine if we can refactor the method signature"
    - :was_run: true
      :content: "    #   remove_foreign_key(from_table, to_table_or_options_hash, options={}) => remove_foreign_key(from_table, to_table, options={})"
    - :was_run: true
      :content: "    #"
    - :was_run: true
      :content: "    # Removes foreign key."
    - :was_run: true
      :content: "    # @param [String, Symbol] from_table"
    - :was_run: true
      :content: "    # @param [String, Hash] to_table_or_options_hash"
    - :was_run: true
      :content: "    #"
    - :was_run: true
      :content: "    def remove_foreign_key(from_table, to_table_or_options_hash, options={})"
    - :was_run: true
      :content: "      execute \"ALTER TABLE #{quote_table_name(from_table)} #{remove_foreign_key_sql(from_table, to_table_or_options_hash)}\""
    - :was_run: true
      :content: "      options[:exclude_index] ||= false"
    - :was_run: true
      :content: "      column = (Hash === to_table_or_options_hash) ? to_table_or_options_hash[:column] : foreign_key_column_id_from_table_name(to_table_or_options_hash)"
    - :was_run: true
      :content: "      remove_index(from_table, column) unless options[:exclude_index] || !index_exists?(from_table, column)"
    - :was_run: true
      :content: "    end"
    - :was_run: true
      :content: "    # Returns chunk of SQL to  remove foreign key based on table name and options."
    - :was_run: true
      :content: "    def remove_foreign_key_sql(from_table, to_table_or_options_hash)"
    - :was_run: true
      :content: "      if Hash === to_table_or_options_hash"
    - :was_run: false
      :content: "        foreign_key_name = foreign_key_name(from_table, options[:column], options)"
    - :was_run: true
      :content: "      else"
    - :was_run: true
      :content: "        column = foreign_key_column_id_from_table_name(to_table_or_options_hash)"
    - :was_run: true
      :content: "        foreign_key_name = foreign_key_name(from_table, column)"
    - :was_run: true
      :content: "      end"
    - :was_run: true
      :content: "      \"DROP CONSTRAINT #{quote_column_name(foreign_key_name)}\""
    - :was_run: true
      :content: "    end"
    - :was_run: true
      :content: "    # Builds the foreign key column id from the referenced table"
    - :was_run: true
      :content: "    def foreign_key_column_id_from_table_name(table)"
    - :was_run: true
      :content: "      \"#{table.to_s.split('.').last.singularize}_id\""
    - :was_run: true
      :content: "    end"
    - :was_run: true
      :content: "    private :foreign_key_column_id_from_table_name"
    - :was_run: true
      :content: "    # Builds default name for constraint"
    - :was_run: true
      :content: "    def foreign_key_name(table, column, options = {})"
    - :was_run: true
      :content: "      if options[:name]"
    - :was_run: false
      :content: "        options[:name]"
    - :was_run: true
      :content: "      else"
    - :was_run: true
      :content: "        prefix = table.gsub(\".\", \"_\")"
    - :was_run: true
      :content: "        \"#{prefix}_#{column}_fk\""
    - :was_run: true
      :content: "      end"
    - :was_run: true
      :content: "    end"
    - :was_run: true
      :content: "    private :foreign_key_name"
    - :was_run: true
      :content: "    def dependency_sql(dependency)"
    - :was_run: true
      :content: "      case dependency"
    - :was_run: true
      :content: "        when :nullify then \"ON DELETE SET NULL\""
    - :was_run: true
      :content: "        when :delete then \"ON DELETE CASCADE\""
    - :was_run: true
      :content: "        when :restrict then \"ON DELETE RESTRICT\""
    - :was_run: true
      :content: "        else \"\""
    - :was_run: true
      :content: "      end"
    - :was_run: true
      :content: "    end"
    - :was_run: true
      :content: "    private :dependency_sql"
    - :was_run: true
      :content: "  end"
    - :was_run: true
      :content: end
:reek: 
  :matches: 
  - :code_smells: 
    - :type: DataClump
      :message: takes parameters [column_name, options, table_name] to 3 methods
      :method: ActiveRecord::ConnectionAdapters::SchemaStatements
    - :type: Duplication
      :message: calls index_name_length twice
      :method: ActiveRecord::ConnectionAdapters::SchemaStatements#add_index_options
    - :type: Duplication
      :message: calls options[:where] twice
      :method: ActiveRecord::ConnectionAdapters::SchemaStatements#add_index_options
    - :type: LongMethod
      :message: has approx 12 statements
      :method: ActiveRecord::ConnectionAdapters::SchemaStatements#add_index_options
    - :type: Duplication
      :message: calls index.send(index_option) twice
      :method: ActiveRecord::ConnectionAdapters::SchemaStatements#index_exists?
    - :type: Duplication
      :message: calls lambda 3 times
      :method: ActiveRecord::ConnectionAdapters::SchemaStatements#index_exists?
    - :type: Duplication
      :message: calls options[index_option] twice
      :method: ActiveRecord::ConnectionAdapters::SchemaStatements#index_exists?
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: ActiveRecord::ConnectionAdapters::SchemaStatements#index_exists?
    - :type: LongMethod
      :message: has approx 14 statements
      :method: ActiveRecord::ConnectionAdapters::SchemaStatements#index_exists?
    - :type: LowCohesion
      :message: refers to pg_where_clause more than self
      :method: ActiveRecord::ConnectionAdapters::SchemaStatements#index_exists?
    :file_path: ./lib/core_ext/active_record/connection_adapters/abstract/schema_statements.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: ActiveRecord::ConnectionAdapters::PostgreSQLAdapter
    - :type: Duplication
      :message: calls row[0] twice
      :method: ActiveRecord::ConnectionAdapters::PostgreSQLAdapter#indexes
    - :type: LongMethod
      :message: has approx 16 statements
      :method: ActiveRecord::ConnectionAdapters::PostgreSQLAdapter#indexes
    - :type: LowCohesion
      :message: refers to row more than self
      :method: ActiveRecord::ConnectionAdapters::PostgreSQLAdapter#indexes
    :file_path: ./lib/core_ext/active_record/connection_adapters/postgresql_adapter.rb
  - :code_smells: 
    - :type: Duplication
      :message: calls index.columns twice
      :method: ActiveRecord::SchemaDumper#indexes
    - :type: Duplication
      :message: calls index.lengths twice
      :method: ActiveRecord::SchemaDumper#indexes
    - :type: Duplication
      :message: calls index.where twice
      :method: ActiveRecord::SchemaDumper#indexes
    - :type: LongMethod
      :message: has approx 9 statements
      :method: ActiveRecord::SchemaDumper#indexes
    - :type: LowCohesion
      :message: refers to index more than self
      :method: ActiveRecord::SchemaDumper#indexes
    :file_path: ./lib/core_ext/active_record/schema_dumper.rb
  - :code_smells: []

    :file_path: ./lib/pg_power.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/abstract_adapter.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/abstract_adapter/comment_methods.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/abstract_adapter/foreigner_methods.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/abstract_adapter/index_methods.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/abstract_adapter/schema_methods.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/foreign_key_definition.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/index_definition.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/postgresql_adapter.rb
  - :code_smells: 
    - :type: LowCohesion
      :message: refers to row more than self
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::CommentMethods#comments
    :file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/comment_methods.rb
  - :code_smells: 
    - :type: DataClump
      :message: takes parameters [from_table, options] to 3 methods
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods
    - :type: Duplication
      :message: calls options[:column] 3 times
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#add_foreign_key
    - :type: Duplication
      :message: calls options[:exclude_index] twice
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#add_foreign_key
    - :type: LongMethod
      :message: has approx 6 statements
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#add_foreign_key
    - :type: Duplication
      :message: calls options[:column] twice
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#add_foreign_key_sql
    - :type: Duplication
      :message: calls options[:options] twice
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#add_foreign_key_sql
    - :type: LongMethod
      :message: has approx 7 statements
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#add_foreign_key_sql
    - :type: LowCohesion
      :message: refers to options more than self
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#add_foreign_key_sql
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#foreign_key_column_id_from_table_name
    - :type: LowCohesion
      :message: refers to table more than self
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#foreign_key_column_id_from_table_name
    - :type: Duplication
      :message: calls options[:name] twice
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#foreign_key_name
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#foreign_key_name
    - :type: LowCohesion
      :message: refers to options more than self
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#foreign_key_name
    - :type: LongMethod
      :message: has approx 10 statements
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#foreign_keys
    - :type: LowCohesion
      :message: refers to row more than self
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#foreign_keys
    - :type: Duplication
      :message: calls options twice
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::ForeignerMethods#remove_foreign_key_sql
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: PgPower::IndexExistsError
    :file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/foreigner_methods.rb
  - :code_smells: 
    - :type: LowCohesion
      :message: refers to table_name more than self
      :method: PgPower::ConnectionAdapters::PostgreSQLAdapter::IndexMethods#index_name_for_remove
    :file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/index_methods.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/postgresql_adapter/schema_methods.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/table.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/table/comment_methods.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/connection_adapters/table/foreigner_methods.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: PgPower::Engine
    :file_path: ./lib/pg_power/engine.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/migration.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/migration/command_recorder.rb
  - :code_smells: 
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: PgPower::Migration::CommandRecorder::CommentMethods#invert_set_column_comment
    - :type: LowCohesion
      :message: refers to args more than self
      :method: PgPower::Migration::CommandRecorder::CommentMethods#invert_set_column_comment
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: PgPower::Migration::CommandRecorder::CommentMethods#invert_set_column_comments
    - :type: LowCohesion
      :message: refers to args more than self
      :method: PgPower::Migration::CommandRecorder::CommentMethods#invert_set_column_comments
    - :type: LowCohesion
      :message: refers to args more than self
      :method: PgPower::Migration::CommandRecorder::CommentMethods#invert_set_table_comment
    :file_path: ./lib/pg_power/migration/command_recorder/comment_methods.rb
  - :code_smells: 
    - :type: Duplication
      :message: calls add_options[:column] twice
      :method: PgPower::Migration::CommandRecorder::ForeignerMethods#invert_add_foreign_key
    - :type: Duplication
      :message: calls add_options[:name] twice
      :method: PgPower::Migration::CommandRecorder::ForeignerMethods#invert_add_foreign_key
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: PgPower::Migration::CommandRecorder::ForeignerMethods#invert_add_foreign_key
    - :type: LongMethod
      :message: has approx 6 statements
      :method: PgPower::Migration::CommandRecorder::ForeignerMethods#invert_add_foreign_key
    - :type: LowCohesion
      :message: refers to add_options more than self
      :method: PgPower::Migration::CommandRecorder::ForeignerMethods#invert_add_foreign_key
    :file_path: ./lib/pg_power/migration/command_recorder/foreigner_methods.rb
  - :code_smells: 
    - :type: LowCohesion
      :message: refers to args more than self
      :method: PgPower::Migration::CommandRecorder::SchemaMethods#invert_create_schema
    - :type: LowCohesion
      :message: refers to args more than self
      :method: PgPower::Migration::CommandRecorder::SchemaMethods#invert_drop_schema
    :file_path: ./lib/pg_power/migration/command_recorder/schema_methods.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/schema_dumper.rb
  - :code_smells: 
    - :type: LongMethod
      :message: has approx 7 statements
      :method: PgPower::SchemaDumper::CommentMethods#dump_comments
    - :type: LowCohesion
      :message: refers to row more than self
      :method: PgPower::SchemaDumper::CommentMethods#dump_comments
    - :type: LowCohesion
      :message: refers to stream more than self
      :method: PgPower::SchemaDumper::CommentMethods#dump_comments
    :file_path: ./lib/pg_power/schema_dumper/comment_methods.rb
  - :code_smells: 
    - :type: Duplication
      :message: calls foreign_key.options 7 times
      :method: PgPower::SchemaDumper::ForeignerMethods#foreign_keys
    - :type: Duplication
      :message: calls foreign_key.options[:column] twice
      :method: PgPower::SchemaDumper::ForeignerMethods#foreign_keys
    - :type: Duplication
      :message: calls foreign_key.options[:dependent] twice
      :method: PgPower::SchemaDumper::ForeignerMethods#foreign_keys
    - :type: Duplication
      :message: calls foreign_key.options[:primary_key] twice
      :method: PgPower::SchemaDumper::ForeignerMethods#foreign_keys
    - :type: Duplication
      :message: calls foreign_key.to_table twice
      :method: PgPower::SchemaDumper::ForeignerMethods#foreign_keys
    - :type: LongMethod
      :message: has approx 11 statements
      :method: PgPower::SchemaDumper::ForeignerMethods#foreign_keys
    - :type: LowCohesion
      :message: refers to foreign_key more than self
      :method: PgPower::SchemaDumper::ForeignerMethods#foreign_keys
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: PgPower::SchemaDumper::ForeignerMethods#tables_with_foreign_keys
    - :type: LongMethod
      :message: has approx 7 statements
      :method: PgPower::SchemaDumper::ForeignerMethods#tables_with_foreign_keys
    :file_path: ./lib/pg_power/schema_dumper/foreigner_methods.rb
  - :code_smells: 
    - :type: LowCohesion
      :message: refers to stream more than self
      :method: PgPower::SchemaDumper::SchemaMethods#schema
    :file_path: ./lib/pg_power/schema_dumper/schema_methods.rb
  - :code_smells: 
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: PgPower::Tools#create_schema
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: PgPower::Tools#drop_schema
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: PgPower::Tools#schemas
    :file_path: ./lib/pg_power/tools.rb
  - :code_smells: []

    :file_path: ./lib/pg_power/version.rb
  - :code_smells: []

    :file_path: ./spec/active_record/schema_dumper_spec.rb
  - :code_smells: []

    :file_path: ./spec/comment_methods_spec.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: ApplicationController
    :file_path: ./spec/dummy/app/controllers/application_controller.rb
  - :code_smells: []

    :file_path: ./spec/dummy/app/helpers/application_helper.rb
  - :code_smells: []

    :file_path: ./spec/dummy/app/models/demography.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: Demography::Citizen
    :file_path: ./spec/dummy/app/models/demography/citizen.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: Demography::Country
    :file_path: ./spec/dummy/app/models/demography/country.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: User
    :file_path: ./spec/dummy/app/models/user.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: Dummy::Application
    :file_path: ./spec/dummy/config/application.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/boot.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/environment.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/environments/development.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/environments/production.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/environments/test.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/initializers/backtrace_silencers.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/initializers/inflections.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/initializers/mime_types.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/initializers/secret_token.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/initializers/session_store.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/initializers/wrap_parameters.rb
  - :code_smells: []

    :file_path: ./spec/dummy/config/routes.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: CreatePets
    - :type: LongMethod
      :message: has approx 9 statements
      :method: CreatePets#change
    - :type: UncommunicativeName
      :message: has the variable name 't'
      :method: CreatePets#change
    - :type: LowCohesion
      :message: refers to t more than self
      :method: CreatePets#change
    :file_path: ./spec/dummy/db/migrate/20120105112744_create_pets.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: CreateUsers
    - :type: LongMethod
      :message: has approx 9 statements
      :method: CreateUsers#change
    - :type: UncommunicativeName
      :message: has the variable name 't'
      :method: CreateUsers#change
    :file_path: ./spec/dummy/db/migrate/20120106163544_create_users.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: CreateDemographySchema
    :file_path: ./spec/dummy/db/migrate/20120106163711_create_demography_schema.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: CreateDemographyCountries
    - :type: LongMethod
      :message: has approx 6 statements
      :method: CreateDemographyCountries#change
    - :type: UncommunicativeName
      :message: has the variable name 't'
      :method: CreateDemographyCountries#change
    :file_path: ./spec/dummy/db/migrate/20120106163810_create_demography_countries.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: CreateDemographyCitizens
    - :type: LongMethod
      :message: has approx 11 statements
      :method: CreateDemographyCitizens#change
    - :type: UncommunicativeName
      :message: has the variable name 't'
      :method: CreateDemographyCitizens#change
    - :type: LowCohesion
      :message: refers to t more than self
      :method: CreateDemographyCitizens#change
    :file_path: ./spec/dummy/db/migrate/20120106163820_create_demography_citizens.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: RemoveCommentsOnCountriesTable
    :file_path: ./spec/dummy/db/migrate/20120207103858_remove_comments_on_countries_table.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: RemoveCommentOnPetsTable
    :file_path: ./spec/dummy/db/migrate/20120207112916_remove_comment_on_pets_table.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: AddForeignKeys
    :file_path: ./spec/dummy/db/migrate/20120207150844_add_foreign_keys.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: RemoveForeignKeys
    :file_path: ./spec/dummy/db/migrate/20120207163652_remove_foreign_keys.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: RemoveSomeCommentsOnCitizens
    :file_path: ./spec/dummy/db/migrate/20120208114020_remove_some_comments_on_citizens.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: CreateCitiesTable
    - :type: UncommunicativeName
      :message: has the variable name 't'
      :method: CreateCitiesTable#change
    :file_path: ./spec/dummy/db/migrate/20120209094937_create_cities_table.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: AddDemographyCitizensActiveColumn
    :file_path: ./spec/dummy/db/migrate/20120224204546_add_demography_citizens_active_column.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: CreateDemographyNationalities
    - :type: UncommunicativeName
      :message: has the variable name 't'
      :method: CreateDemographyNationalities#change
    :file_path: ./spec/dummy/db/migrate/20120301152819_create_demography_nationalities.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: DemographyPopulationStatisctics
    - :type: UncommunicativeName
      :message: has the variable name 't'
      :method: DemographyPopulationStatisctics#change
    - :type: LowCohesion
      :message: refers to t more than self
      :method: DemographyPopulationStatisctics#change
    :file_path: ./spec/dummy/db/migrate/20120301153650_demography_population_statisctics.rb
  - :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: RemoveDemographyNationalities
    :file_path: ./spec/dummy/db/migrate/20120301171826_remove_demography_nationalities.rb
  - :code_smells: []

    :file_path: ./spec/dummy/db/schema.rb
  - :code_smells: []

    :file_path: ./spec/foreign_keys_spec.rb
  - :code_smells: []

    :file_path: ./spec/indexes_spec.rb
  - :code_smells: []

    :file_path: ./spec/schema_methods_spec.rb
  - :code_smells: []

    :file_path: ./spec/spec_helper.rb
  - :code_smells: 
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: PgPower::Explorer#to_schema_and_table
    - :type: LowCohesion
      :message: refers to table_name more than self
      :method: PgPower::Explorer#to_schema_and_table
    :file_path: ./spec/support/explorer.rb
